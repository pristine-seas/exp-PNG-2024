---
title: "PNG_2024_uvs_lpi_explore"
format: html
execute:
  eval: false
editor: visual
editor_options: 
  chunk_output_type: console
---

# Libraries

```{r}

rm(list = ls())
#options(repos="https://cran.rstudio.com" )
library(tidyverse) # data wrangling
library(stringi) # data manipulation
library(stringr) # data manipulation
library(readxl) # reading in excel files
library(treemapify) # tree map plots
library(ggVennDiagram) # venn diagrams
library(lessR) # doughnut plots


```

# Site Data

```{r}

sites<-readRDS("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/processed/sites.rds")

sites_uvs<-sites$uvs
total_sites_region<-sites_uvs %>%
  group_by(region) %>%
   dplyr::summarise(surveys = length(ps_site_id))

stations<-readRDS("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/processed/stations.rds")

stations_uvs<-stations$lpi

```

# Benthic cover

Setting up the data to include an additional functional group column that includes the bleaching and dead coral categories that were taken in Lovongai, Manus, and the Western Islands. Also creating a site length file to calculate covers at the site level as not all sites had two transects for pooled site cover graphs

```{r}

load("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/processed/lpi/lpi_staging.RData")


# The functional_group only has the broad Hard Coral Category. Creating a functional_group2 column that converts the bleached and dead into their own functional categories

cover_by_station_and_taxa$functional_group2<-cover_by_station_and_taxa$functional_group

cover_by_station_and_taxa$functional_group2<-ifelse(cover_by_station_and_taxa$morphotaxon == "Hard coral - bleached", "hard coral - bleached", cover_by_station_and_taxa$functional_group2)


cover_by_station_and_taxa$functional_group2<-ifelse(cover_by_station_and_taxa$morphotaxon == "Hard coral - dead", "hard coral - dead", cover_by_station_and_taxa$functional_group2)

cover_by_station_and_taxa$functional_group2<-ifelse(cover_by_station_and_taxa$morphotaxon == "Hard coral", "hard coral - live", cover_by_station_and_taxa$functional_group2)

cover_by_station_and_taxa$functional_group2<-ifelse(cover_by_station_and_taxa$functional_group2 == "hard coral", "hard coral - live", cover_by_station_and_taxa$functional_group2)

# Getting number of sites as some sites had one transect while others had two. Need this for region and subregion average covers
site_lengths<-lpi_stations%>%
   group_by(ps_site_id)  %>%
   dplyr::summarise(length=length(ps_station_id))


```

# Transect Health Asessment Index

Health Index derived from live coral cover, algae, cca, and cyanobacteria. Coral cover, cca, and macroalgae percentage caare based from Boyle et al. 2017 as shown in the below image. However, here erect algae and turf are added together to create an "algae" category. The cyanobacteria category for Very Poor I set at  \>=15% based on Puyana et al. 2014 that had \>15% of the reef cover as an indicator of an unbalanced degrading system. The other categories I did fairly arbitrarily: Poor 10-15%, Fair 5-10%, Good 2-5%, and Excellent as \<2% cover. 

![](images/clipboard-2837370005.png)\

For each transect, averages within the final score column to each category were assigned based on where the LPI cover value was within the ranges. The exception being the Very Poor category which I assigned a 50 to any value under 60. So for example, if live coral cover was 45%, then that was assigned 95 and if algae was 45%, it was assigned 50. These 4 categories were then averaged across each transect and the resulting value was compared back to the Final Score column. If the overall transect average was 72, then that transect is placed in the Fair category.

```{r}

PNG_benthos_health<-cover_by_station_and_taxa %>%
    group_by(ps_station_id, functional_group2)%>%
  dplyr::summarise(pct_cover=sum(pct_cover))%>%
  pivot_wider(id_cols = c("ps_station_id"), names_from = functional_group2, values_from = pct_cover, values_fill = 0) %>%
    mutate(algae = rowSums(across(c("erect algae","turf")))) %>% 
    mutate(live_coral = `hard coral - live`) %>%
  mutate(`hard coral - live` = NULL) %>% 
  left_join(stations_uvs, by = "ps_station_id") %>% 
  data.frame ()


```

## By Score

```{r}

PNG_benthos_health2<-PNG_benthos_health %>%
  select(ps_station_id, cca, live_coral, algae, cyanobacteria) %>% 
  mutate(., CCA_score = with(., case_when(
    (cca >= 20 ) ~ "Excellent",
    (cca < 20 & cca >= 10) ~ "Good",
    (cca < 10 & cca >= 5) ~ "Fair",
    (cca < 5 & cca >= 2) ~ "Poor",
    (cca < 2) ~ "Very Poor"))) %>%
mutate(., Coral_score = with(., case_when(
  (live_coral >= 40 ) ~ "Excellent",
  (live_coral < 40 & live_coral >= 30) ~ "Good",
  (live_coral < 30 & live_coral >= 20) ~ "Fair",
  (live_coral < 20 & live_coral >= 10) ~ "Poor",
  (live_coral < 10) ~ "Very Poor"))) %>%
  mutate(., Algae_score = with(., case_when(
    (algae < 5 ) ~ "Excellent",
    (algae <10  & algae >= 5) ~ "Good",
    (algae < 20 & algae >= 10) ~ "Fair",
    (algae < 30 & algae >= 20) ~ "Poor",
    (algae >= 30) ~ "Very Poor"))) %>%
  mutate(., Cyano_score = with(., case_when(
    (cyanobacteria < 2 ) ~ "Excellent",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "Good",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "Fair",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "Poor",
    (cyanobacteria >= 15) ~ "Very Poor"))) %>% 
  mutate(., CCA_score_value = as.numeric(with(., case_when(
    (cca >= 20 ) ~ "95",
    (cca < 20 & cca >= 10) ~ "85",
    (cca < 10 & cca >= 5) ~ "75",
    (cca < 5 & cca >= 2) ~ "65",
    (cca < 2) ~ "50")))) %>%
  mutate(., Coral_score_value = as.numeric(with(., case_when(
    (live_coral >= 40 ) ~ "95",
    (live_coral < 40 & live_coral >= 30) ~ "85",
    (live_coral < 30 & live_coral >= 20) ~ "75",
    (live_coral < 20 & live_coral >= 10) ~ "65",
    (live_coral < 10) ~ "50")))) %>%
  mutate(., Algae_score_value = as.numeric(with(., case_when(
    (algae < 5 ) ~ "95",
    (algae <10  & algae >= 5) ~ "85",
    (algae < 20 & algae >= 10) ~ "75",
    (algae < 30 & algae >= 20) ~ "65",
    (algae >= 30) ~ "50")))) %>%
  mutate(., Cyano_score_value = as.numeric(with(., case_when(
    (cyanobacteria < 2 ) ~ "95",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "85",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "75",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "65",
    (cyanobacteria >= 15) ~ "50")))) %>%
  mutate(rank_value = (CCA_score_value +Coral_score_value +Algae_score_value +Cyano_score_value)/4) %>%
  mutate(., Rank_score = with(., case_when( 
    (rank_value >= 90 ) ~ "Excellent",
    (rank_value < 90 & rank_value >= 80) ~ "Good",
    (rank_value < 80 & rank_value >=70) ~ "Fair",
    (rank_value < 70 & rank_value >=60) ~ "Poor",
    (rank_value < 60) ~ "Very Poor"))) %>%
  left_join(stations_uvs[,c("ps_station_id","ps_site_id","region","subregion","locality","habitat","exposure")], by = "ps_station_id")


### Creating a rank_score, color data frame to merge to be graphed locations because not all colors were expressesed

score= c("Excellent","Good", "Fair", "Poor","Very Poor")
colors_health = c("darkgreen","palegreen3","yellow","orange","darkred" )


doughnut_rank_color<-data.frame(score,colors_health)


```

Calculating percentages of poor and good sites across regions.

```{r}
# Getting percentage of combined Poor and VeryPoor
poor_region_sites<-PNG_benthos_health2 %>%
  group_by(region) %>%
  reframe(rank = rank_value<70) %>%
  group_by(region, rank) %>%
  tally() %>%
  mutate(rank = replace(rank, rank == "TRUE","Y")) %>% 
    mutate(rank = replace(rank, rank == "FALSE","N"))  %>% 
  pivot_wider(id_cols = region, names_from = rank, values_from = n) %>%
  mutate(other = N, poor = Y) %>% 
  select(-N, -Y) %>% 
 mutate(total = other + poor)%>%
  mutate(poor_percentage = (poor/total)*100)
  
  
# Getting percentage of combined Good and Excellent categories
good_region_sites<-PNG_benthos_health2 %>%
  group_by(region) %>%
  reframe(rank = rank_value>80) %>%
  group_by(region, rank) %>%
  tally() %>%
   mutate(rank = replace(rank, rank == "TRUE","Y")) %>% 
    mutate(rank = replace(rank, rank == "FALSE","N"))  %>% 
  pivot_wider(id_cols = region, names_from = rank, values_from = n) %>%
   mutate(other = N, good = Y) %>% 
  select(-N, -Y) %>% 
 mutate(total = other + good)%>%
  mutate(good_percentage = (good/total)*100)

# exposure
PNG_benthos_health2 %>% 
  group_by(Rank_score, habitat) %>%
  tally()


```

##### Tingwon

```{r}

ting_score<-PNG_benthos_health2 %>%
  filter(locality == "Tingwon") %>% 
   group_by(Rank_score) %>%
  tally() %>%
#  mutate(total = sum(n), percent = round((n/total)*100)) %>% 
  left_join(doughnut_rank_color,  by = c("Rank_score"="score")) %>%
  mutate(Rank_score = as.factor(Rank_score)) %>% 
  arrange(Rank_score) %>% 
  data_frame()

# Getting average rank_value for the middles of the doughnut
PNG_benthos_health2 %>%
  filter(locality == "Tingwon") %>% 
  select(rank_value) %>% 
  summarise(mean(rank_value))


pdf(file = "Tingwon_health_dounut_fill.pdf",width =5, height = 5 )
# Use style to change some parameter values
style( add.color="black", add.lwd=2, add_cex = 3)
PieChart(Rank_score, n, data = ting_score,
         fill = ting_score$colors_health, color = "black",labels = "input", labels_size =  1,
         main="Tingwon", hole=.5,labels_color= "black",
         values_size = 1.5,quiet = T, hole_fill = "yellow", add = "75",x1=0, y1=0, add.lwd=0.9)
    
dev.off()

```

##### Tsolik

```{r}

tsol_score<-PNG_benthos_health2 %>%
  filter(locality == "Tsolik") %>% 
   group_by(Rank_score) %>%
  tally() %>%
  mutate(total = sum(n), percent = round((n/total)*100)) %>% 
  left_join(doughnut_rank_color,  by = c("Rank_score"="score")) %>%
  mutate(Rank_score = as.factor(Rank_score)) %>% 
  arrange(Rank_score) %>% 
  data_frame()

# Getting average rank_value for the middles of the doughnut
PNG_benthos_health2 %>%
  filter(locality == "Tsolik") %>% 
  select(rank_value) %>% 
  summarise(mean(rank_value))


pdf(file = "Tsolik_health_dounut.pdf",width =5, height = 5 )
# Use style to change some parameter values
style( add.color="black", add.lwd=2, add_cex = 3)
PieChart(Rank_score, n, data = tsol_score,
         fill = tsol_score$colors_health, color = "black",labels = "input", labels_size =  1,
         main="Tsolik", hole=.5,labels_color= "black",
         values_size = 1.5,quiet = T, hole_fill = "orange", add = "60",x1=0, y1=0, add.lwd=0.9)
    
dev.off()

```

##### Au

```{r}
au_score<-PNG_benthos_health2 %>%
  filter(locality == "Au") %>% 
   group_by(Rank_score) %>%
  tally() %>%
  mutate(total = sum(n), percent = round((n/total)*100)) %>% 
  left_join(doughnut_rank_color,  by = c("Rank_score"="score")) %>%
  mutate(Rank_score = as.factor(Rank_score)) %>% 
  arrange(Rank_score) %>% 
  data_frame()

# Getting average rank_value for the middles of the doughnut
PNG_benthos_health2 %>%
  filter(locality == "Au") %>% 
  select(rank_value) %>% 
  summarise(mean(rank_value))


pdf(file = "Au_health_dounut.pdf",width =5, height = 5 )
# Use style to change some parameter values
style( add.color="black", add.lwd=2, add_cex = 3)
PieChart(Rank_score, n, data = au_score,
         fill = au_score$colors_health, color = "black",labels = "input", labels_size =  1,
         main="Au", hole=.5,labels_color= "black",
         values_size = 1.5,quiet = T, hole_fill = "yellow", add = "76",x1=0, y1=0, add.lwd=0.9)
    
dev.off()
```

##### Lovangai

```{r}

lov_score<-PNG_benthos_health2 %>%
  filter(region == "Lovongai") %>% 
   group_by(Rank_score) %>%
  tally() %>%
  mutate(total = sum(n), percent = round((n/total)*100)) %>% 
  left_join(doughnut_rank_color,  by = c("Rank_score"="score")) %>%
  mutate(Rank_score = as.factor(Rank_score)) %>% 
  arrange(Rank_score) %>% 
  data_frame()

# Getting average rank_value for the middles of the doughnut
PNG_benthos_health2 %>%
  filter(region == "Lovongai") %>% 
  select(rank_value) %>% 
  summarise(mean(rank_value))


pdf(file = "Lovongai_health_dounut_fill.pdf",width =5, height = 5 )
# Use style to change some parameter values
style( add.color="black", add.lwd=2, add_cex = 3)
PieChart(Rank_score, n, data = lov_score,
         fill = lov_score$colors_health, color = "black",
         main="Lovongai", hole=.5,labels_color= "black",labels_size =  1,labels = "input", 
         values_size = 1.5, hole_fill = "yellow",add = "72",x1=0, y1=0, add.lwd=0.9 )

dev.off()

```

##### Murat

```{r}

mur_score<-PNG_benthos_health2 %>%
  filter(region == "Murat") %>% 
   group_by(Rank_score) %>%
  tally() %>%
  mutate(total = sum(n), percent = round((n/total)*100)) %>% 
  left_join(doughnut_rank_color,  by = c("Rank_score"="score")) %>%
  mutate(Rank_score = as.factor(Rank_score)) %>% 
  arrange(Rank_score) %>% 
  data_frame()

# Getting average rank_value for the middles of the doughnut
PNG_benthos_health2 %>%
  filter(region == "Murat") %>% 
  select(rank_value) %>% 
  summarise(mean(rank_value))

# Use style to change some parameter values
style( add.color="black", add.lwd=2, add_cex = 3)
pdf(file = "Murat_health_dounut_fill.pdf",width =5, height = 5 )
PieChart(Rank_score, n, data = mur_score,
         fill = mur_score$colors_health, color = "black",
         main="Murat", hole=.5,labels_color= "black",labels_size =  1.5,labels = "input", 
         values_size = 1, hole_fill = "yellow",add = "75",x1=0, y1=0, add.lwd=0.9 )
    
dev.off()

```

##### Emirau

```{r}

emi_score<-PNG_benthos_health2 %>%
  filter(subregion == "Emirau") %>% 
   group_by(Rank_score) %>%
  tally() %>%
  mutate(total = sum(n), percent = round((n/total)*100)) %>% 
  left_join(doughnut_rank_color,  by = c("Rank_score"="score")) %>%
  mutate(Rank_score = as.factor(Rank_score)) %>% 
  arrange(Rank_score) %>% 
  data_frame()

# Getting average rank_value for the middles of the doughnut
PNG_benthos_health2 %>%
  filter(subregion == "Emirau") %>% 
  select(rank_value) %>% 
  summarise(mean(rank_value))

# Use style to change some parameter values
style( add.color="black", add.lwd=2, add_cex = 3)
pdf(file = "Emirau_health_dounut_fill.pdf",width =5, height = 5 )
PieChart(Rank_score, n, data = emi_score,
         fill = emi_score$colors_health, color = "black",
         main="Emirau", hole=.5,labels_color= "black",labels_size =  2,labels = "input", 
         values_size = 1, hole_fill = "yellow",add = "70",x1=0, y1=0, add.lwd=0.9 )
    
dev.off()

```

##### Tench

```{r}

ten_score<-PNG_benthos_health2 %>%
  filter(subregion == "Tench") %>% 
   group_by(Rank_score) %>%
  tally() %>%
  mutate(total = sum(n), percent = round((n/total)*100)) %>% 
  left_join(doughnut_rank_color,  by = c("Rank_score"="score")) %>%
  mutate(Rank_score = as.factor(Rank_score)) %>% 
  arrange(Rank_score) %>% 
  data_frame()

# Getting average rank_value for the middles of the doughnut
PNG_benthos_health2 %>%
  filter(subregion == "Tench") %>% 
  select(rank_value) %>% 
  summarise(mean(rank_value))

# Use style to change some parameter values
style( add.color="black", add.lwd=2, add_cex = 3)
pdf(file = "Tench_health_dounut_fill.pdf",width =5, height = 5 )
PieChart(Rank_score, n, data = ten_score,
         fill = ten_score$colors_health, color = "black",
         main="Tench", hole=.5,labels_color= "black",labels_size =  1.5,labels = "input", 
         values_size = 1, hole_fill = "yellow",add = "75",x1=0, y1=0, add.lwd=0.9 )
    
dev.off()

```

##### Lolieng

```{r}

lol_score<-PNG_benthos_health2 %>%
  filter(locality == "Lolieng") %>% 
   group_by(Rank_score) %>%
  tally() %>%
  mutate(total = sum(n), percent = round((n/total)*100)) %>% 
  left_join(doughnut_rank_color,  by = c("Rank_score"="score")) %>%
  mutate(Rank_score = as.factor(Rank_score)) %>% 
  arrange(Rank_score) %>% 
  data_frame()

# Getting average rank_value for the middles of the doughnut
PNG_benthos_health2 %>%
  filter(locality == "Lolieng") %>% 
  select(rank_value) %>% 
  summarise(mean(rank_value))

# Use style to change some parameter values
style( add.color="black", add.lwd=2, add_cex = 3)
pdf(file = "Lolieng_health_dounut_fill.pdf",width =5, height = 5 )
PieChart(Rank_score, n, data = lol_score,
         fill = lol_score$colors_health, color = "black",
         main="Lolieng", hole=.5,labels_color= "black",labels_size =  1.5,labels = "input", 
         values_size = 1, hole_fill = "Green",add = "85",x1=0, y1=0, add.lwd=0.9 )
    
dev.off()

```

##### Western Islands

```{r}

west_score<-PNG_benthos_health2 %>%
  filter(region == "Western Islands") %>% 
   group_by(Rank_score) %>%
  tally() %>%
  mutate(total = sum(n), percent = round((n/total)*100)) %>% 
  left_join(doughnut_rank_color,  by = c("Rank_score"="score")) %>%
  mutate(Rank_score = as.factor(Rank_score)) %>% 
  arrange(Rank_score) %>% 
  data_frame()

PNG_benthos_health2 %>%
  filter(region == "Western Islands") %>% 
  select(rank_value) %>% 
  summarise(mean(rank_value))


pdf(file = "Western_Islands_health_dounut_fill.pdf",width =5, height = 5 )
PieChart(Rank_score, percent, data = west_score,
         fill = west_score$colors_health, color = "black",
         main="Western Islands",hole=.5,labels_color= "black",labels_size =  1.5,labels = "input", 
         values_size = 1, hole_fill = "yellow",add = "79",x1=0, y1=0, add.lwd=0.9 )
    
dev.off()

```

##### Manus

```{r}

man_score<-PNG_benthos_health2 %>%
  filter(region == "Manus") %>% 
   group_by(Rank_score) %>%
  tally() %>%
  mutate(total = sum(n), percent = round((n/total)*100)) %>% 
  left_join(doughnut_rank_color,  by = c("Rank_score"="score")) %>%
  mutate(Rank_score = as.factor(Rank_score)) %>% 
  arrange(Rank_score) %>% 
  data_frame()

PNG_benthos_health2 %>%
  filter(region == "Manus") %>% 
  select(rank_value) %>% 
  summarise(mean(rank_value))


pdf(file = "Manus_health_dounut.pdf",width =5, height = 5 )
PieChart(Rank_score, percent, data = man_score,
         fill = man_score$colors_health, color = "black",
         main="Manus", hole=.5,labels_color= "black",labels_size =  1.5,labels = "input", 
         values_size = 1, hole_fill = "yellow",add = "76",x1=0, y1=0, add.lwd=0.9 )
    
dev.off()

```

## By Benthic Category

For these, we are creating doughnut plots that have equal proportions of the 4 health categories (cca, algae, cyanobacteria, coral) but colored based on condition (excellent, good, fair, poor, very poor). These are done based on promised community engagements within Lovongai and Murat. Manus and Western will be pooled.

In order to make the equal parts, all doughnuts will link the below code for graphing purposes

```{r}


cover= c("cca","live_coral", "algae", "cyanobacteria")
percent = c(25,25,25,25)
dough_universal<-data.frame(cover, percent)

```

##### Tingwon

```{r}

ting_health<-PNG_benthos_health %>%
  filter(locality == "Tingwon") %>% 
   select(ps_station_id, cca,live_coral, algae, cyanobacteria, depth_strata) %>% 
    group_by(depth_strata) %>% 
 #select(cca,live_coral, algae, cyanobacteria) %>% 
  summarize(live_coral = mean(live_coral), cyanobacteria = mean(cyanobacteria), cca=mean(cca), algae= mean(algae)) %>% 
    mutate(., cca_color = with(., case_when(
    (cca >= 20 ) ~ "darkgreen",
    (cca < 20 & cca >= 10) ~ "palegreen3",
    (cca < 10 & cca >= 5) ~ "yellow",
    (cca < 5 & cca >= 2) ~ "orange",
    (cca < 2) ~ "darkred"))) %>%
mutate(., coral_color = with(., case_when(
  (live_coral >= 40 ) ~ "darkgreen",
  (live_coral < 40 & live_coral >= 30) ~ "palegreen3",
  (live_coral < 30 & live_coral >= 20) ~ "yellow",
  (live_coral < 20 & live_coral >= 10) ~ "orange",
  (live_coral < 10) ~ "darkred"))) %>%
  mutate(., algae_color = with(., case_when(
    (algae < 5 ) ~ "darkgreen",
    (algae <10  & algae >= 5) ~ "palegreen3",
    (algae < 20 & algae >= 10) ~ "yellow",
    (algae < 30 & algae >= 20) ~ "orange",
    (algae >= 30) ~ "darkred"))) %>%
  mutate(., cyanobacteria_color = with(., case_when(
    (cyanobacteria < 2 ) ~ "darkgreen",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "palegreen3",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "yellow",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "orange",
    (cyanobacteria >= 15) ~ "darkred"))) %>% 
  mutate(., cca_score_value = as.numeric(with(., case_when(
    (cca >= 20 ) ~ "95",
    (cca < 20 & cca >= 10) ~ "85",
    (cca < 10 & cca >= 5) ~ "75",
    (cca < 5 & cca >= 2) ~ "65",
    (cca < 2) ~ "50")))) %>%
  mutate(., coral_score_value = as.numeric(with(., case_when(
    (live_coral >= 40 ) ~ "95",
    (live_coral < 40 & live_coral >= 30) ~ "85",
    (live_coral < 30 & live_coral >= 20) ~ "75",
    (live_coral < 20 & live_coral >= 10) ~ "65",
    (live_coral < 10) ~ "50")))) %>%
  mutate(., algae_score_value = as.numeric(with(., case_when(
    (algae < 5 ) ~ "95",
    (algae <10  & algae >= 5) ~ "85",
    (algae < 20 & algae >= 10) ~ "75",
    (algae < 30 & algae >= 20) ~ "65",
    (algae >= 30) ~ "50")))) %>%
  mutate(., cyano_score_value = as.numeric(with(., case_when(
    (cyanobacteria < 2 ) ~ "95",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "85",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "75",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "65",
    (cyanobacteria >= 15) ~ "50"))))


ting_health_score<-ting_health %>% 
  select(cca_score_value, coral_score_value, algae_score_value,cyano_score_value) %>% 
  pivot_longer(cols = c("cca_score_value","coral_score_value", "algae_score_value", "cyano_score_value"), names_to = "value", values_to ="score_value") 

ting_health_color<-ting_health %>% 
  select(cca_color, coral_color, algae_color,cyanobacteria_color) %>% 
  pivot_longer(cols = c("cca_color","coral_color", "algae_color", "cyanobacteria_color"), names_to = "cover_color", values_to ="color") 


ting_health_value<-ting_health %>% 
  select(depth_strata, cca, live_coral, algae,cyanobacteria) %>% 
  pivot_longer(cols = c("cca","live_coral", "algae", "cyanobacteria"), names_to = "cover", values_to ="mean") %>% 
  left_join(dough_universal, by = "cover") %>% 
  mutate(color = ting_health_color$color) %>% 
  mutate(score_value = ting_health_score$score_value)
  
shallow<-  ting_health_value %>%
    filter(depth_strata == "shallow") %>% 
  mutate(rank = with(., case_when(
    (color == "darkgreen") ~ "Excellent",
    (color == "palegreen3") ~ "Good",
    (color == "yellow") ~ "Fair",
    (color == "orange") ~ "Poor",
    (color == "darkred") ~ "Very Poor"))) %>% 
  arrange(cover)

mean(shallow$score_value)

pdf(file = "Tingwon_dounut.pdf",width =5, height = 5 )
PieChart(cover, data = shallow,
         fill = shallow$color, color = "black",
         main="Tingwon", hole=.4,
         values_size = 0.09)
    
dev.off()
 
  
  
```

##### Tsolik

```{r}

tsol_health<-PNG_benthos_health %>%
  filter(locality == "Tsolik") %>% 
   select(ps_station_id, cca,live_coral, algae, cyanobacteria, depth_strata) %>% 
    group_by(depth_strata) %>% 
 #select(cca,live_coral, algae, cyanobacteria) %>% 
  summarize(live_coral = mean(live_coral), cyanobacteria = mean(cyanobacteria), cca=mean(cca), algae= mean(algae)) %>% 
    mutate(., cca_color = with(., case_when(
    (cca >= 20 ) ~ "darkgreen",
    (cca < 20 & cca >= 10) ~ "palegreen3",
    (cca < 10 & cca >= 5) ~ "yellow",
    (cca < 5 & cca >= 2) ~ "orange",
    (cca < 2) ~ "darkred"))) %>%
mutate(., coral_color = with(., case_when(
  (live_coral >= 40 ) ~ "darkgreen",
  (live_coral < 40 & live_coral >= 30) ~ "palegreen3",
  (live_coral < 30 & live_coral >= 20) ~ "yellow",
  (live_coral < 20 & live_coral >= 10) ~ "orange",
  (live_coral < 10) ~ "darkred"))) %>%
  mutate(., algae_color = with(., case_when(
    (algae < 5 ) ~ "darkgreen",
    (algae <10  & algae >= 5) ~ "palegreen3",
    (algae < 20 & algae >= 10) ~ "yellow",
    (algae < 30 & algae >= 20) ~ "orange",
    (algae >= 30) ~ "darkred"))) %>%
  mutate(., cyanobacteria_color = with(., case_when(
    (cyanobacteria < 2 ) ~ "darkgreen",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "palegreen3",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "yellow",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "orange",
    (cyanobacteria >= 15) ~ "darkred"))) %>% 
  mutate(., cca_score_value = as.numeric(with(., case_when(
    (cca >= 20 ) ~ "95",
    (cca < 20 & cca >= 10) ~ "85",
    (cca < 10 & cca >= 5) ~ "75",
    (cca < 5 & cca >= 2) ~ "65",
    (cca < 2) ~ "50")))) %>%
  mutate(., coral_score_value = as.numeric(with(., case_when(
    (live_coral >= 40 ) ~ "95",
    (live_coral < 40 & live_coral >= 30) ~ "85",
    (live_coral < 30 & live_coral >= 20) ~ "75",
    (live_coral < 20 & live_coral >= 10) ~ "65",
    (live_coral < 10) ~ "50")))) %>%
  mutate(., algae_score_value = as.numeric(with(., case_when(
    (algae < 5 ) ~ "95",
    (algae <10  & algae >= 5) ~ "85",
    (algae < 20 & algae >= 10) ~ "75",
    (algae < 30 & algae >= 20) ~ "65",
    (algae >= 30) ~ "50")))) %>%
  mutate(., cyano_score_value = as.numeric(with(., case_when(
    (cyanobacteria < 2 ) ~ "95",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "85",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "75",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "65",
    (cyanobacteria >= 15) ~ "50"))))


tsol_health_score<-tsol_health %>% 
  select(cca_score_value, coral_score_value, algae_score_value,cyano_score_value) %>% 
  pivot_longer(cols = c("cca_score_value","coral_score_value", "algae_score_value", "cyano_score_value"), names_to = "value", values_to ="score_value") 

tsol_health_color<-tsol_health %>% 
  select(cca_color, coral_color, algae_color,cyanobacteria_color) %>% 
  pivot_longer(cols = c("cca_color","coral_color", "algae_color", "cyanobacteria_color"), names_to = "cover_color", values_to ="color") 


tsol_health_value<-tsol_health %>% 
  select(depth_strata, cca, live_coral, algae,cyanobacteria) %>% 
  pivot_longer(cols = c("cca","live_coral", "algae", "cyanobacteria"), names_to = "cover", values_to ="mean") %>% 
  left_join(dough_universal, by = "cover") %>% 
  mutate(color = tsol_health_color$color) %>% 
  mutate(score_value = tsol_health_score$score_value)
  
shallow<-  tsol_health_value %>%
    filter(depth_strata == "shallow") %>% 
  mutate(rank = with(., case_when(
    (color == "darkgreen") ~ "Excellent",
    (color == "palegreen3") ~ "Good",
    (color == "yellow") ~ "Fair",
    (color == "orange") ~ "Poor",
    (color == "darkred") ~ "Very Poor"))) %>%   arrange(cover)

mean(shallow$score_value)

pdf(file = "tsolik_dounut.pdf",width =5, height = 5 )
PieChart(cover, data = shallow,
         fill = shallow$color, color = "black",
         main="Tsolik", hole=.4,
         values_size = 0.09)
    
 dev.off()
 
  
  
```

##### Au

```{r}

au_health<-PNG_benthos_health %>%
  filter(locality == "Au") %>% 
   select(ps_station_id, cca,live_coral, algae, cyanobacteria, depth_strata) %>% 
    group_by(depth_strata) %>% 
 #select(cca,live_coral, algae, cyanobacteria) %>% 
  summarize(live_coral = mean(live_coral), cyanobacteria = mean(cyanobacteria), cca=mean(cca), algae= mean(algae)) %>% 
    mutate(., cca_color = with(., case_when(
    (cca >= 20 ) ~ "darkgreen",
    (cca < 20 & cca >= 10) ~ "palegreen3",
    (cca < 10 & cca >= 5) ~ "yellow",
    (cca < 5 & cca >= 2) ~ "orange",
    (cca < 2) ~ "darkred"))) %>%
mutate(., coral_color = with(., case_when(
  (live_coral >= 40 ) ~ "darkgreen",
  (live_coral < 40 & live_coral >= 30) ~ "palegreen3",
  (live_coral < 30 & live_coral >= 20) ~ "yellow",
  (live_coral < 20 & live_coral >= 10) ~ "orange",
  (live_coral < 10) ~ "darkred"))) %>%
  mutate(., algae_color = with(., case_when(
    (algae < 5 ) ~ "darkgreen",
    (algae <10  & algae >= 5) ~ "palegreen3",
    (algae < 20 & algae >= 10) ~ "yellow",
    (algae < 30 & algae >= 20) ~ "orange",
    (algae >= 30) ~ "darkred"))) %>%
  mutate(., cyanobacteria_color = with(., case_when(
    (cyanobacteria < 2 ) ~ "darkgreen",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "palegreen3",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "yellow",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "orange",
    (cyanobacteria >= 15) ~ "darkred"))) %>% 
  mutate(., cca_score_value = as.numeric(with(., case_when(
    (cca >= 20 ) ~ "95",
    (cca < 20 & cca >= 10) ~ "85",
    (cca < 10 & cca >= 5) ~ "75",
    (cca < 5 & cca >= 2) ~ "65",
    (cca < 2) ~ "50")))) %>%
  mutate(., coral_score_value = as.numeric(with(., case_when(
    (live_coral >= 40 ) ~ "95",
    (live_coral < 40 & live_coral >= 30) ~ "85",
    (live_coral < 30 & live_coral >= 20) ~ "75",
    (live_coral < 20 & live_coral >= 10) ~ "65",
    (live_coral < 10) ~ "50")))) %>%
  mutate(., algae_score_value = as.numeric(with(., case_when(
    (algae < 5 ) ~ "95",
    (algae <10  & algae >= 5) ~ "85",
    (algae < 20 & algae >= 10) ~ "75",
    (algae < 30 & algae >= 20) ~ "65",
    (algae >= 30) ~ "50")))) %>%
  mutate(., cyano_score_value = as.numeric(with(., case_when(
    (cyanobacteria < 2 ) ~ "95",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "85",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "75",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "65",
    (cyanobacteria >= 15) ~ "50"))))


au_health_score<-au_health %>% 
  select(cca_score_value, coral_score_value, algae_score_value,cyano_score_value) %>% 
  pivot_longer(cols = c("cca_score_value","coral_score_value", "algae_score_value", "cyano_score_value"), names_to = "value", values_to ="score_value") 

au_health_color<-au_health %>% 
  select(cca_color, coral_color, algae_color,cyanobacteria_color) %>% 
  pivot_longer(cols = c("cca_color","coral_color", "algae_color", "cyanobacteria_color"), names_to = "cover_color", values_to ="color") 


au_health_value<-au_health %>% 
  select(depth_strata, cca, live_coral, algae,cyanobacteria) %>% 
  pivot_longer(cols = c("cca","live_coral", "algae", "cyanobacteria"), names_to = "cover", values_to ="mean") %>% 
  left_join(dough_universal, by = "cover") %>% 
  mutate(color = au_health_color$color) %>% 
  mutate(score_value = au_health_score$score_value)
  
shallow<-  au_health_value %>%
    filter(depth_strata == "shallow") %>% 
  mutate(rank = with(., case_when(
    (color == "darkgreen") ~ "Excellent",
    (color == "palegreen3") ~ "Good",
    (color == "yellow") ~ "Fair",
    (color == "orange") ~ "Poor",
    (color == "darkred") ~ "Very Poor"))) %>%   arrange(cover)

mean(shallow$score_value)

pdf(file = "Au_dounut.pdf",width =5, height = 5 )
PieChart(cover, data = shallow,
         fill = shallow$color, color = "black",
         main="Au", hole=.4,
         values_size = 0.09)
    
 dev.off()
 
  
  
```

##### Lovonagi

```{r}

lov_health<-PNG_benthos_health %>%
  filter(region == "Lovongai") %>% 
   select(ps_station_id, cca,live_coral, algae, cyanobacteria, depth_strata) %>% 
    group_by(depth_strata) %>% 
 #select(cca,live_coral, algae, cyanobacteria) %>% 
  summarize(live_coral = mean(live_coral), cyanobacteria = mean(cyanobacteria), cca=mean(cca), algae= mean(algae)) %>% 
    mutate(., cca_color = with(., case_when(
    (cca >= 20 ) ~ "darkgreen",
    (cca < 20 & cca >= 10) ~ "palegreen3",
    (cca < 10 & cca >= 5) ~ "yellow",
    (cca < 5 & cca >= 2) ~ "orange",
    (cca < 2) ~ "darkred"))) %>%
mutate(., coral_color = with(., case_when(
  (live_coral >= 40 ) ~ "darkgreen",
  (live_coral < 40 & live_coral >= 30) ~ "palegreen3",
  (live_coral < 30 & live_coral >= 20) ~ "yellow",
  (live_coral < 20 & live_coral >= 10) ~ "orange",
  (live_coral < 10) ~ "darkred"))) %>%
  mutate(., algae_color = with(., case_when(
    (algae < 5 ) ~ "darkgreen",
    (algae <10  & algae >= 5) ~ "palegreen3",
    (algae < 20 & algae >= 10) ~ "yellow",
    (algae < 30 & algae >= 20) ~ "orange",
    (algae >= 30) ~ "darkred"))) %>%
  mutate(., cyanobacteria_color = with(., case_when(
    (cyanobacteria < 2 ) ~ "darkgreen",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "palegreen3",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "yellow",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "orange",
    (cyanobacteria >= 15) ~ "darkred"))) %>% 
  mutate(., cca_score_value = as.numeric(with(., case_when(
    (cca >= 20 ) ~ "95",
    (cca < 20 & cca >= 10) ~ "85",
    (cca < 10 & cca >= 5) ~ "75",
    (cca < 5 & cca >= 2) ~ "65",
    (cca < 2) ~ "50")))) %>%
  mutate(., coral_score_value = as.numeric(with(., case_when(
    (live_coral >= 40 ) ~ "95",
    (live_coral < 40 & live_coral >= 30) ~ "85",
    (live_coral < 30 & live_coral >= 20) ~ "75",
    (live_coral < 20 & live_coral >= 10) ~ "65",
    (live_coral < 10) ~ "50")))) %>%
  mutate(., algae_score_value = as.numeric(with(., case_when(
    (algae < 5 ) ~ "95",
    (algae <10  & algae >= 5) ~ "85",
    (algae < 20 & algae >= 10) ~ "75",
    (algae < 30 & algae >= 20) ~ "65",
    (algae >= 30) ~ "50")))) %>%
  mutate(., cyano_score_value = as.numeric(with(., case_when(
    (cyanobacteria < 2 ) ~ "95",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "85",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "75",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "65",
    (cyanobacteria >= 15) ~ "50"))))


lov_health_score<-lov_health %>% 
  select(cca_score_value, coral_score_value, algae_score_value,cyano_score_value) %>% 
  pivot_longer(cols = c("cca_score_value","coral_score_value", "algae_score_value", "cyano_score_value"), names_to = "value", values_to ="score_value") 

lov_health_color<-lov_health %>% 
  select(cca_color, coral_color, algae_color,cyanobacteria_color) %>% 
  pivot_longer(cols = c("cca_color","coral_color", "algae_color", "cyanobacteria_color"), names_to = "cover_color", values_to ="color") 


lov_health_value<-lov_health %>% 
  select(depth_strata, cca, live_coral, algae,cyanobacteria) %>% 
  pivot_longer(cols = c("cca","live_coral", "algae", "cyanobacteria"), names_to = "cover", values_to ="mean") %>% 
  left_join(dough_universal, by = "cover") %>% 
  mutate(color = lov_health_color$color) %>% 
  mutate(score_value = lov_health_score$score_value)
  
shallow<-  lov_health_value %>%
    filter(depth_strata == "shallow") %>% 
  mutate(rank = with(., case_when(
    (color == "darkgreen") ~ "Excellent",
    (color == "palegreen3") ~ "Good",
    (color == "yellow") ~ "Fair",
    (color == "orange") ~ "Poor",
    (color == "darkred") ~ "Very Poor"))) %>%   arrange(cover)

mean(shallow$score_value)

pdf(file = "Lovongai_dounut.pdf",width =5, height = 5 )
PieChart(cover, data = shallow,
         fill = shallow$color, color = "black",
         main="Lovongai", hole=.4,
         values_size = 0.09)
    
dev.off()
 
  
  
```

##### Emirau

```{r}

emi_health<-PNG_benthos_health %>%
  filter(subregion == "Emirau") %>% 
   select(ps_station_id, cca,live_coral, algae, cyanobacteria, depth_strata) %>% 
    group_by(depth_strata) %>% 
 #select(cca,live_coral, algae, cyanobacteria) %>% 
  summarize(live_coral = mean(live_coral), cyanobacteria = mean(cyanobacteria), cca=mean(cca), algae= mean(algae)) %>% 
    mutate(., cca_color = with(., case_when(
    (cca >= 20 ) ~ "darkgreen",
    (cca < 20 & cca >= 10) ~ "palegreen3",
    (cca < 10 & cca >= 5) ~ "yellow",
    (cca < 5 & cca >= 2) ~ "orange",
    (cca < 2) ~ "darkred"))) %>%
mutate(., coral_color = with(., case_when(
  (live_coral >= 40 ) ~ "darkgreen",
  (live_coral < 40 & live_coral >= 30) ~ "palegreen3",
  (live_coral < 30 & live_coral >= 20) ~ "yellow",
  (live_coral < 20 & live_coral >= 10) ~ "orange",
  (live_coral < 10) ~ "darkred"))) %>%
  mutate(., algae_color = with(., case_when(
    (algae < 5 ) ~ "darkgreen",
    (algae <10  & algae >= 5) ~ "palegreen3",
    (algae < 20 & algae >= 10) ~ "yellow",
    (algae < 30 & algae >= 20) ~ "orange",
    (algae >= 30) ~ "darkred"))) %>%
  mutate(., cyanobacteria_color = with(., case_when(
    (cyanobacteria < 2 ) ~ "darkgreen",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "palegreen3",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "yellow",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "orange",
    (cyanobacteria >= 15) ~ "darkred"))) %>% 
  mutate(., cca_score_value = as.numeric(with(., case_when(
    (cca >= 20 ) ~ "95",
    (cca < 20 & cca >= 10) ~ "85",
    (cca < 10 & cca >= 5) ~ "75",
    (cca < 5 & cca >= 2) ~ "65",
    (cca < 2) ~ "50")))) %>%
  mutate(., coral_score_value = as.numeric(with(., case_when(
    (live_coral >= 40 ) ~ "95",
    (live_coral < 40 & live_coral >= 30) ~ "85",
    (live_coral < 30 & live_coral >= 20) ~ "75",
    (live_coral < 20 & live_coral >= 10) ~ "65",
    (live_coral < 10) ~ "50")))) %>%
  mutate(., algae_score_value = as.numeric(with(., case_when(
    (algae < 5 ) ~ "95",
    (algae <10  & algae >= 5) ~ "85",
    (algae < 20 & algae >= 10) ~ "75",
    (algae < 30 & algae >= 20) ~ "65",
    (algae >= 30) ~ "50")))) %>%
  mutate(., cyano_score_value = as.numeric(with(., case_when(
    (cyanobacteria < 2 ) ~ "95",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "85",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "75",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "65",
    (cyanobacteria >= 15) ~ "50"))))


emi_health_score<-emi_health %>% 
  select(cca_score_value, coral_score_value, algae_score_value,cyano_score_value) %>% 
  pivot_longer(cols = c("cca_score_value","coral_score_value", "algae_score_value", "cyano_score_value"), names_to = "value", values_to ="score_value") 

emi_health_color<-emi_health %>% 
  select(cca_color, coral_color, algae_color,cyanobacteria_color) %>% 
  pivot_longer(cols = c("cca_color","coral_color", "algae_color", "cyanobacteria_color"), names_to = "cover_color", values_to ="color") 


emi_health_value<-emi_health %>% 
  select(depth_strata, cca, live_coral, algae,cyanobacteria) %>% 
  pivot_longer(cols = c("cca","live_coral", "algae", "cyanobacteria"), names_to = "cover", values_to ="mean") %>% 
  left_join(dough_universal, by = "cover") %>% 
  mutate(color = emi_health_color$color) %>% 
  mutate(score_value = emi_health_score$score_value)
  
shallow<-  emi_health_value %>%
    filter(depth_strata == "shallow") %>% 
  mutate(rank = with(., case_when(
    (color == "darkgreen") ~ "Excellent",
    (color == "palegreen3") ~ "Good",
    (color == "yellow") ~ "Fair",
    (color == "orange") ~ "Poor",
    (color == "darkred") ~ "Very Poor"))) %>%   arrange(cover)

mean(shallow$score_value)

pdf(file = "Emirau_dounut.pdf",width =5, height = 5 )
PieChart(cover, data = shallow,
         fill = shallow$color, color = "black",
         main="Emirau", hole=.4,
         values_size = 0.09)
    
dev.off()
 
  
  
```

##### Tench

```{r}

ten_health<-PNG_benthos_health %>%
  filter(subregion == "Tench") %>% 
   select(ps_station_id, cca,live_coral, algae, cyanobacteria, depth_strata) %>% 
    group_by(depth_strata) %>% 
 #select(cca,live_coral, algae, cyanobacteria) %>% 
  summarize(live_coral = mean(live_coral), cyanobacteria = mean(cyanobacteria), cca=mean(cca), algae= mean(algae)) %>% 
    mutate(., cca_color = with(., case_when(
    (cca >= 20 ) ~ "darkgreen",
    (cca < 20 & cca >= 10) ~ "palegreen3",
    (cca < 10 & cca >= 5) ~ "yellow",
    (cca < 5 & cca >= 2) ~ "orange",
    (cca < 2) ~ "darkred"))) %>%
mutate(., coral_color = with(., case_when(
  (live_coral >= 40 ) ~ "darkgreen",
  (live_coral < 40 & live_coral >= 30) ~ "palegreen3",
  (live_coral < 30 & live_coral >= 20) ~ "yellow",
  (live_coral < 20 & live_coral >= 10) ~ "orange",
  (live_coral < 10) ~ "darkred"))) %>%
  mutate(., algae_color = with(., case_when(
    (algae < 5 ) ~ "darkgreen",
    (algae <10  & algae >= 5) ~ "palegreen3",
    (algae < 20 & algae >= 10) ~ "yellow",
    (algae < 30 & algae >= 20) ~ "orange",
    (algae >= 30) ~ "darkred"))) %>%
  mutate(., cyanobacteria_color = with(., case_when(
    (cyanobacteria < 2 ) ~ "darkgreen",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "palegreen3",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "yellow",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "orange",
    (cyanobacteria >= 15) ~ "darkred"))) %>% 
  mutate(., cca_score_value = as.numeric(with(., case_when(
    (cca >= 20 ) ~ "95",
    (cca < 20 & cca >= 10) ~ "85",
    (cca < 10 & cca >= 5) ~ "75",
    (cca < 5 & cca >= 2) ~ "65",
    (cca < 2) ~ "50")))) %>%
  mutate(., coral_score_value = as.numeric(with(., case_when(
    (live_coral >= 40 ) ~ "95",
    (live_coral < 40 & live_coral >= 30) ~ "85",
    (live_coral < 30 & live_coral >= 20) ~ "75",
    (live_coral < 20 & live_coral >= 10) ~ "65",
    (live_coral < 10) ~ "50")))) %>%
  mutate(., algae_score_value = as.numeric(with(., case_when(
    (algae < 5 ) ~ "95",
    (algae <10  & algae >= 5) ~ "85",
    (algae < 20 & algae >= 10) ~ "75",
    (algae < 30 & algae >= 20) ~ "65",
    (algae >= 30) ~ "50")))) %>%
  mutate(., cyano_score_value = as.numeric(with(., case_when(
    (cyanobacteria < 2 ) ~ "95",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "85",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "75",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "65",
    (cyanobacteria >= 15) ~ "50"))))


ten_health_score<-ten_health %>% 
  select(cca_score_value, coral_score_value, algae_score_value,cyano_score_value) %>% 
  pivot_longer(cols = c("cca_score_value","coral_score_value", "algae_score_value", "cyano_score_value"), names_to = "value", values_to ="score_value") 

ten_health_color<-ten_health %>% 
  select(cca_color, coral_color, algae_color,cyanobacteria_color) %>% 
  pivot_longer(cols = c("cca_color","coral_color", "algae_color", "cyanobacteria_color"), names_to = "cover_color", values_to ="color") 


ten_health_value<-ten_health %>% 
  select(depth_strata, cca, live_coral, algae,cyanobacteria) %>% 
  pivot_longer(cols = c("cca","live_coral", "algae", "cyanobacteria"), names_to = "cover", values_to ="mean") %>% 
  left_join(dough_universal, by = "cover") %>% 
  mutate(color = ten_health_color$color) %>% 
  mutate(score_value = ten_health_score$score_value)
  
shallow<-  ten_health_value %>%
    filter(depth_strata == "shallow") %>% 
  mutate(rank = with(., case_when(
    (color == "darkgreen") ~ "Excellent",
    (color == "palegreen3") ~ "Good",
    (color == "yellow") ~ "Fair",
    (color == "orange") ~ "Poor",
    (color == "darkred") ~ "Very Poor"))) %>%   arrange(cover)

mean(shallow$score_value)

pdf(file = "Tench_dounut.pdf",width =5, height = 5 )
PieChart(cover, data = shallow,
         fill = shallow$color, color = "black",
         main="Tench", hole=.4,
         values_size = 0.09)
    
 dev.off()
 
  
  
```

##### Lolieng

```{r}

lol_health<-PNG_benthos_health %>%
  filter(locality == "Lolieng") %>% 
   select(ps_station_id, cca,live_coral, algae, cyanobacteria, depth_strata) %>% 
    group_by(depth_strata) %>% 
 #select(cca,live_coral, algae, cyanobacteria) %>% 
  summarize(live_coral = mean(live_coral), cyanobacteria = mean(cyanobacteria), cca=mean(cca), algae= mean(algae)) %>% 
    mutate(., cca_color = with(., case_when(
    (cca >= 20 ) ~ "darkgreen",
    (cca < 20 & cca >= 10) ~ "palegreen3",
    (cca < 10 & cca >= 5) ~ "yellow",
    (cca < 5 & cca >= 2) ~ "orange",
    (cca < 2) ~ "darkred"))) %>%
mutate(., coral_color = with(., case_when(
  (live_coral >= 40 ) ~ "darkgreen",
  (live_coral < 40 & live_coral >= 30) ~ "palegreen3",
  (live_coral < 30 & live_coral >= 20) ~ "yellow",
  (live_coral < 20 & live_coral >= 10) ~ "orange",
  (live_coral < 10) ~ "darkred"))) %>%
  mutate(., algae_color = with(., case_when(
    (algae < 5 ) ~ "darkgreen",
    (algae <10  & algae >= 5) ~ "palegreen3",
    (algae < 20 & algae >= 10) ~ "yellow",
    (algae < 30 & algae >= 20) ~ "orange",
    (algae >= 30) ~ "darkred"))) %>%
  mutate(., cyanobacteria_color = with(., case_when(
    (cyanobacteria < 2 ) ~ "darkgreen",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "palegreen3",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "yellow",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "orange",
    (cyanobacteria >= 15) ~ "darkred"))) %>% 
  mutate(., cca_score_value = as.numeric(with(., case_when(
    (cca >= 20 ) ~ "95",
    (cca < 20 & cca >= 10) ~ "85",
    (cca < 10 & cca >= 5) ~ "75",
    (cca < 5 & cca >= 2) ~ "65",
    (cca < 2) ~ "50")))) %>%
  mutate(., coral_score_value = as.numeric(with(., case_when(
    (live_coral >= 40 ) ~ "95",
    (live_coral < 40 & live_coral >= 30) ~ "85",
    (live_coral < 30 & live_coral >= 20) ~ "75",
    (live_coral < 20 & live_coral >= 10) ~ "65",
    (live_coral < 10) ~ "50")))) %>%
  mutate(., algae_score_value = as.numeric(with(., case_when(
    (algae < 5 ) ~ "95",
    (algae <10  & algae >= 5) ~ "85",
    (algae < 20 & algae >= 10) ~ "75",
    (algae < 30 & algae >= 20) ~ "65",
    (algae >= 30) ~ "50")))) %>%
  mutate(., cyano_score_value = as.numeric(with(., case_when(
    (cyanobacteria < 2 ) ~ "95",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "85",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "75",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "65",
    (cyanobacteria >= 15) ~ "50"))))


lol_health_score<-lol_health %>% 
  select(cca_score_value, coral_score_value, algae_score_value,cyano_score_value) %>% 
  pivot_longer(cols = c("cca_score_value","coral_score_value", "algae_score_value", "cyano_score_value"), names_to = "value", values_to ="score_value") 

lol_health_color<-lol_health %>% 
  select(cca_color, coral_color, algae_color,cyanobacteria_color) %>% 
  pivot_longer(cols = c("cca_color","coral_color", "algae_color", "cyanobacteria_color"), names_to = "cover_color", values_to ="color") 


lol_health_value<-lol_health %>% 
  select(depth_strata, cca, live_coral, algae,cyanobacteria) %>% 
  pivot_longer(cols = c("cca","live_coral", "algae", "cyanobacteria"), names_to = "cover", values_to ="mean") %>% 
  left_join(dough_universal, by = "cover") %>% 
  mutate(color = lol_health_color$color) %>% 
  mutate(score_value = lol_health_score$score_value)
  
shallow<-  lol_health_value %>%
    filter(depth_strata == "shallow") %>% 
  mutate(rank = with(., case_when(
    (color == "darkgreen") ~ "Excellent",
    (color == "palegreen3") ~ "Good",
    (color == "yellow") ~ "Fair",
    (color == "orange") ~ "Poor",
    (color == "darkred") ~ "Very Poor"))) %>%   arrange(cover)

mean(shallow$score_value)

pdf(file = "Lolieng_dounut.pdf",width =5, height = 5 )
PieChart(cover, data = shallow,
         fill = shallow$color, color = "black",
         main="Lolieng", hole=.4,
         values_size = 0.09)
    
 dev.off()
 
  
  
```

##### Murat

```{r}

mur_health<-PNG_benthos_health %>%
  filter(region == "Murat") %>% 
   select(ps_station_id, cca,live_coral, algae, cyanobacteria, depth_strata) %>% 
    group_by(depth_strata) %>% 
 #select(cca,live_coral, algae, cyanobacteria) %>% 
  summarize(live_coral = mean(live_coral), cyanobacteria = mean(cyanobacteria), cca=mean(cca), algae= mean(algae)) %>% 
    mutate(., cca_color = with(., case_when(
    (cca >= 20 ) ~ "darkgreen",
    (cca < 20 & cca >= 10) ~ "palegreen3",
    (cca < 10 & cca >= 5) ~ "yellow",
    (cca < 5 & cca >= 2) ~ "orange",
    (cca < 2) ~ "darkred"))) %>%
mutate(., coral_color = with(., case_when(
  (live_coral >= 40 ) ~ "darkgreen",
  (live_coral < 40 & live_coral >= 30) ~ "palegreen3",
  (live_coral < 30 & live_coral >= 20) ~ "yellow",
  (live_coral < 20 & live_coral >= 10) ~ "orange",
  (live_coral < 10) ~ "darkred"))) %>%
  mutate(., algae_color = with(., case_when(
    (algae < 5 ) ~ "darkgreen",
    (algae <10  & algae >= 5) ~ "palegreen3",
    (algae < 20 & algae >= 10) ~ "yellow",
    (algae < 30 & algae >= 20) ~ "orange",
    (algae >= 30) ~ "darkred"))) %>%
  mutate(., cyanobacteria_color = with(., case_when(
    (cyanobacteria < 2 ) ~ "darkgreen",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "palegreen3",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "yellow",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "orange",
    (cyanobacteria >= 15) ~ "darkred"))) %>% 
  mutate(., cca_score_value = as.numeric(with(., case_when(
    (cca >= 20 ) ~ "95",
    (cca < 20 & cca >= 10) ~ "85",
    (cca < 10 & cca >= 5) ~ "75",
    (cca < 5 & cca >= 2) ~ "65",
    (cca < 2) ~ "50")))) %>%
  mutate(., coral_score_value = as.numeric(with(., case_when(
    (live_coral >= 40 ) ~ "95",
    (live_coral < 40 & live_coral >= 30) ~ "85",
    (live_coral < 30 & live_coral >= 20) ~ "75",
    (live_coral < 20 & live_coral >= 10) ~ "65",
    (live_coral < 10) ~ "50")))) %>%
  mutate(., algae_score_value = as.numeric(with(., case_when(
    (algae < 5 ) ~ "95",
    (algae <10  & algae >= 5) ~ "85",
    (algae < 20 & algae >= 10) ~ "75",
    (algae < 30 & algae >= 20) ~ "65",
    (algae >= 30) ~ "50")))) %>%
  mutate(., cyano_score_value = as.numeric(with(., case_when(
    (cyanobacteria < 2 ) ~ "95",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "85",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "75",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "65",
    (cyanobacteria >= 15) ~ "50"))))


mur_health_score<-mur_health %>% 
  select(cca_score_value, coral_score_value, algae_score_value,cyano_score_value) %>% 
  pivot_longer(cols = c("cca_score_value","coral_score_value", "algae_score_value", "cyano_score_value"), names_to = "value", values_to ="score_value") 

mur_health_color<-mur_health %>% 
  select(cca_color, coral_color, algae_color,cyanobacteria_color) %>% 
  pivot_longer(cols = c("cca_color","coral_color", "algae_color", "cyanobacteria_color"), names_to = "cover_color", values_to ="color") 


mur_health_value<-mur_health %>% 
  select(depth_strata, cca, live_coral, algae,cyanobacteria) %>% 
  pivot_longer(cols = c("cca","live_coral", "algae", "cyanobacteria"), names_to = "cover", values_to ="mean") %>% 
  left_join(dough_universal, by = "cover") %>% 
  mutate(color = mur_health_color$color) %>% 
  mutate(score_value = mur_health_score$score_value)
  
shallow<-  mur_health_value %>%
    filter(depth_strata == "shallow") %>% 
  mutate(rank = with(., case_when(
    (color == "darkgreen") ~ "Excellent",
    (color == "palegreen3") ~ "Good",
    (color == "yellow") ~ "Fair",
    (color == "orange") ~ "Poor",
    (color == "darkred") ~ "Very Poor"))) %>%   arrange(cover)

mean(shallow$score_value)

pdf(file = "Murat_dounut.pdf",width =5, height = 5 )
PieChart(cover, data = shallow,
         fill = shallow$color, color = "black",
         main="Murat", hole=.4,
         values_size = 0.09)
    
 dev.off()
 
  
  
```

##### Manus

```{r}

man_health<-PNG_benthos_health %>%
  filter(region == "Manus") %>% 
   select(ps_station_id, cca,live_coral, algae, cyanobacteria, depth_strata) %>% 
    group_by(depth_strata) %>% 
 #select(cca,live_coral, algae, cyanobacteria) %>% 
  summarize(live_coral = mean(live_coral), cyanobacteria = mean(cyanobacteria), cca=mean(cca), algae= mean(algae)) %>% 
    mutate(., cca_color = with(., case_when(
    (cca >= 20 ) ~ "darkgreen",
    (cca < 20 & cca >= 10) ~ "palegreen3",
    (cca < 10 & cca >= 5) ~ "yellow",
    (cca < 5 & cca >= 2) ~ "orange",
    (cca < 2) ~ "darkred"))) %>%
mutate(., coral_color = with(., case_when(
  (live_coral >= 40 ) ~ "darkgreen",
  (live_coral < 40 & live_coral >= 30) ~ "palegreen3",
  (live_coral < 30 & live_coral >= 20) ~ "yellow",
  (live_coral < 20 & live_coral >= 10) ~ "orange",
  (live_coral < 10) ~ "darkred"))) %>%
  mutate(., algae_color = with(., case_when(
    (algae < 5 ) ~ "darkgreen",
    (algae <10  & algae >= 5) ~ "palegreen3",
    (algae < 20 & algae >= 10) ~ "yellow",
    (algae < 30 & algae >= 20) ~ "orange",
    (algae >= 30) ~ "darkred"))) %>%
  mutate(., cyanobacteria_color = with(., case_when(
    (cyanobacteria < 2 ) ~ "darkgreen",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "palegreen3",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "yellow",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "orange",
    (cyanobacteria >= 15) ~ "darkred"))) %>% 
  mutate(., cca_score_value = as.numeric(with(., case_when(
    (cca >= 20 ) ~ "95",
    (cca < 20 & cca >= 10) ~ "85",
    (cca < 10 & cca >= 5) ~ "75",
    (cca < 5 & cca >= 2) ~ "65",
    (cca < 2) ~ "50")))) %>%
  mutate(., coral_score_value = as.numeric(with(., case_when(
    (live_coral >= 40 ) ~ "95",
    (live_coral < 40 & live_coral >= 30) ~ "85",
    (live_coral < 30 & live_coral >= 20) ~ "75",
    (live_coral < 20 & live_coral >= 10) ~ "65",
    (live_coral < 10) ~ "50")))) %>%
  mutate(., algae_score_value = as.numeric(with(., case_when(
    (algae < 5 ) ~ "95",
    (algae <10  & algae >= 5) ~ "85",
    (algae < 20 & algae >= 10) ~ "75",
    (algae < 30 & algae >= 20) ~ "65",
    (algae >= 30) ~ "50")))) %>%
  mutate(., cyano_score_value = as.numeric(with(., case_when(
    (cyanobacteria < 2 ) ~ "95",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "85",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "75",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "65",
    (cyanobacteria >= 15) ~ "50"))))


man_health_score<-man_health %>% 
  select(cca_score_value, coral_score_value, algae_score_value,cyano_score_value) %>% 
  pivot_longer(cols = c("cca_score_value","coral_score_value", "algae_score_value", "cyano_score_value"), names_to = "value", values_to ="score_value") 

man_health_color<-man_health %>% 
  select(cca_color, coral_color, algae_color,cyanobacteria_color) %>% 
  pivot_longer(cols = c("cca_color","coral_color", "algae_color", "cyanobacteria_color"), names_to = "cover_color", values_to ="color") 


man_health_value<-man_health %>% 
  select(depth_strata, cca, live_coral, algae,cyanobacteria) %>% 
  pivot_longer(cols = c("cca","live_coral", "algae", "cyanobacteria"), names_to = "cover", values_to ="mean") %>% 
  left_join(dough_universal, by = "cover") %>% 
  mutate(color = man_health_color$color) %>% 
  mutate(score_value = man_health_score$score_value)
  
shallow<-  man_health_value %>%
    filter(depth_strata == "shallow") %>% 
  mutate(rank = with(., case_when(
    (color == "darkgreen") ~ "Excellent",
    (color == "palegreen3") ~ "Good",
    (color == "yellow") ~ "Fair",
    (color == "orange") ~ "Poor",
    (color == "darkred") ~ "Very Poor"))) %>%   arrange(cover)

mean(shallow$score_value)

pdf(file = "Manus_dounut.pdf",width =5, height = 5 )
PieChart(cover, data = shallow,
         fill = shallow$color, color = "black",
         main="Manus", hole=.4,
         values_size = 0.09)
    
 dev.off()
 
  
  
```

##### Western Islands

```{r}

west_health<-PNG_benthos_health %>%
  filter(region == "Western Islands") %>% 
   select(ps_station_id, cca,live_coral, algae, cyanobacteria, depth_strata) %>% 
    group_by(depth_strata) %>% 
 #select(cca,live_coral, algae, cyanobacteria) %>% 
  summarize(live_coral = mean(live_coral), cyanobacteria = mean(cyanobacteria), cca=mean(cca), algae= mean(algae)) %>% 
    mutate(., cca_color = with(., case_when(
    (cca >= 20 ) ~ "darkgreen",
    (cca < 20 & cca >= 10) ~ "palegreen3",
    (cca < 10 & cca >= 5) ~ "yellow",
    (cca < 5 & cca >= 2) ~ "orange",
    (cca < 2) ~ "darkred"))) %>%
mutate(., coral_color = with(., case_when(
  (live_coral >= 40 ) ~ "darkgreen",
  (live_coral < 40 & live_coral >= 30) ~ "palegreen3",
  (live_coral < 30 & live_coral >= 20) ~ "yellow",
  (live_coral < 20 & live_coral >= 10) ~ "orange",
  (live_coral < 10) ~ "darkred"))) %>%
  mutate(., algae_color = with(., case_when(
    (algae < 5 ) ~ "darkgreen",
    (algae <10  & algae >= 5) ~ "palegreen3",
    (algae < 20 & algae >= 10) ~ "yellow",
    (algae < 30 & algae >= 20) ~ "orange",
    (algae >= 30) ~ "darkred"))) %>%
  mutate(., cyanobacteria_color = with(., case_when(
    (cyanobacteria < 2 ) ~ "darkgreen",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "palegreen3",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "yellow",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "orange",
    (cyanobacteria >= 15) ~ "darkred"))) %>% 
  mutate(., cca_score_value = as.numeric(with(., case_when(
    (cca >= 20 ) ~ "95",
    (cca < 20 & cca >= 10) ~ "85",
    (cca < 10 & cca >= 5) ~ "75",
    (cca < 5 & cca >= 2) ~ "65",
    (cca < 2) ~ "50")))) %>%
  mutate(., coral_score_value = as.numeric(with(., case_when(
    (live_coral >= 40 ) ~ "95",
    (live_coral < 40 & live_coral >= 30) ~ "85",
    (live_coral < 30 & live_coral >= 20) ~ "75",
    (live_coral < 20 & live_coral >= 10) ~ "65",
    (live_coral < 10) ~ "50")))) %>%
  mutate(., algae_score_value = as.numeric(with(., case_when(
    (algae < 5 ) ~ "95",
    (algae <10  & algae >= 5) ~ "85",
    (algae < 20 & algae >= 10) ~ "75",
    (algae < 30 & algae >= 20) ~ "65",
    (algae >= 30) ~ "50")))) %>%
  mutate(., cyano_score_value = as.numeric(with(., case_when(
    (cyanobacteria < 2 ) ~ "95",
    (cyanobacteria <5& cyanobacteria >= 2) ~ "85",
    (cyanobacteria < 10 & cyanobacteria >= 5) ~ "75",
    (cyanobacteria < 15 & cyanobacteria >= 10) ~ "65",
    (cyanobacteria >= 15) ~ "50"))))


west_health_score<-west_health %>% 
  select(cca_score_value, coral_score_value, algae_score_value,cyano_score_value) %>% 
  pivot_longer(cols = c("cca_score_value","coral_score_value", "algae_score_value", "cyano_score_value"), names_to = "value", values_to ="score_value") 

west_health_color<-west_health %>% 
  select(cca_color, coral_color, algae_color,cyanobacteria_color) %>% 
  pivot_longer(cols = c("cca_color","coral_color", "algae_color", "cyanobacteria_color"), names_to = "cover_color", values_to ="color") 


west_health_value<-west_health %>% 
  select(depth_strata, cca, live_coral, algae,cyanobacteria) %>% 
  pivot_longer(cols = c("cca","live_coral", "algae", "cyanobacteria"), names_to = "cover", values_to ="mean") %>% 
  left_join(dough_universal, by = "cover") %>% 
  mutate(color = west_health_color$color) %>% 
  mutate(score_value = west_health_score$score_value)
  
shallow<-  west_health_value %>%
    filter(depth_strata == "shallow") %>% 
  mutate(rank = with(., case_when(
    (color == "darkgreen") ~ "Excellent",
    (color == "palegreen3") ~ "Good",
    (color == "yellow") ~ "Fair",
    (color == "orange") ~ "Poor",
    (color == "darkred") ~ "Very Poor"))) %>%   arrange(cover)

mean(shallow$score_value)

pdf(file = "Western_Islands_dounut.pdf",width =5, height = 5 )
PieChart(cover, data = shallow,
         fill = shallow$color, color = "black",
         main="Western Islands", hole=.4,
         values_size = 0.09)
    
 dev.off()
 
  
  
```

## Region Cover

Creating region lengths to summarize percent cover at region level which is applied to all region graphs.

```{r}

# Length of stations to get region percents
region_lengths<-lpi_stations%>%
   group_by(region)  %>%
   dplyr::summarise(length=length(ps_station_id))
```

#### Original Functional Group

Stacked BarGraph based on original functional groups.

```{r}

benthic_region<-cover_by_station_and_taxa %>%   left_join(lpi_stations[,c("region", "ps_station_id","depth_strata")],.,by = "ps_station_id") %>%
  group_by(region,functional_group) %>%
    dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
  left_join(region_lengths,., by = "region") %>%
  mutate(cover = sum/length) 
 
 benthic_region$region2<-factor(benthic_region$region, levels = c('Murat', 'Lovongai','Manus', 'Western Islands'))
 
 benthic_region$functional_group <- factor(benthic_region$functional_group, levels=c('sediment/rubble/barren',"other","sponges",'cyanobacteria', 'turf','erect algae','encrusting algae',"soft coral", 'cca', 'hard coral'))

 
 ## Percent Cover
ggplot(benthic_region, aes(region2, cover, fill = functional_group))+
  geom_bar(stat = "identity", color = "black") +
 scale_fill_manual(name = "", values =c( "cca" = "pink", "soft coral" = "purple",  "encrusting algae" = "darkgreen", "erect algae" = "green3", "hard coral" = "yellow", "cyanobacteria" = "red", "other" = "lightblue", "sediment/rubble/barren" = "gray", "turf"="palegreen",  "sponges" = "dodgerblue" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 101))+
  xlab("")+
  ylab("% Benthic Cover")+
  #facet_wrap(~ region, scales = "free")+
  theme_bw()+
theme(axis.text=element_text(size=12, angle = 45, hjust = 1),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 12, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "right")
 
 
```

#### With Bleaching Functional Group

Stacked Barplot

```{r}

benthic_region_bleach<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c("region", "ps_station_id","depth_strata")],.,by = "ps_station_id") %>%
  group_by(region,functional_group2) %>%
    dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
  left_join(region_lengths,., by = "region") %>%
  mutate(cover = sum/length) %>%
  mutate(hig_sd = max-cover, low_sd = min-cover)


benthic_region_bleach$region2<-factor(benthic_region_bleach$region, levels = c("Murat","Lovongai","Manus","Western Islands"))


benthic_region_bleach$functional_group3 <- factor(benthic_region_bleach$functional_group2, levels=c('sediment/rubble/barren',"other","sponges",'cyanobacteria', 'turf','erect algae','encrusting algae',"soft coral", 'cca', 'hard coral - dead', "hard coral - bleached", "hard coral - live"))



## Percent Cover
ggplot(benthic_region_bleach, aes(region2, cover, fill = functional_group3))+
  geom_bar(stat = "identity", color = "black") +
 scale_fill_manual(name = "", values =c( "cca" = "pink", "soft coral" = "purple",  "encrusting algae" = "darkgreen", "erect algae" = "green3", "hard coral - live" = "yellow", "cyanobacteria" = "red", "other" = "lightblue", "sediment/rubble/barren" = "gray", "turf"="palegreen",  "sponges" = "dodgerblue", "hard coral - bleached" = "white", "hard coral - dead" = "black" ) )  +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 110))+
  xlab("Region")+
  ylab("% Benthic Cover")+
    theme_bw()+
theme(axis.text=element_text(size=12,  hjust = 1),
      axis.title.x = element_text(size = 16),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")


allsub<-benthic_subregion_bleach%>%
  pivot_wider(id_cols = c(region,subregion), names_from = functional_group2, values_from = cover)

lov_sub<-benthic_subregion_bleach %>%
  filter(region == "Lovongai") %>%
  pivot_wider(id_cols = subregion, names_from = functional_group2, values_from = cover)

manu_sub<-benthic_subregion_bleach %>%
  filter(region == "Manus") %>%
  pivot_wider(names_from = functional_group2, values_from = cover, id_cols = subregion)
  
```

#### Cover Groups Only

Only coral functional groups (live, dead, bleached) in stacked barplot which is applied to all subregion graphs.

```{r}

bleach_region<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c("region", "ps_station_id","depth_strata")],.,by = "ps_station_id") %>%
  group_by(region,  functional_group2) %>%
    dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
  left_join(region_lengths,., by = "region") %>%
  mutate(cover = sum/length)%>%
   filter(region != "Murat") %>%
  filter(functional_group2 %in% c("hard coral - dead","hard coral - bleached", 'hard coral - live'))

bleach_region$functional_group2<-factor(bleach_region$functional_group2, levels = c("hard coral - dead","hard coral - bleached",'hard coral - live'))


 ## Percent Cover
ggplot(bleach_region, aes(region, cover, fill = functional_group2))+
  geom_bar(stat = "identity", color = "black", width = 0.75) +
scale_fill_manual(name = "", values =c(  "hard coral - live" = "yellow", "hard coral - bleached" = "white","hard coral - dead" = "black" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 101))+
  coord_flip() +
  xlab("")+
  ylab("% Benthic Cover")+
theme_bw()+
theme(axis.text=element_text(size=12, angle = 45, hjust = 1),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")
 
```

#### Only Bleaching based on percent of hard coral bleached

```{r}

# Bleaching

bleach_region_percent<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c("region", "ps_station_id","depth_strata")],.,by = "ps_station_id") %>%
  group_by(region,functional_group) %>%
  dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
     filter(region != "Murat") %>%
  left_join(region_lengths,., by = "region") %>%
  mutate(overall_cover = sum/length)%>%
  filter(functional_group %in% c("hard coral"))%>%
  left_join(bleach_region[,c("region","functional_group2","cover")], by = "region")%>%
  filter(functional_group2 == "hard coral - bleached") %>%
    mutate(prevalence = round((cover/overall_cover)*100,2))


## Percent Cover
ggplot(bleach_region_percent, aes(region, prevalence, fill = functional_group2))+
  geom_bar(stat = "identity", color = "black", width = 0.75) +
 scale_fill_manual(name = "", values =c(  "hard coral - live" = "yellow", "hard coral - dead" = "black","hard coral - bleached" = "gray80" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 75))+
  coord_flip() +
  xlab("")+
    ylab("Percentage of coral that is bleached")+
  theme_bw()+
theme(axis.text=element_text(size=12, angle = 45, hjust = 1),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")

```

#### Functional Group Metrics and summaries

```{r}

# Richness overall by functional group
all_categories<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c( "ps_station_id")],.,by = "ps_station_id") %>%
  distinct(functional_group, accepted_name) %>% 
  mutate(rep = 1) %>%
  group_by(functional_group)%>%
  dplyr::summarise(richness = sum(rep)) 

# All algae
all_algae<- all_categories%>%
   filter(functional_group %in% c("cca","encrusting algae","erect algae","turf")) %>%
 dplyr::summarise(richness = sum(richness))

# By Region
benthic_region_categories<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c("region", "ps_station_id")],.,by = "ps_station_id") %>%
  distinct(region, functional_group, accepted_name) %>% 
  mutate(rep = 1) %>%
  group_by(region, functional_group)%>%
  dplyr::summarise(richness = sum(rep)) %>%
  pivot_wider(id_cols = region, names_from = functional_group, values_from = richness)


```

## Subregion Cover

Creating subregion lengths to summarize percent cover at subregion level which is applied to all subregion graphs.

```{r}
# Add the length of stations to get subregion percents
subregion_lengths<-lpi_stations%>%
   group_by(subregion)  %>%
   dplyr::summarise(length=length(ps_station_id))
```

#### Original Functional Group

Stacked BarGraph based on original functional groups.

```{r}

benthic_subregion<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c("region", "subregion","ps_station_id","depth_strata")],.,by = "ps_station_id") %>%
  group_by(region,subregion, functional_group) %>%
    dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
  left_join(subregion_lengths,., by = "subregion") %>%
  mutate(cover = sum/length) %>%
  mutate(hig_sd = max-cover, low_sd = min-cover)

covercheck<-benthic_subregion%>%
   group_by(subregion)  %>%
    dplyr::summarise(percent = sum(cover))


benthic_subregion$subregion2<- factor(benthic_subregion$subregion, levels = c('Mussau', 'Emirau','Tench', 'Tingwon', 'Au', "Neitab", "Enelava", "Dunung", "Nemto", "Kung","Tsolik","Bipi","Harengan","Manus","Aua","Wuvulu","Ninigo","Luf"  ))

benthic_subregion$functional_group <- factor(benthic_subregion$functional_group, levels=c('sediment/rubble/barren',"other","sponges",'cyanobacteria', 'turf','erect algae','encrusting algae',"soft coral", 'cca', 'hard coral'))



## Percent Cover
ggplot(benthic_subregion, aes(subregion2, cover, fill = functional_group))+
  geom_bar(stat = "identity", color = "black") +
 scale_fill_manual(name = "", values =c( "cca" = "pink", "soft coral" = "purple",  "encrusting algae" = "darkgreen", "erect algae" = "green3", "hard coral" = "yellow", "cyanobacteria" = "red", "other" = "lightblue", "sediment/rubble/barren" = "gray", "turf"="palegreen",  "sponges" = "dodgerblue" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 110))+
  xlab("")+
  ylab("% Benthic Cover")+
   geom_vline(xintercept = c(3.5, 11.5, 14.5), linetype ="longdash", size= 1, color = "black")+
 # geom_text(aes(label = c("Murat","Lovonhai","Mannus","Western Islands"),  hjust = 1))+
   annotate("text", x=2, y=105, label="Murat", angle=0, size=6, color="black") +
     annotate("text", x=7.5, y=105, label="Lovongai", angle=0, size=6, color="black") +
    annotate("text", x=13, y=105, label="Manus", angle=0, size=6, color="black") +
     annotate("text", x=16.5, y=105, label="Western Islands", angle=0, size=6, color="black") +
 #facet_wrap(~ region, scales = "free")+
  theme_bw()+
theme(axis.text=element_text(size=12, angle = 45, hjust = 1),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")






```

#### With Bleaching Functional Group

Stacked Barplot

```{r}

benthic_subregion_bleach<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c("region", "subregion","ps_station_id","depth_strata")],.,by = "ps_station_id") %>%
  group_by(region,subregion, functional_group2) %>%
    dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
  left_join(subregion_lengths,., by = "subregion") %>%
  mutate(cover = sum/length) %>%
  mutate(hig_sd = max-cover, low_sd = min-cover)

covercheck<-benthic_subregion_bleach%>%
   group_by(subregion)  %>%
    dplyr::summarise(percent = sum(cover))


benthic_subregion_bleach$subregion2<- factor(benthic_subregion_bleach$subregion, levels = c('Mussau', 'Emirau','Tench', 'Tingwon', 'Au', "Neitab", "Enelava", "Dunung", "Nemto", "Kung","Tsolik","Bipi","Harengan","Manus","Aua","Wuvulu","Ninigo","Luf"  ))

benthic_subregion_bleach$functional_group3 <- factor(benthic_subregion_bleach$functional_group2, levels=c('sediment/rubble/barren',"other","sponges",'cyanobacteria', 'turf','erect algae','encrusting algae',"soft coral", 'cca', 'hard coral - dead', "hard coral - bleached", "hard coral - live"))



## Percent Cover
ggplot(benthic_subregion_bleach, aes(subregion2, cover, fill = functional_group3))+
  geom_bar(stat = "identity", color = "black") +
 scale_fill_manual(name = "", values =c( "cca" = "pink", "soft coral" = "purple",  "encrusting algae" = "darkgreen", "erect algae" = "green3", "hard coral - live" = "yellow", "cyanobacteria" = "red", "other" = "lightblue", "sediment/rubble/barren" = "gray", "turf"="palegreen",  "sponges" = "dodgerblue", "hard coral - bleached" = "white", "hard coral - dead" = "black" ) )  +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 110))+
  xlab("Subregion")+
  ylab("% Benthic Cover")+
   geom_vline(xintercept = c(3.5, 11.5, 14.5), linetype ="longdash", size= 1, color = "black")+
 # geom_text(aes(label = c("Murat","Lovonhai","Mannus","Western Islands"),  hjust = 1))+
   annotate("text", x=2, y=105, label="Murat", angle=0, size=6, color="black") +
     annotate("text", x=7.5, y=105, label="Lovongai", angle=0, size=6, color="black") +
    annotate("text", x=13, y=105, label="Manus", angle=0, size=6, color="black") +
     annotate("text", x=16.5, y=105, label="Western Islands", angle=0, size=6, color="black") +
 #facet_wrap(~ region, scales = "free")+
  theme_bw()+
theme(axis.text=element_text(size=12, angle = 45, hjust = 1),
      axis.title.x = element_text(size = 16),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")


allsub<-benthic_subregion_bleach%>%
  pivot_wider(id_cols = c(region,subregion), names_from = functional_group2, values_from = cover)

lov_sub<-benthic_subregion_bleach %>%
  filter(region == "Lovongai") %>%
  pivot_wider(id_cols = subregion, names_from = functional_group2, values_from = cover)

manu_sub<-benthic_subregion_bleach %>%
  filter(region == "Manus") %>%
  pivot_wider(names_from = functional_group2, values_from = cover, id_cols = subregion)
  
```

#### Coral Groups Only

Stack barplot - coordinates pivoted

With Murat

```{r}

# Bleaching with Murat

bleach_subregion<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c("region", "subregion","ps_station_id","depth_strata")],.,by = "ps_station_id") %>%
  group_by(region,subregion, functional_group2) %>%
    dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
  left_join(subregion_lengths,., by = "subregion") %>%
  mutate(cover = sum/length)%>%
 #  filter(region != "Murat") %>%
  filter(functional_group2 %in% c("hard coral - dead","hard coral - bleached", 'hard coral - live'))


bleach_subregion$subregion2<- factor(bleach_subregion$subregion, levels = c('Mussau','Emirau','Tench',   'Tingwon', 'Au', "Neitab", "Enelava", "Dunung", "Nemto", "Kung","Tsolik","Bipi","Harengan","Manus","Aua","Wuvulu","Ninigo","Luf"  ))

bleach_subregion$functional_group2 <- factor(bleach_subregion$functional_group2, levels=c("hard coral - dead","hard coral - bleached", 'hard coral - live'))


## Percent Cover
ggplot(bleach_subregion, aes(subregion2, cover, fill = functional_group2))+
  geom_bar(stat = "identity", color = "black", width = 0.75) +
 scale_fill_manual(name = "", values =c(  "hard coral - live" = "yellow", "hard coral - dead" = "black","hard coral - bleached" = "gray80" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 101))+
  coord_flip() +
  xlab("")+
  ylab("% Benthic Cover")+
 geom_vline(xintercept = c(3.5, 11.5, 14.5), linetype ="longdash", size= .5, color = "black")+
#geom_hline(yintercept = 30,  size = .25, color = "gray40")+
   annotate("text", x=2, y=80, label="Murat", angle=0, size=6, color="black") +
 annotate("text", x=8, y=80, label="Lovongai", angle=0, size=6, color="black") +
   annotate("text", x=13, y=80, label="Manus", angle=0, size=6, color="black") +
   annotate("text", x=16.5, y=80, label="Western Islands", angle=0, size=6, color="black") +
 #facet_wrap(~ region, scales = "free")+
  theme_bw()+
theme(axis.text=element_text(size=12, angle = 45, hjust = 1),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")

```

Without Murat

```{r}

# Bleaching with Murat

bleach_subregion_no_murat<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c("region", "subregion","ps_station_id","depth_strata")],.,by = "ps_station_id") %>%
  group_by(region,subregion, functional_group2) %>%
    dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
  left_join(subregion_lengths,., by = "subregion") %>%
  mutate(cover = sum/length)%>%
  filter(region != "Murat") %>%
  filter(functional_group2 %in% c("hard coral - dead","hard coral - bleached", 'hard coral - live'))


bleach_subregion_no_murat$subregion2<- factor(bleach_subregion_no_murat$subregion, levels = c( 'Tingwon', 'Au', "Neitab", "Enelava", "Dunung", "Nemto", "Kung","Tsolik","Bipi","Harengan","Manus","Aua","Wuvulu","Ninigo","Luf"  ))

bleach_subregion_no_murat$functional_group2 <- factor(bleach_subregion_no_murat$functional_group2, levels=c("hard coral - dead","hard coral - bleached", 'hard coral - live'))


## Percent Cover
ggplot(bleach_subregion_no_murat, aes(subregion2, cover, fill = functional_group2))+
  geom_bar(stat = "identity", color = "black", width = 0.75) +
 scale_fill_manual(name = "", values =c(  "hard coral - live" = "yellow", "hard coral - dead" = "black","hard coral - bleached" = "gray80" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 101))+
  coord_flip() +
  xlab("")+
  ylab("% Benthic Cover")+
 geom_vline(xintercept = c(8.5, 11.5), linetype ="longdash", size= .5, color = "black")+
 annotate("text", x=5, y=80, label="Lovongai", angle=0, size=6, color="black") +
   annotate("text", x=10, y=80, label="Manus", angle=0, size=6, color="black") +
   annotate("text", x=14, y=80, label="Western Islands", angle=0, size=6, color="black") +
 #facet_wrap(~ region, scales = "free")+
  theme_bw()+
theme(axis.text=element_text(size=12, angle = 45, hjust = 1),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")

```

#### Only Bleaching based on percent of hard coral bleached

```{r}


bleach_subregion_percent<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c("region", "subregion","ps_station_id","depth_strata")],.,by = "ps_station_id") %>%
  group_by(region,subregion, functional_group) %>%
  dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
     filter(region != "Murat") %>%
  left_join(subregion_lengths,., by = "subregion") %>%
  mutate(overall_cover = sum/length)%>%
  filter(functional_group %in% c("hard coral"))%>%
  left_join(bleach_subregion[,c("subregion","functional_group2","cover")], by = "subregion")%>%
  filter(functional_group2 == "hard coral - bleached") %>%
    mutate(prevalence = round((cover/overall_cover)*100,2))


bleach_subregion_percent$subregion2<- factor(bleach_subregion_percent$subregion, levels = c('Tingwon', 'Au', "Neitab", "Enelava", "Dunung", "Nemto", "Kung","Tsolik","Bipi","Harengan","Manus","Aua","Wuvulu","Ninigo","Luf"  ))


## Percent Cover
ggplot(bleach_subregion_percent, aes(subregion2, prevalence, fill = functional_group2))+
  geom_bar(stat = "identity", color = "black", width = 0.75) +
 scale_fill_manual(name = "", values =c(  "hard coral - live" = "yellow", "hard coral - dead" = "black","hard coral - bleached" = "gray80" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 101))+
  coord_flip() +
  xlab("")+
    ylab("Percentage of coral that is bleached")+
 geom_vline(xintercept = c(8.5, 11.5), linetype ="longdash", size= .5, color = "black")+
#geom_hline(yintercept = 30,  size = .25, color = "gray40")+
 annotate("text", x=5, y=80, label="Lovongai", angle=0, size=6, color="black") +
   annotate("text", x=10, y=80, label="Manus", angle=0, size=6, color="black") +
   annotate("text", x=13.5, y=80, label="Western Islands", angle=0, size=6, color="black") +
 #facet_wrap(~ region, scales = "free")+
  theme_bw()+
theme(axis.text=element_text(size=12, angle = 45, hjust = 1),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")

```

## Individual Subregions

#### Data Set-up

##### Original Functional Group

```{r}


benthic_sites<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c("region", "subregion","locality", "ps_site_id","ps_station_id")],.,by = "ps_station_id") %>%
  group_by(region,subregion, locality, ps_site_id, functional_group) %>%
    dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
  left_join(site_lengths,., by = "ps_site_id") %>%
  mutate(cover = sum/length)  %>%
  mutate(site_number = stri_sub(ps_site_id,-3,-1))
           
           
benthic_sites%>%
   group_by(ps_site_id)  %>%
    dplyr::summarise(percent = sum(cover))


benthic_sites$subregion2<- factor(benthic_sites$subregion, levels = c('Mussau', 'Emirau','Tench', 'Tingwon', 'Au', "Neitab", "Enelava", "Dunung", "Nemto", "Kung","Tsolik","Bipi","Harengan","Manus","Aua","Wuvulu","Ninigo","Luf"  ))

benthic_sites$functional_group <- factor(benthic_sites$functional_group, levels=c('sediment/rubble/barren',"other","sponges",'cyanobacteria', 'turf','erect algae','encrusting algae',"soft coral", 'cca', 'hard coral'))



```

##### With Bleaching Functional Groups

```{r}

bleach_site_all<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c("region", "subregion","ps_site_id","ps_station_id")],.,by = "ps_station_id") %>%
  group_by(region,subregion,ps_site_id, functional_group2) %>%
    dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
  left_join(site_lengths,., by = "ps_site_id") %>%
  mutate(cover = sum/length)%>%
   filter(region != "Murat")

bleach_site_all$subregion2<- factor(bleach_site_all$subregion, levels = c('Tingwon', 'Au', "Neitab", "Enelava", "Dunung", "Nemto", "Kung","Tsolik","Bipi","Harengan","Manus","Aua","Wuvulu","Ninigo","Luf"  ))


 bleach_site_all$functional_group2 <- factor(bleach_site_all$functional_group2, levels=c('sediment/rubble/barren',"other","sponges",'cyanobacteria', 'turf','erect algae','encrusting algae',"soft coral", 'cca', "hard coral - dead", 'hard coral - bleached', 'hard coral - live'))
 
 # adding column of just site number for easier graphing
 bleach_site_all<-bleach_site_all %>% 
   mutate(site_n = gsub('.*?[-_]', '', ps_site_id))
 

```

##### Coral Groups Only

```{r}

bleach_site<-cover_by_station_and_taxa %>% 
  left_join(lpi_stations[,c("region", "subregion","ps_site_id","ps_station_id")],.,by = "ps_station_id") %>%
  group_by(region,subregion,ps_site_id, functional_group2) %>%
    dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
  left_join(site_lengths,., by = "ps_site_id") %>%
  mutate(cover = sum/length)%>%
   filter(region != "Murat") %>%
  filter(functional_group2 %in% c("hard coral - dead","hard coral - bleached", 'hard coral - live'))

bleach_site$subregion2<- factor(bleach_site$subregion, levels = c('Tingwon', 'Au', "Neitab", "Enelava", "Dunung", "Nemto", "Kung","Tsolik","Bipi","Harengan","Manus","Aua","Wuvulu","Ninigo","Luf"  ))

bleach_site$functional_group2 <- factor(bleach_site$functional_group2, levels=c("hard coral - dead","hard coral - bleached", 'hard coral - live'))

```

##### MorphoTaxa for Metrics

```{r}
##### Morphotaxa
benthic_sites_taxa<-cover_by_station_and_taxa %>%
 left_join(lpi_morphotaxa[,c("morphotaxon", "family","genus")],.,by = "morphotaxon") %>%
  left_join(lpi_stations[,c("region", "subregion","locality", "ps_site_id","ps_station_id")],.,by = "ps_station_id") %>%
  group_by(region,subregion, locality, ps_site_id, functional_group,morphotaxon, genus) %>%
    dplyr::summarize(min=min(pct_cover),max=max(pct_cover), sum=sum(pct_cover)) %>%
  left_join(site_lengths,., by = "ps_site_id") %>%
  mutate(cover = sum/length) %>%
  distinct()


```

#### Murat

###### Original Functional Group

```{r}

#subregion breakdowns
sub_murat<-benthic_subregion %>%
  filter(region == "Murat") %>%
  filter(functional_group == "cca")


benthic_sites_murat <- benthic_sites %>%
  filter(region == "Murat")



################## 
##################

ggplot(benthic_sites_murat, aes(site_number, cover, fill = functional_group))+
  geom_bar(stat = "identity", color = "black") +
 scale_fill_manual(name = "", values =c( "cca" = "pink", "soft coral" = "purple",  "encrusting algae" = "darkgreen", "erect algae" = "green3", "hard coral" = "yellow", "cyanobacteria" = "red", "other" = "lightblue", "sediment/rubble/barren" = "gray", "turf"="palegreen",  "sponges" = "dodgerblue" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 110))+
  xlab("")+
  ylab("% Benthic Cover")+
   geom_vline(xintercept = c(13.5, 19.5), linetype ="longdash", size= 1, color = "black") +
  annotate("text", x=7, y=105, label="Mussau", angle=0, size=6, color="black") +
    annotate("text", x=16.5, y=105, label="Emirau", angle=0, size=6, color="black") +
    annotate("text", x=21, y=105, label="Tench", angle=0, size=6, color="black") +

  theme_bw()+
theme(axis.text.y=element_text(size=10, angle = 0),
     # axis.text.x=element_text(size=0, angle = 0),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")


```

###### Metrics

```{r}
benthic_sites_murat_means<-benthic_sites_murat %>%
  group_by(subregion, functional_group) %>%
  dplyr::summarise(mean = mean(cover))


benthic_sites_taxa_murat<-benthic_sites_taxa %>%
  filter(region == "Murat")

murat_Algae<-benthic_sites_taxa_murat %>%
  filter(functional_group == "erect algae"| functional_group == "turf") %>%
  group_by(subregion, genus) %>%
  dplyr::summarise(mean = mean(cover))

murat_soft_corals<-benthic_sites_taxa_murat %>%
  filter(functional_group == "soft coral") %>%
  group_by(subregion, genus) %>%
  dplyr::summarise(mean = mean(cover))
```

#### Lovongai

###### Original Functional Group

```{r}

benthic_sites_Lovongai <- benthic_sites %>%
  filter(region == "Lovongai")  %>% 
  mutate(ps_site_id = fct_reorder(ps_site_id, subregion)) 


benthic_sites_Lovongai$site_number2<- factor(benthic_sites_Lovongai$site_number, levels = c('023', '024', "025", "026", "027",
     "034", "035",
    "031","032",
    "041",  "042", 
    "028", "029","030",
   "038","039", 
   "033",
     "036" ,"037","040"))


## Percent Cover
ggplot(benthic_sites_Lovongai, aes(site_number2, cover, fill = functional_group))+
  geom_bar(stat = "identity", color = "black", width = 0.9) +
 scale_fill_manual(name = "", values =c( "cca" = "pink", "soft coral" = "purple",  "encrusting algae" = "darkgreen", "erect algae" = "green3", "hard coral" = "yellow", "cyanobacteria" = "red", "other" = "lightblue", "sediment/rubble/barren" = "gray", "turf"="palegreen",  "sponges" = "dodgerblue" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 106))+
  xlab("")+
  ylab("% Benthic Cover")+
  geom_vline(xintercept = c(5.5, 7.5, 9.5,11.5,14.5,16.5,17.5), linetype ="longdash", size= 1, color = "black") +
  annotate("text", x=3, y=103, label="Tingwon", angle=0, size=4, color="black") +
annotate("text", x=6.5, y=103, label="Au", angle=0, size=4, color="black") +
 annotate("text", x=8.5, y=103, label="Neitab", angle=0, size=4, color="black") +
    annotate("text", x=10.5, y=103, label="Enelava", angle=0, size=4, color="black") +
annotate("text", x=13, y=103, label="Dunung", angle=0, size=4, color="black") +
 annotate("text", x=15.5, y=103, label="Nemto", angle=0, size=4, color="black")+
annotate("text", x=17, y=103, label="Kung", angle=0, size=4, color="black") +
 annotate("text", x=19, y=103, label="Tsolik", angle=0, size=4, color="black")+

  theme_bw()+
theme(axis.text.y=element_text(size=10, angle = 0),
     # axis.text.x=element_text(size=0, angle = 0),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")

```

###### With Bleaching Functional Groups

```{r}
bleach_site_all_Lovongai <- bleach_site_all %>%
  filter(region == "Lovongai")

bleach_site_all_Lovongai$site_n2<- factor(bleach_site_all_Lovongai$site_n, levels = c('023', '024', "025", "026", "027",
     "034", "035",
    "031","032",
    "041",  "042", 
    "028", "029","030",
   "038","039", 
   "033",
     "036" ,"037","040"))

## Percent Cover
ggplot(bleach_site_all_Lovongai, aes(site_n2, cover, fill = functional_group2))+
  geom_bar(stat = "identity", color = "black", width = 0.9) +
 scale_fill_manual(name = "", values =c( "cca" = "pink", "soft coral" = "purple",  "encrusting algae" = "darkgreen", "erect algae" = "green3", "hard coral - live" = "yellow", "cyanobacteria" = "red", "other" = "lightblue", "sediment/rubble/barren" = "gray", "turf"="palegreen",  "sponges" = "dodgerblue", "hard coral - bleached" = "white", "hard coral - dead" = "black" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 106))+
  ylab("\n% Benthic Cover")+
  xlab("Site #")+
  geom_vline(xintercept = c(5.5, 7.5, 9.5,11.5,14.5,16.5,17.5), linetype ="longdash", size= 1, color = "black") +
  annotate("text", x=3, y=103, label="Tingwon", angle=0, size=4, color="black") +
annotate("text", x=6.5, y=103, label="Au", angle=0, size=4, color="black") +
 annotate("text", x=8.5, y=103, label="Neitab", angle=0, size=4, color="black") +
    annotate("text", x=10.5, y=103, label="Enelava", angle=0, size=4, color="black") +
annotate("text", x=13, y=103, label="Dunung", angle=0, size=4, color="black") +
 annotate("text", x=15.5, y=103, label="Nemto", angle=0, size=4, color="black")+
annotate("text", x=17, y=103, label="Kung", angle=0, size=4, color="black") +
 annotate("text", x=19, y=103, label="Tsolik", angle=0, size=4, color="black")+
  theme_bw()+
theme(axis.text.y=element_text(size=10, angle = 0),
    #  axis.text.x=element_text(size=0, angle = 0),
    axis.title.x = element_text(vjust = -0.5),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")


```

###### Coral Groups Only

```{r}

#############################

bleach_site_Lovongai <- bleach_site %>%
  filter(region == "Lovongai")

bleach_site_Lovongai$ps_site_id2<- factor(bleach_site_Lovongai$ps_site_id, levels = c('PNG_2024_uvs_023', 'PNG_2024_uvs_024', "PNG_2024_uvs_025", "PNG_2024_uvs_026", "PNG_2024_uvs_027",
     "PNG_2024_uvs_034", "PNG_2024_uvs_035",
    "PNG_2024_uvs_031","PNG_2024_uvs_032",
    "PNG_2024_uvs_041",  "PNG_2024_uvs_042", 
    "PNG_2024_uvs_028", "PNG_2024_uvs_029","PNG_2024_uvs_030",
   "PNG_2024_uvs_038","PNG_2024_uvs_039", 
   "PNG_2024_uvs_033",
     "PNG_2024_uvs_036" ,"PNG_2024_uvs_037","PNG_2024_uvs_040"))

ggplot(bleach_site_Lovongai, aes(ps_site_id2, cover, fill = functional_group2))+
  geom_bar(stat = "identity", color = "black", width = 1) +
 scale_fill_manual(name = "", values =c(  "hard coral - live" = "yellow", "hard coral - dead" = "black","hard coral - bleached" = "gray80" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 80))+
  coord_flip() +
  xlab("")+
  ylab("% Benthic Cover")+
  geom_vline(xintercept = c(5.5, 7.5, 9.5,11.5,14.5,16.5,17.5), linetype ="longdash", size= .5, color = "black") +
  annotate("text", x=3, y=70, label="Tingwon", angle=0, size=4, color="black") +
annotate("text", x=6.5, y=70, label="Au", angle=0, size=4, color="black") +
 annotate("text", x=8.5, y=70, label="Neitab", angle=0, size=4, color="black") +
    annotate("text", x=10.5, y=70, label="Enelava", angle=0, size=4, color="black") +
annotate("text", x=13, y=70, label="Dunung", angle=0, size=4, color="black") +
 annotate("text", x=15.5, y=70, label="Nemto", angle=0, size=4, color="black")+
annotate("text", x=17, y=70, label="Kung", angle=0, size=4, color="black") +
 annotate("text", x=19, y=70, label="Tsolik", angle=0, size=4, color="black")+
  theme_bw()+
theme(axis.text.y = element_text(size=0, angle = 0),
      axis.text.x= element_text(size=14, angle = 0),
            axis.ticks.y=element_blank(), 
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")



```

###### Metrics

```{r}

metri_lov<-bleach_site_all_Lovongai %>%
  filter(functional_group2 %in% c("hard coral - live", "hard coral - bleached","hard coral dead","cyanobacteria")) %>%
  pivot_wider(id_cols = c(ps_site_id, subregion),names_from = functional_group2, values_from = cover)


metri_lov_all<-bleach_site_all_Lovongai %>%
    pivot_wider(id_cols = c(ps_site_id, subregion),names_from = functional_group2, values_from = cover)


# What are the dominant groups per site
dom_lov<-
  slice_max( bleach_site_all_Lovongai, order_by = cover, by=ps_site_id)



```

#### Manus

###### Original Functional Group

```{r}


benthic_sites_manus <- benthic_sites %>%
  filter(region == "Manus")

manu_div<-benthic_sites_manus %>%
  group_by(subregion2,ps_site_id) %>%
  dplyr::summarize(leng<-length(ps_site_id))%>%
  group_by(subregion2)%>%
  dplyr::summarise(leng<-length(ps_site_id))

## Percent Cover
ggplot(benthic_sites_manus, aes(ps_site_id, cover, fill = functional_group))+
  geom_bar(stat = "identity", color = "black") +
 scale_fill_manual(name = "", values =c( "cca" = "pink", "soft coral" = "purple",  "encrusting algae" = "darkgreen", "erect algae" = "green3", "hard coral" = "yellow", "cyanobacteria" = "red", "other" = "lightblue", "sediment/rubble/barren" = "gray", "turf"="palegreen",  "sponges" = "dodgerblue" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 110))+
  xlab("")+
  ylab("% Benthic Cover")+
   geom_vline(xintercept = c(7.5, 9.5), linetype ="longdash", size= 1, color = "black") +
  annotate("text", x=4, y=105, label="Bipi", angle=0, size=6, color="black") +
    annotate("text", x=8.5, y=105, label="Manus", angle=0, size=6, color="black") +
    annotate("text", x=14, y=105, label="Harengan", angle=0, size=6, color="black") +

  theme_bw()+
theme(axis.text.y=element_text(size=10, angle = 0),
      axis.text.x=element_text(size=0, angle = 0),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")

```

###### With Bleaching Functional Groups

```{r}
bleach_site_all_Manus <- bleach_site_all %>%
  filter(region == "Manus")


## Percent Cover
ggplot(bleach_site_all_Manus, aes(site_n, cover, fill = functional_group2))+
  geom_bar(stat = "identity", color = "black", width = 0.9) +
 scale_fill_manual(name = "", values =c( "cca" = "pink", "soft coral" = "purple",  "encrusting algae" = "darkgreen", "erect algae" = "green3", "hard coral - live" = "yellow", "cyanobacteria" = "red", "other" = "lightblue", "sediment/rubble/barren" = "gray", "turf"="palegreen",  "sponges" = "dodgerblue", "hard coral - bleached" = "white", "hard coral - dead" = "black" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 110))+
  ylab("\n% Benthic Cover")+
  xlab("Site #")+
   geom_vline(xintercept = c(7.5, 9.5), linetype ="longdash", size= 1, color = "black") +
  annotate("text", x=4, y=105, label="Bipi", angle=0, size=6, color="black") +
    annotate("text", x=8.5, y=105, label="Manus", angle=0, size=6, color="black") +
    annotate("text", x=14, y=105, label="Harengan", angle=0, size=6, color="black") +

  theme_bw()+
theme(axis.text.y=element_text(size=10, angle = 0),
    axis.title.x = element_text(vjust = -0.5),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")


```

###### Coral Groups Only

```{r}


#############################

bleach_site_manus <- bleach_site %>%
  filter(region == "Manus")

ggplot(bleach_site_manus, aes(ps_site_id, cover, fill = functional_group2))+
  geom_bar(stat = "identity", color = "black", width = 1) +
 scale_fill_manual(name = "", values =c(  "hard coral - live" = "yellow", "hard coral - dead" = "black","hard coral - bleached" = "gray80" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 80))+
  coord_flip() +
  xlab("")+
  ylab("% Benthic Cover")+
   geom_vline(xintercept = c(7.5, 9.5), linetype ="longdash", size= .5, color = "black") +
  annotate("text", x=4, y=70, label="Bipi", angle=0, size=6, color="black") +
    annotate("text", x=8.5, y=70, label="Manus", angle=0, size=6, color="black") +
    annotate("text", x=14, y=70, label="Harengan", angle=0, size=6, color="black") +
  theme_bw()+
theme(axis.text.y = element_text(size=0, angle = 0),
      axis.text.x= element_text(size=14,angle = 0),
            axis.ticks.y=element_blank(), 
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")



```

###### Metrics

```{r}

metri_manus<-bleach_site_all_Manus %>%
  filter(functional_group2 %in% c("hard coral - live", "hard coral - bleached","hard coral dead","cyanobacteria")) %>%
  pivot_wider(id_cols = c(ps_site_id, subregion),names_from = functional_group2, values_from = cover)


metri_manus_all<-bleach_site_all_Manus %>%
    pivot_wider(id_cols = c(ps_site_id, subregion),names_from = functional_group2, values_from = cover)


# What are the dominant groups per site
dom_manus<-
  slice_max( bleach_site_all_Manus, order_by = cover, by=ps_site_id)


```

#### Western Islands

###### Original Functional Group

```{r}

benthic_sites_west <- benthic_sites %>%
  filter(region == "Western Islands")

west_div<-benthic_sites_west %>%
  group_by(subregion2,ps_site_id) %>%
  dplyr::summarize(leng<-length(ps_site_id))%>%
  group_by(subregion2)%>%
  dplyr::summarise(leng<-length(ps_site_id))

## Percent Cover
ggplot(benthic_sites_west, aes(ps_site_id, cover, fill = functional_group))+
  geom_bar(stat = "identity", color = "black") +
 scale_fill_manual(name = "", values =c( "cca" = "pink", "soft coral" = "purple",  "encrusting algae" = "darkgreen", "erect algae" = "green3", "hard coral" = "yellow", "cyanobacteria" = "red", "other" = "lightblue", "sediment/rubble/barren" = "gray", "turf"="palegreen",  "sponges" = "dodgerblue" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 110))+
  xlab("")+
  ylab("% Benthic Cover")+
   geom_vline(xintercept = c(7.5, 21.5,24.5), linetype ="longdash", size= 1, color = "black") +
  annotate("text", x=4, y=105, label="Luf", angle=0, size=6, color="black") +
    annotate("text", x=14, y=105, label="Ninigo", angle=0, size=6, color="black") +
    annotate("text", x=23, y=105, label="Aua", angle=0, size=6, color="black") +
      annotate("text", x=27, y=105, label="Wuvulu", angle=0, size=6, color="black") +

  theme_bw()+
theme(axis.text.y=element_text(size=10, angle = 0),
      axis.text.x=element_text(size=0, angle = 0),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")


```

###### With Bleaching Functional Groups

```{r}


bleach_site_all_west <- bleach_site_all %>%
  filter(region == "Western Islands")

## Percent Cover
ggplot(bleach_site_all_west, aes(site_n, cover, fill = functional_group2))+
  geom_bar(stat = "identity", color = "black", width = 0.9) +
 scale_fill_manual(name = "", values =c( "cca" = "pink", "soft coral" = "purple",  "encrusting algae" = "darkgreen", "erect algae" = "green3", "hard coral - live" = "yellow", "cyanobacteria" = "red", "other" = "lightblue", "sediment/rubble/barren" = "gray", "turf"="palegreen",  "sponges" = "dodgerblue", "hard coral - bleached" = "white", "hard coral - dead" = "black" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 110))+
  ylab("\n% Benthic Cover")+
  xlab("Site #")+
   geom_vline(xintercept = c(7.5, 21.5,24.5), linetype ="longdash", size= 1, color = "black") +
  annotate("text", x=4, y=105, label="Luf", angle=0, size=6, color="black") +
    annotate("text", x=14, y=105, label="Ninigo", angle=0, size=6, color="black") +
    annotate("text", x=23, y=105, label="Aua", angle=0, size=6, color="black") +
      annotate("text", x=27, y=105, label="Wuvulu", angle=0, size=6, color="black") +
  theme_bw()+
theme(axis.text.y=element_text(size=10, angle = 0),
      axis.title.x = element_text(vjust = -0.5),
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")





```

###### Coral Groups Only

```{r}

#############################

bleach_site_west<- bleach_site %>%
  filter(region == "Western Islands")

ggplot(bleach_site_west, aes(ps_site_id, cover, fill = functional_group2))+
  geom_bar(stat = "identity", color = "black", width = 1) +
 scale_fill_manual(name = "", values =c(  "hard coral - live" = "yellow", "hard coral - dead" = "black","hard coral - bleached" = "gray80" ) ) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 90))+
  coord_flip() +
  xlab("")+
  ylab("% Benthic Cover")+
   geom_vline(xintercept = c(7.5, 21.5,24.5), linetype ="longdash", size= .5, color = "black") +
  annotate("text", x=4, y=80, label="Luf", angle=0, size=6, color="black") +
    annotate("text", x=16, y=80, label="Ninigo", angle=0, size=6, color="black") +
    annotate("text", x=23, y=80, label="Aua", angle=0, size=6, color="black") +
      annotate("text", x=27, y=80, label="Wuvulu", angle=0, size=6, color="black") +
  theme_bw()+
theme(axis.text.y = element_text(size=0, angle = 0),
      axis.text.x= element_text(size=14,angle = 0),
      axis.ticks.y=element_blank(), 
        axis.title=element_text(size=16),
      legend.text=element_text(size=14),
        strip.background =element_rect(fill="white"),
  strip.text = element_text(colour = 'black', size = 16, face="bold"),
  panel.spacing = unit(2, "lines"),
        plot.title = element_text( size = 20, face = "bold"),
        legend.position = "bottom")
```

###### Metrics

```{r}

metri_west<-bleach_site_all_west %>%
  filter(functional_group2 %in% c("hard coral - live", "hard coral - bleached","hard coral dead","cyanobacteria")) %>%
  pivot_wider(id_cols = c(ps_site_id, subregion),names_from = functional_group2, values_from = cover)


metri_west_all<-bleach_site_all_west %>%
    pivot_wider(id_cols = c(ps_site_id, subregion),names_from = functional_group2, values_from = cover)

# high erect algae

stationss<- 
algae<-cover_by_station_and_taxa%>%
  filter(functional_group == 'erect algae') %>%
  left_join(stations_uvs, by = "ps_station_id") %>%
  filter(region == "Western Islands")

alg_sit<-algae %>%
  filter(ps_site_id %in% c("PNG_2024_uvs_077","PNG_2024_uvs_078"))


# What are the dominant groups per site
dom_manus<-
  slice_max( bleach_site_all_west, order_by = cover, by=ps_site_id)


```

# Coral Genus

##### Site merging for Leg1 and Leg2

```{r}

gen_leg1<-read_excel("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/raw/benthos/PS_PNG_Leg_1_AJKM_GENUS_FINAL.xlsx", sheet = 1)

gen_leg2<-read_excel("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/raw/benthos/PS_PNG_Leg_2_AJKM_Coral_Long_FINAL_1.xlsx", sheet = 1)

gen_leg1<-gen_leg1[,c("Site","Transect_length","Depth","Genus")]
names(gen_leg1)<-c("site","transect_length","depth", "genus")
gen_leg2<-gen_leg2[,c("Site","Transect_length","Depth","Genus")]
names(gen_leg2)<-c("site","transect_length","depth", "genus")

gen<-rbind(gen_leg1, gen_leg2)

gen<-distinct(gen)


# Need to clean up labels to match with metadata
gen$ps_site_id<-gen$site
gen$ps_site_id<-gsub("_","_2024_uvs_", gen$ps_site_id)
gen<- gen %>% dplyr::mutate(label = str_extract(site, "[^_]+$"))
gen$ps_station_id<-ifelse(gen$depth <"6m", paste("PNG_2024_uvs", "5m", gen$label, sep = "_"), 0)
gen$ps_station_id<-ifelse(gen$depth > "6m" | gen$depth < "14m", paste("PNG_2024_uvs", "10m", gen$label, sep = "_"), gen$ps_station_id)
gen$ps_station_id<-ifelse(gen$depth >="15m", paste("PNG_2024_uvs", "20m", gen$label, sep = "_"), gen$ps_station_id)

gen$site<-NULL
gen$label<-NULL


```

##### Region Richness

In an attempt to avoid confusing graphs with std lines around means, creating a bar graph of total generic richness across regions and adding a site mean line.

```{r}

# Getting site means for graph
gen_site_mean<-gen %>%
  group_by(ps_site_id, genus) %>%
  dplyr::summarise(length = length(genus)) %>%
  group_by(ps_site_id) %>%
  dplyr::summarise(count = sum(length)) %>%
  left_join(sites_uvs[,c("ps_site_id","region","subregion","habitat","exposure")]) %>%
  dplyr::group_by(region) %>%
  dplyr::summarise(mean = mean(count), x1 = count[which.min(count)], x2 = count[which.max(count)]) 


# Getting total richess
gen_reg_richness<-gen %>%
  left_join(sites_uvs[,c("ps_site_id","region","subregion","habitat","exposure")] ) %>%
 group_by(region, genus) %>%
  distinct(region, genus) %>%
  mutate(rep = 1)%>%
  group_by(region)%>%
  dplyr::summarize(richness = sum(rep))


gen_region<-cbind(gen_site_mean, gen_reg_richness[,c("richness")])
gen_region$region2<- factor(gen_region$region, levels = c("Murat","Lovongai" ,"Manus","Western Islands"))



ggplot(gen_region, aes(x=region2, y= richness)) + 
 geom_col(fill = "gray90", color = "black", size = .5)+
geom_text(aes(x = region2, y = mean), label = "--------------------", size = 6, color = "black")+
geom_point(aes(region2, mean, color = region2),  size = 10)+
 scale_color_manual(values= c("Murat" = "darkblue","Lovongai" = "lightblue",
 "Manus" = "coral", "Western Islands" = "gold"))+
  ylab("Generic Coral Richness")+
  theme_bw()+
  xlab("")+
 scale_y_continuous(expand = c(0, 70)) +
   scale_y_continuous(expand = c(0, 0)) +
  theme(legend.position = "none",
        panel.grid = element_blank(),
        axis.title.y = element_text(size = 14),
        axis.text=element_text(size=12))





```

##### Taxon cleaning - Leg2

Cleaning up taxonomy and adding family and order for appendix of corals. Only doing Leg2 cause have species info....

```{r}
# creating column with the c.f species and sp. since need to remove this from their names in order to run through the taxonomy. But this will be the record for these names.

coral_sp_leg2<-read_excel("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/raw/benthos/PS_PNG_Leg_2_AJKM_Coral_Long_FINAL_1.xlsx", sheet = 1)

### Need to clean up site id's
coral_sp_leg2$ps_site_id<-gsub("_","_2024_uvs_", coral_sp_leg2$Site)
coral_sp_leg2<- coral_sp_leg2 %>% dplyr::mutate(label = str_extract(Site, "[^_]+$"))


coral_sp_leg2<- coral_sp_leg2 %>%
  mutate(cf_sp = ifelse(str_detect(Species, "cf") | str_detect(Species, "sp") ,coral_sp_leg2$Species,""))
# Adding this to notes colums
coral_sp_leg2$notes<-paste(coral_sp_leg2$cf_sp, coral_sp_leg2$notes, sep = "    ")
coral_sp_leg2$notes<-gsub("NA","",coral_sp_leg2$notes)
coral_sp_leg2$cf_sp<-NULL

# cleaning up taxa column so that it can be read into worms
coral_sp_leg2$Species<-gsub(" sp.","",coral_sp_leg2$Species)
coral_sp_leg2$Species<-gsub(" sp","",coral_sp_leg2$Species)
coral_sp_leg2$Species<-gsub(" cf","",coral_sp_leg2$Species)
coral_sp_leg2$Species<-gsub(" c.f.","",coral_sp_leg2$Species)
coral_sp_leg2$Species<-gsub(" 1","",coral_sp_leg2$Species)
coral_sp_leg2$Species<-gsub(" 2","",coral_sp_leg2$Species)
coral_sp_leg2$Species<-gsub(" aff","",coral_sp_leg2$Species)
coral_sp_leg2$Species<-gsub("1","",coral_sp_leg2$Species)
coral_sp_leg2$Species<-gsub("lobata/australiensis","",coral_sp_leg2$Species)
coral_sp_leg2$Species<-gsub("Porites 3 (aff lichen)","Porites",coral_sp_leg2$Species)
coral_sp_leg2$Species<-trimws(coral_sp_leg2$Species, which = "right")

sort(unique(coral_sp_leg2$Species))


# Running through WORMS for streamlined taxa names
cleanTaxa<-distinct(coral_sp_leg2[,c("Species")])

taxonomy_worms <- cleanTaxa$Species %>% 
  split(ceiling(seq_along(cleanTaxa$Species)/20)) %>% 
  furrr::future_map_dfr(worrms::wm_records_names) %>% 
  janitor::clean_names() %>% 
  filter(!is.na(scientificname)) %>% 
  mutate(rank = str_to_lower(rank),
         taxon_id = if_else(!is.na(valid_aphia_id),
                            paste0("WORMS:", valid_aphia_id),                        NA_character_)) %>% 
  select(Species = scientificname, status, taxon_valid_name = valid_name, taxon_rank = rank, taxon_id, taxon_authority = valid_authority, kingdom, phylum, class, order, family, genus) %>% 
  distinct()

## Lots of name issues
bad_names<-anti_join(unique(coral_sp_leg2[,c("Species")]), taxonomy_worms[,c("taxon_valid_name")], by = c("Species" ="taxon_valid_name"))
sort(bad_names$taxa)
# going back to correct and rerun taxaworms function

# Without the bad names, exporting as data file cleaned.
#write.csv(invert, "~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/raw/benthos/Updated_PNG_2024_inverts_fieldsheet.csv", row.names = F)


# what are the duplicates
duped_taxa_worms <- taxonomy_worms %>% 
  janitor::get_dupes(Species) 

deduped_taxa_worms <- duped_taxa_worms %>% 
  filter(status %in% c("accepted")) %>% 
  select(-dupe_count)

taxonomy_worms <- taxonomy_worms %>% 
  group_by(Species) %>% 
  filter(n() <= 1) %>% # remove duplicates
  bind_rows(deduped_taxa_worms) # add deduped


taxonomy_worms<-as.data.frame(taxonomy_worms[,c("Species","genus","family", "order","class","phylum", "taxon_valid_name")])
# species isn't really species as it has the lowest taxon, so
# remaking species column from taxon_valid_name

# this just created a column called species and if there was a space (which would indicate a species name), then it marks it as true
taxonomy_worms$species<-str_count(taxonomy_worms$taxon_valid_name, " ") > 0
# if else statement, if T copy the taxon_valid_name, if F, then keep it blank
taxonomy_worms$species<-ifelse(taxonomy_worms$species == T,taxonomy_worms$taxon_valid_name,"" )
taxonomy_worms_use<-taxonomy_worms[,c("order", "family", "taxon_valid_name","Species")]

# are there any differences or do they all match up?
setdiff(coral_sp_leg2$Species, taxonomy_worms$taxon_valid_name)

# once cleaned, joining the full taxonomy back to the main df
coral_sp_leg2_modified<-left_join(coral_sp_leg2, taxonomy_worms, by = c("Species"))



```

# Recruits

##### Subregion densities

```{r}

load("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/processed/recruits/PNG_2024_uvs_recruit.RData")

density_region <- recruit_observations %>%
 # filter(region == "Murat") %>%
  mutate(Rep = 1)%>%
    group_by(region, subregion, ps_site_id) %>%
  dplyr::summarize(count = sum(Rep)) %>%
  left_join(recruit_quad_area_by_site[,c("ps_site_id","area_m2")],., by = "ps_site_id") %>%
    group_by(region, subregion)%>%
  dplyr::summarize(count = sum(count), area = sum(area_m2)) %>%
      group_by(region, subregion, count, area)%>%
  dplyr::summarize(density = count/area)
    

```

##### Merging recruit and benthic LPI data for Lovongai

```{r}
total_site_recruits<-recruit_observations %>% mutate(Rep = 1) %>% group_by(ps_site_id, region, subregion )%>%dplyr::summarise(count = sum(Rep))

recruits_functional_groups_Lovongai<-total_site_recruits %>% left_join(recruit_quad_area_by_site[,c("ps_site_id", "area_m2")], by = "ps_site_id") %>%
   left_join(benthic_sites[,c("ps_site_id","cover","functional_group")], by = "ps_site_id") %>%
   filter(region == "Lovongai") %>%
   mutate(dens = count/area_m2)
```

##### Scatterplot - Algae and Cyan vs recruits

```{r}

 erect_cyan<-recruits_functional_groups_Lovongai %>%
   filter(functional_group %in% c("cyanobacteria","erect algae","turf", "encrusting algae")) %>%
   group_by(ps_site_id, subregion, dens) %>%
   dplyr::summarise(cover = sum(cover))

ggplot(erect_cyan, aes(dens, cover)) +
 geom_point(pch = 21, size = 6, col = "black", fill = "tomato4", lwd=3)+
  geom_smooth(method='lm', formula= y~x, col="gray60")+
  ylab("Cyanobacteria and Algae")+
  xlab("coral recruits (< 5cm) per m2")+
  ylim(10,70)+
  theme_bw()+
    theme(legend.position = "none",
        panel.grid = element_blank(),
        axis.title.y = element_text(size = 16),
        axis.title.x = element_text(size = 16),
        axis.text=element_text(size=12),
        axis.text.x = element_text(size = 12))


 
 
```

##### Scatterplot - Coral/CCA vs recruits

```{r}
ccacoral<-recruits_functional_groups_Lovongai %>%
   filter(functional_group %in% c("hard coral","cca")) %>%
   group_by(ps_site_id, subregion, dens) %>%
   dplyr::summarise(cover = sum(cover))

ggplot(ccacoral, aes(dens, cover)) +
 geom_point(pch = 21, size = 6, fill = "yellow",  lwd=3)+
 geom_smooth(method='lm', formula= y~x, col="gray60")+
  ylab("CCA and Coral cover")+
  xlab("coral recruits (< 5cm) per m2")+
  ylim(10,70)+
  theme_bw()+
    theme(legend.position = "bottom",
        panel.grid = element_blank(),
        axis.title.y = element_text(size = 16),
        axis.title.x = element_text(size = 16),
        axis.text=element_text(size=12),
        axis.text.x = element_text(size = 12))

```

# Inverts

### Basic metrics

```{r}

load("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/processed/invert/PNG_2024_uvs_invert.RData")

# Interested in seeing number density by subregion by resource inverts
invert_subregion_area<-invert_transect_area %>%
  left_join(sites_uvs[,c("region","subregion","ps_site_id")], by ="ps_site_id") %>%
  group_by(region,subregion)%>%
  mutate(area_m2 = as.numeric(area_m2), n_transects = as.numeric(n_transects)) %>%
  dplyr::summarize(total_area_m2 = sum(area_m2), total_transects = sum(n_transects))

### Getting Richness
invert_richness<-invert_observations %>%
    left_join(sites_uvs[,c("region","subregion","ps_site_id")], by ="ps_site_id") %>%
   filter(region %in% c("Lovongai","Murat")) %>%
  distinct(region,subregion, ps_site_id, taxa) %>%
  mutate(rep = 1) %>%
  group_by(region, subregion, ps_site_id) %>%
  dplyr::summarise(richness = sum(rep))


### Getting Abudnance
invert_abundance<-invert_observations %>%
    left_join(sites_uvs[,c("region","subregion","ps_site_id")], by ="ps_site_id") %>%
   group_by(region, subregion, ps_site_id) %>%
  dplyr::summarise(abundance = sum(count))



```

### TreeMap - Overall

```{r}
### InvertTotal
inverts_rich<-unique(invert_taxa_table[,c("phylum", "class", "order", "family", "genus", "taxa")]) %>%
  filter(!phylum %in% c("Annelida"))
unique(inverts_rich$family) # 49 families


### Inverts
invertsTree<-unique(invert_taxa_table[,c("phylum", "class", "order", "family", "genus", "taxa")]) %>%
  mutate(Rep = 1) %>%
  group_by(phylum, class, family) %>%
  summarise(n=sum(Rep)) %>%
  filter(!phylum %in% c("Porifera"))
  

ggplot(invertsTree, aes(area = n,
                   fill = phylum,
                   subgroup = phylum,
                   subgroup2 = class,
                   subgroup3 = family,
                   label = paste(family,n, sep ="\n"))) +
  treemapify::geom_treemap(show.legend = T)+
  # treemapify::geom_treemap_text(colour = "black", place = "middle", reflow = T, min.size = 3)+
  labs(fill = "",
       title = "")+
  geom_treemap_text(colour = "black",
                    place = "centre",
                    size = 15)+
  geom_treemap_subgroup_border(colour = "white", size = 2)+
  scale_fill_manual(values = colorRampPalette(RColorBrewer::brewer.pal(12, "Set3"))(24))+
  # guides(fill = guide_legend(nrow=5,byrow=TRUE))
  theme(legend.position = "bottom")

```

### Murat

##### TreeMap

```{r}


### Inverts
invertsTree_murat<-invert_observations %>%
    left_join(sites_uvs[,c("region","subregion","ps_site_id")], by ="ps_site_id") %>%
  filter(region == "Murat") %>%
  distinct(taxa)%>%
  left_join(invert_taxa_table, by = "taxa") %>%
  data.frame()%>%
  mutate(Rep = 1) %>%
  group_by(phylum, class, family) %>%
  summarise(n=sum(Rep)) %>%
  filter(!phylum %in% c("Porifera"))
  
ggplot(invertsTree_murat, aes(area = n,
                   fill = phylum,
                   subgroup = phylum,
                   subgroup2 = class,
                   subgroup3 = family,
                   label = paste(family,n, sep ="\n"))) +
  treemapify::geom_treemap(show.legend = T)+
  # treemapify::geom_treemap_text(colour = "black", place = "middle", reflow = T, min.size = 3)+
  labs(fill = "",
       title = "")+
  geom_treemap_text(colour = "black",
                    place = "centre",
                    size = 15)+
  geom_treemap_subgroup_border(colour = "white", size = 2)+
  scale_fill_manual(values = colorRampPalette(RColorBrewer::brewer.pal(12, "Set3"))(24))+
  # guides(fill = guide_legend(nrow=5,byrow=TRUE))
  theme(legend.position = "bottom")

```

##### Richness

```{r}
rich_murat <- invert_richness %>%
  filter(region == "Murat") 

murat_stat<-aov(richness ~ subregion, data = rich_murat)
summary(murat_stat)
TukeyHSD(murat_stat)


ggplot(rich_murat, aes(x=subregion, y=richness)) + 
  geom_boxplot()+
  geom_point(aes(color = subregion, fill = subregion), pch = 21, size = 6, col = "Black", lwd=3)


```

##### Abundance

```{r}
abun_murat <- invert_abundance %>%
  filter(region == "Murat") 

murat_abun_stat<-aov(abundance ~ subregion, data = abun_murat)
summary(murat_abun_stat)
TukeyHSD(murat_abun_stat)


ggplot(abun_murat, aes(x=subregion, y=abundance)) + 
  geom_boxplot()+
  geom_point(aes(color = subregion, fill = subregion), pch = 21, size = 6, col = "Black", lwd=3)





```

##### Venn Diagram

```{r}
ven_murat<-invert_observations %>%
    left_join(sites_uvs[,c("region","subregion","ps_site_id")], by ="ps_site_id") %>%
  filter(region == "Murat") %>%
  distinct(subregion, family,taxa)
unique(ven_murat$family) #30
unique(ven_murat$taxa) #64


vennlist<-split(ven_murat$taxa,ven_murat$subregion)
mus<-vennlist$Massau
emi<-vennlist$Emirau
ten<-vennlist$Tench
intersect(intersect(mus,emi),ten)

ggVennDiagram(vennlist, label_alpha = 0, 
              label_size = 4) +
  ggtitle("Taxa only")+
  scale_fill_gradient(low = "white", high = "red")

```

##### Giant Clams

```{r}

gc_murat<-invert_observations %>%
  filter(common_name == "Giant clams" & transect != "Off") %>%
      right_join(invert_transect_area, by = "ps_site_id") %>%
    group_by(ps_site_id, area_m2) %>%
dplyr::summarise(n_individuals = sum(count))%>%
    group_by(ps_site_id,area_m2, n_individuals) %>%
dplyr::summarise(ind_m2 = round((n_individuals/area_m2),2)) %>%
     mutate(ind_m2 = ifelse(is.na(ind_m2),0,ind_m2), n_individuals = ifelse(is.na(n_individuals),0,n_individuals)) %>%
    right_join(sites_uvs[,c("region","subregion","locality", "ps_site_id")], by = "ps_site_id") %>%
      filter(region == "Murat") 
  
 
ggplot(gc_murat, aes(x=subregion, y= ind_m2)) + 
  geom_point(aes(color = subregion, fill = subregion), pch = 21, size = 6, col = "Black")+
  stat_summary(fun.y = "mean", fun.ymin = "mean", fun.ymax= "mean", size= 0.3, geom = "crossbar") +
    scale_fill_manual(values= c("Mussau" = "yellow2",
        "Emirau" = "dodgerblue", "Tench"=  "gray20"))+
  ylab("Giant clams per m2")+
  theme_bw()+
  xlab("")+
  geom_hline(yintercept = 0.1, linetype="dotted", 
               color = "black", size=1.0)+
  theme(legend.position = "none",
        panel.grid = element_blank(),
        axis.title.y = element_text(size = 16),
        axis.text=element_text(size=12),
        axis.text.x = element_text(size = 16))


```

### Lovongai

##### TreeMap

```{r}


### Inverts
invertsTree_lov<-invert_observations %>%
    left_join(sites_uvs[,c("region","subregion","ps_site_id")], by ="ps_site_id") %>%
  filter(region == "Lovongai") %>%
 distinct(taxa)%>%
  left_join(invert_taxa_table, by = "taxa") %>%
  data.frame()%>%
  mutate(Rep = 1) %>%
  group_by(phylum, class, family) %>%
  summarise(n=sum(Rep)) %>%
  filter(!phylum %in% c("Porifera"))
  
ggplot(invertsTree_lov, aes(area = n,
                   fill = phylum,
                   subgroup = phylum,
                   subgroup2 = class,
                   subgroup3 = family,
                   label = paste(family,n, sep ="\n"))) +
  treemapify::geom_treemap(show.legend = T)+
  # treemapify::geom_treemap_text(colour = "black", place = "middle", reflow = T, min.size = 3)+
  labs(fill = "",
       title = "")+
  geom_treemap_text(colour = "black",
                    place = "centre",
                    size = 15)+
  geom_treemap_subgroup_border(colour = "white", size = 2)+
  scale_fill_manual(values = colorRampPalette(RColorBrewer::brewer.pal(12, "Set3"))(24))+
  # guides(fill = guide_legend(nrow=5,byrow=TRUE))
  theme(legend.position = "bottom")

```

##### Richness

```{r}
rich_lovongai<- invert_richness %>%
  filter(region == "Lovongai") 

lov_stat<-aov(richness ~ subregion, data = rich_lovongai)
summary(lov_stat)
TukeyHSD(lov_stat)


ggplot(rich_lovongai, aes(x=subregion, y=richness)) + 
  geom_boxplot()+
  geom_point(aes(color = subregion, fill = subregion), pch = 21, size = 6, col = "Black", lwd=3)



```

##### Abundance

```{r}
abun_lov <- invert_abundance %>%
  filter(region == "Lovongai") 

lovongai_abun_stat<-aov(abundance ~ subregion, data = abun_lov)
summary(lovongai_abun_stat)
TukeyHSD(lovongai_abun_stat)


ggplot(abun_lov, aes(x=subregion, y=abundance)) + 
  geom_boxplot()+
  geom_point(aes(color = subregion, fill = subregion), pch = 21, size = 6, col = "Black", lwd=3)





```

##### Shared taxa - too many subregions to do proper venn diagram

```{r}
ven_lov<-invert_observations %>%
    left_join(sites_uvs[,c("region","subregion","ps_site_id")], by ="ps_site_id") %>%
  filter(region == "Lovongai") %>%
  distinct(subregion, family,taxa)
data_frame()

unique(ven_lov$family) #30
unique(ven_lov$taxa) #64


vennlist_lov<-split(ven_lov$taxa,ven_lov$subregion)
ane<-vennlist_lov$Enelava
au<-vennlist_lov$Au
luk<-vennlist_lov$Nemto
dun<-vennlist_lov$Dunung
nai<-vennlist_lov$Neitab
tin<-vennlist_lov$Tingwon
tso<-vennlist_lov$Tsoilik
kun<-vennlist_lov$Kung

# None are shared across regions
intersect(intersect(intersect(intersect(intersect(intersect(intersect(ane,au),luk),dun),nai),tin),tso), kun)

## What about these three?
intersect(intersect(au,dun),nai)

## What about these two that are closer together?
intersect(au,tin)

### Can't do Venn cause too many - 8 subregions
ggVennDiagram(vennlist_lov, label_alpha = 0, 
              label_size = 4) +
  ggtitle("Taxa only")+
  scale_fill_gradient(low = "white", high = "red")
# zero shared
4+2+7+7+7+9+11
((4+2+7+7+7+9+11)/68)*100

```

##### Giant Clams

```{r}

gc_lov<-invert_observations %>%
  filter(common_name == "Giant clams" & transect != "Off") %>%
      right_join(invert_transect_area, by = "ps_site_id") %>%
    group_by(ps_site_id, area_m2) %>%
dplyr::summarise(n_individuals = sum(count))%>%
    group_by(ps_site_id,area_m2, n_individuals) %>%
dplyr::summarise(ind_m2 = round((n_individuals/area_m2),2)) %>%
     mutate(ind_m2 = ifelse(is.na(ind_m2),0,ind_m2), n_individuals = ifelse(is.na(n_individuals),0,n_individuals)) %>%
    right_join(sites_uvs[,c("region","subregion","locality", "ps_site_id")], by = "ps_site_id") %>%
      filter(region == "Lovongai") 
 
ggplot(gc_lov, aes(x=subregion, y= ind_m2)) + 
  geom_point(aes(color = subregion, fill = subregion), pch = 21, size = 6, col = "Black", lwd=3)+
  stat_summary(fun.y = "mean", fun.ymin = "mean", fun.ymax= "mean", size= 0.3, geom = "crossbar") +
   scale_fill_brewer(palette = "Set2")+
  ylab("Giant clams per m2")+
  theme_bw()+
  xlab("")+
  geom_hline(yintercept = 0.1, linetype="dotted", 
               color = "black", size=1.0)+
  theme(legend.position = "none",
        panel.grid = element_blank(),
        axis.title.y = element_text(size = 16),
        axis.text=element_text(size=12),
        axis.text.x = element_text(size = 16, angle = 45,hjust = 1))


```

### Manus

##### Giant Clams

```{r}

gc_man<-invert_observations %>%
  filter(common_name == "Giant clams" & transect != "Off") %>%
      right_join(invert_transect_area, by = "ps_site_id") %>%
    group_by(ps_site_id, area_m2) %>%
dplyr::summarise(n_individuals = sum(count))%>%
    group_by(ps_site_id,area_m2, n_individuals) %>%
dplyr::summarise(ind_m2 = round((n_individuals/area_m2),2)) %>%
     mutate(ind_m2 = ifelse(is.na(ind_m2),0,ind_m2), n_individuals = ifelse(is.na(n_individuals),0,n_individuals)) %>%
    right_join(sites_uvs[,c("region","subregion","locality", "ps_site_id")], by = "ps_site_id") %>%
      filter(region == "Manus") 


ggplot(gc_man, aes(x=subregion, y= ind_m2)) + 
  geom_point(aes(color = subregion, fill = subregion), pch = 21, size = 6, col = "Black")+
  stat_summary(fun.y = "mean", fun.ymin = "mean", fun.ymax= "mean", size= 0.3, geom = "crossbar") +
   scale_fill_brewer(palette = "Set2")+
  ylab("Giant clams per m2")+
  theme_bw()+
  xlab("")+
 geom_hline(yintercept = 0.1, linetype="dotted",                color = "black", size=1.0)+
  theme(legend.position = "none",
        panel.grid = element_blank(),
        axis.title.y = element_text(size = 16),
        axis.text=element_text(size=12),
        axis.text.x = element_text(size = 16, angle = 45,hjust = 1))


```

### Westerm

##### Giant Clams

```{r}

gc_west<-invert_observations %>%
  filter(common_name == "Giant clams" & transect != "Off") %>%
      right_join(invert_transect_area, by = "ps_site_id") %>%
    group_by(ps_site_id, area_m2) %>%
dplyr::summarise(n_individuals = sum(count))%>%
    group_by(ps_site_id,area_m2, n_individuals) %>%
dplyr::summarise(ind_m2 = round((n_individuals/area_m2),2)) %>%
     mutate(ind_m2 = ifelse(is.na(ind_m2),0,ind_m2), n_individuals = ifelse(is.na(n_individuals),0,n_individuals)) %>%
    right_join(sites_uvs[,c("region","subregion","locality", "ps_site_id")], by = "ps_site_id") %>%
      filter(region == "Western Islands") 
 
ggplot(gc_west, aes(x=subregion, y= ind_m2)) + 
  geom_point(aes(color = subregion, fill = subregion), pch = 21, size = 6, col = "Black")+
  stat_summary(fun.y = "mean", fun.ymin = "mean", fun.ymax= "mean", size= 0.3, geom = "crossbar") +
   scale_fill_brewer(palette = "Set2")+
  ylab("Giant clams per m2")+
  theme_bw()+
  xlab("")+
  geom_hline(yintercept = 0.1, linetype="dotted", 
               color = "black", size=1.0)+
  theme(legend.position = "none",
        panel.grid = element_blank(),
        axis.title.y = element_text(size = 16),
        axis.text=element_text(size=12),
        axis.text.x = element_text(size = 16, angle = 45,hjust = 1))


```

# Appendices

##### Invert

```{r}

# Invert

apen_invert<-invert_observations %>%
  left_join(sites_uvs[,c("region","subregion","ps_site_id")], by = "ps_site_id") %>%
  distinct(region, taxa)%>%
  left_join(invert_taxa_table[,c("taxa","common_name", "phylum","class", "order","family")], by = "taxa") %>%
  mutate(rep = 1)%>%
  pivot_wider(names_from = region, values_from = rep) 
  

apen_invert<-apen_invert[,c("common_name","phylum","class","order","family","taxa","Murat","Lovongai")]
colnames(apen_invert)<-c("Common name","Phylum","Class","Order","Family","Taxa","Murat","Lovongai")
apen_invert2<-ifelse(is.na(apen_invert[,c("Murat","Lovongai")]), "","X")
appen_invert_final<-cbind(apen_invert[,1:6], apen_invert2)
write.csv(appen_invert_final,"PNG_2024_Invert_Appendix.csv", row.names = F)


```

##### LPI

```{r}


apen_lpi<-cover_by_station_and_taxa %>%
  left_join(lpi_stations[,c("ps_station_id","region")], by = "ps_station_id")%>%
  group_by(region, morphotaxon) %>%
  distinct(region, morphotaxon) %>%
  left_join(lpi_morphotaxa[,c("morphotaxon","functional_group", "phylum","class", "order","family", "accepted_name")], by = "morphotaxon") %>%
   group_by(region, functional_group, phylum,class, order,family, accepted_name)%>% 
  drop_na(accepted_name)%>%
  distinct(region, functional_group, phylum,class, order,family, accepted_name)%>%
  mutate(rep = 1) %>%
  pivot_wider(names_from = region, values_from = rep) %>%
  # dropping this because there were other entries with the family...and sp1, 2, 3 not consistent across both expeditions
drop_na(family)

apen_lpi<-apen_lpi[,c("functional_group","phylum","class","order","family","accepted_name","Murat","Lovongai","Manus","Western Islands")]
colnames(apen_lpi)<-c("Functional group","Phylum","Class","Order","Family","Taxa","Murat","Lovongai","Manus","Western Islands")
apen_lpi2<-ifelse(is.na(apen_lpi[,c("Murat","Lovongai","Manus","Western Islands")]), "","X")
appen_lpi_final<-cbind(apen_lpi[,1:6], apen_lpi2)
write.csv(appen_lpi_final,"PNG_2024_LPI_Appendix.csv", row.names = F)


```

##### Coral

```{r}

### Need to clean up ps_site_id

apen_coral<-coral_sp_leg2_modified %>%
  left_join(sites_uvs[,c("ps_site_id","region")], by = "ps_site_id")%>%
  group_by(region, taxon_valid_name, family) %>%
   distinct(region, taxon_valid_name,  family) %>%
  mutate(rep = 1)%>%
  pivot_wider(names_from = region, values_from = rep) 

apen_coral<-apen_coral[,c("family","taxon_valid_name","Manus","Western Islands")]
colnames(apen_coral)<-c("Family","Taxa","Manus","Western Islands")
apen_coral2<-ifelse(is.na(apen_coral[,c("Manus","Western Islands")]), "","X")

appen_coral_final<-cbind(apen_coral[,1:2], apen_coral2)
write.csv(appen_coral_final,"PNG_2024_Coral_Appendix.csv", row.names = F)


```
