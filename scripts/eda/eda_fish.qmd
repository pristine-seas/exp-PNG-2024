---
title: "Exploratory Analysis of Fish Survey Data"
format:
  html:
    toc: true
    toc-depth: 3
    toc-location: right
    code-fold: true
    theme: cosmo
execute:
  echo: true
  warning: false
  message: false
---

```{r setup, message = F, warning = F, fig.width = 10, fig.height = 10, echo = F}
options(scipen = 999)

# Hook to format inline numeric expressions with comma separators:
knitr::knit_hooks$set(inline = function(x) {
  if (!is.numeric(x)) {
    # For non-numeric values, just return as character
    return(as.character(x))
  }
  # Format numbers with comma as big.mark, no scientific notation
  format(x, big.mark = ",", scientific = FALSE)
})

library(PristineSeasR)
library(sf)
library(hms)
library(readxl)
library(janitor)
library(lubridate)
library(gt)
library(pointblank)
library(bigrquery)
library(leaflet)
library(leaflet.extras)
library(glue)
library(lme4)
library(lmerTest)   # gives p-values for fixed effects
library(emmeans)
library(emmeans)
library(multcomp)
library(multcompView)
library(multcomp)
library(reactable)
library(scales)
library(reactablefmtr)
library(parameters)
library(tidyverse)
library(ggdist)

ggthemr::ggthemr("fresh")

ps_paths <- PristineSeasR::get_sci_drive_paths()

exp_id <- "PNG_2024"

exp_path <- file.path(ps_paths$expeditions, str_replace(exp_id, "_", "-"))

bigrquery::bq_auth(email = "marine.data.science@ngs.org")

bq_connection <- DBI::dbConnect(bigrquery::bigquery(), project = "pristine-seas")
```

# Introduction

This document presents an exploratory analysis of fish survey data collected during the PNG-2024 scientific expedition. Our goal is to characterize patterns in reef fish community structure and composition, and to identify key drivers of species richness, abundance, and biomass across spatial and ecological gradients.

The dataset comprises standardized underwater visual survey (UVS) data collected across multiple islands, regions, and depth strata using consistent belt transect methods. Observers recorded individual fish counts, estimated lengths, and species-level taxonomic identifications. These were used to derive metrics of abundance (individuals per m²), biomass (grams per m²), and species richness per station.

```{r}
# -- Read supporting site data --------------------------------------------

sites <- read_rds(file.path(exp_path, "data/primary/processed/sites.rds"))

uvs_sites <- sites$uvs

protected_sites <- read_xlsx(file.path(exp_path, "data/primary/raw/_PNG-2024-uvs-metadata.xlsx")) |> 
  clean_names() |> 
   mutate(ps_site_id = str_replace(ps_site_id, "(\\d+)$", ~ str_pad(.x, 3, pad = "0"))) |> 
select(ps_site_id, in_mpa, mpa_notes)

uvs_sites <- uvs_sites |> 
  left_join(protected_sites, by = "ps_site_id") 

fish_lut <- tbl(bq_connection, "taxonomy.fish") |> 
  filter(!is.na(accepted_aphia_id)) |> 
  collect()

# -- Read fish survey data -----------------------------------------------

stations <- tbl(bq_connection, "uvs.blt_stations") |> 
  filter(exp_id == "PNG_2024") |> 
  collect()

observations <- tbl(bq_connection, "uvs.blt_observations") |> 
  filter(exp_id == "PNG_2024") |> 
  collect()

biomass_by_taxa_and_station <- tbl(bq_connection, "uvs.blt_biomass_by_taxa") |> 
  filter(exp_id == "PNG_2024") |> 
  collect()

# -- Add Zeros back in  --------------------------------------------------

biomass_by_taxa_and_station <- biomass_by_taxa_and_station |> 
  complete(nesting(ps_station_id, ps_site_id, exp_id, region, subregion, habitat, exposure, divers, depth_strata, depth_m),
           nesting(accepted_name, accepted_aphia_id, rank, family, trophic_group),
           fill = list(total_count      = 0,
                       avg_count        = 0,
                       avg_length_cm    = NA,
                       min_length       = NA,
                       max_length       = NA,
                       density_m2       = 0,
                       biomass_gm2      = 0))
```

In total, we conducted surveys at `r n_distinct(stations$ps_site_id)` sites and `r n_distinct(stations$ps_station_id)` stations across `r n_distinct(stations$region)` regions, covering approximately `r sum(stations$survey_area_m2)` m² of reef habitat (@tbl-fish-stations, @fig-map).

```{r}
#| label: fig-map
#| fig-cap: "Map of fish survey stations"
#| 

habitat_pal <- c("fore_reef"  = "#C5FFFD",
                 "back_reef"  = "#DF2935",
                 "channel"    = "#D8CC34",
                 "patch_reef" = "#772D8B")


stations_sf <- stations |>
  left_join(uvs_sites |> 
              select(ps_site_id, latitude, longitude),
            by = "ps_site_id") |>
  mutate(habitat = factor(habitat, levels = names(habitat_pal))) |>
  group_by(ps_site_id, region, subregion, locality, habitat, exposure, latitude, longitude) |> 
  summarize(team = paste(unique(divers), collapse = "/"),
            strata = paste(unique(paste(depth_strata, " (",depth_m ,"m)", sep = "")), 
                            collapse = "\n"),
            survey_area_m2 = sum(survey_area_m2),
            n_stations = n_distinct(ps_station_id),
            .groups = "drop") |>
  sf::st_as_sf(coords = c("longitude", "latitude"), crs = 4326) 

mapview::mapview(stations_sf,
                 zcol = "habitat",
                 legend = TRUE,
                 col.regions = habitat_pal,
                 map.types = "Esri.WorldImagery",
                 layer.name = "Habitat",
                 popup = leafpop::popupTable(stations_sf, 
                                             zcol = c("ps_site_id", "strata", "team", "survey_area_m2", "habitat", "exposure"))) |> 
  leafem::addMouseCoordinates() |> 
  addFullscreenControl()
```

```{r}
#| label: tbl-fish-stations
#| tbl-cap: "Number of fish survey stations by habitat and depth strata"
#| 
stations |> 
  group_by(region, habitat, depth_strata) |>
  summarise(n = n_distinct(ps_station_id), .groups = "drop") |> 
  pivot_wider(names_from = habitat, values_from = n, values_fill = 0) |> 
  mutate(Total = rowSums(across(where(is.numeric)), na.rm = TRUE)) |>
  gt(groupname_col = "region") |> 
  tab_header(title = "Summary of sampling effort by region",
             subtitle = "Number of stations surveyed by depth strata and habitat") |>
  tab_spanner(label = "Reef Habitats", 
              columns = c("fore_reef", "back_reef", "channel", "patch_reef")) |> 
  tab_style(style = list(cell_fill(color = "#f0f0f0"),
                         cell_text(weight = "bold")),
            locations = list(cells_column_labels(everything()),
                             cells_column_spanners(spanners = "Reef Habitats"))) |>
  opt_table_font(font = list(gt::google_font("Roboto"), default_fonts())) |>
  opt_row_striping() |> 
  tab_options(row_group.as_column = T,
              table.width = pct(100),
              table.font.size = "small") |> 
  opt_vertical_padding(scale = 0.7) |> 
    tab_source_note(source_note = "Depth stratum: supershallow (< 6 m), shallow (7 - 15 m), and deep (>= 15 m).") 
```

Subsequent sections will summarize the data by region and subregion, characterize the dominant taxa, evaluate sampling sufficiency, and explore spatial and ecological drivers of richness, abundance, biomass, and community structure.

# Summary 

## Regional summary

The tables below (@tbl-region-summary, @tbl-subregion-summary) summarize survey coverage and observed patterns in species richness and abundance across regions and subregions. Metrics include the number of stations surveyed, total fish counted, and average richness, abundance, and biomass per station.

These summaries reveal distinct regional patterns in reef fish communities. Lovongai recorded the highest species richness and the greatest average fish biomass per station. In contrast, Murat exhibited the lowest richness and biomass. The Western Islands showed the highest fish abundance, but average biomass per station was comparable to Murat, suggesting smaller-bodied species dominate. Manus had the lowest overall abundance.

In the following sections, we explore spatial and ecological patterns in species richness, abundance, and biomass, focusing on variation across region, depth strata, and observer.

```{r}
# --- Region-level summary -----------------------------------------------
region_summary <- stations |> 
  group_by(region) |> 
  summarize(n_stations = n_distinct(ps_station_id),
            survey_area_m2 = sum(survey_area_m2),
            avg_taxa = mean(avg_taxa),
            avg_count  = mean(avg_count),
            avg_density_m2 = mean(density_m2),
            avg_biomass_gm2 = mean(biomass_gm2),
            median_biomass_gm2 = median(biomass_gm2),
            across(contains("pct") , ~ round(mean(.x, na.rm = TRUE), 2)), 
            .groups = "drop")

n_taxa_by_region <- biomass_by_taxa_and_station |>
  group_by(region) |> 
  summarise(n_taxa = n_distinct(accepted_aphia_id[avg_count > 0]),
            .groups = "drop") 

region_summary <- region_summary |> 
  left_join(n_taxa_by_region) |> 
  relocate(n_taxa, .after = survey_area_m2) |> 
  mutate(across(where(is.numeric), ~round(.x, 2)))
```

```{r}
#| label: tbl-region-summary
#| tbl-cap: "Summary of fish surveys by region"

region_summary |> 
  mutate(survey_area_m2 = scales::comma(survey_area_m2)) |> 
  gt(rowname_col = "region") |> 
  tab_header(title = "Summary of Fish Surveys by Region",
             subtitle = "Average counts, biomass, and trophic composition per station") |> 
  cols_label(n_stations = "Stations",
             survey_area_m2 = "Survey Area (m²)",
             n_taxa = "Taxa Observed",
             avg_taxa = "Avg. Nº Taxa (per transect)",
             avg_count = "Avg. Count (per transect)",
             avg_density_m2 = "Avg. Density (ind/m²)",
             avg_biomass_gm2 = "Avg. Biomass (g/m²)",
             median_biomass_gm2 = "Median Biomass (g/m²)",
             pct_top_predator = "% Top Predator",
             pct_shark = "% Shark",
             pct_lower_carni = "% Lower Carnivore",
             pct_herbi_detri = "% Herbivore/Detritivore",
             pct_plankti = "% Planktivore") |> 
  tab_style(style = list(cell_fill(color = "#f0f0f0"),
                         cell_text(weight = "bold")),
            locations = cells_column_labels(everything())) |>
  opt_table_font(font = list(gt::google_font("Roboto"), default_fonts())) |>
  opt_row_striping() |> 
  tab_options(row_group.as_column = T,
              table.width = pct(100),
              table.font.size = "small") |> 
  opt_vertical_padding(scale = 0.7)
```

```{r}
# --- Subregion-level summary -----------------------------------------------

subregion_summary <- stations |> 
  group_by(region, subregion) |> 
  summarize(n_stations = n_distinct(ps_station_id),
            survey_area_m2 = sum(survey_area_m2),
            avg_taxa = mean(avg_taxa),
            avg_count  = mean(avg_count),
            avg_density_m2 = mean(density_m2),
            avg_biomass_gm2 = mean(biomass_gm2),
            median_biomass_gm2 = median(biomass_gm2),
            across(contains("pct") , ~ round(mean(.x, na.rm = TRUE), 2)), 
            .groups = "drop")

n_taxa_by_subregion <- biomass_by_taxa_and_station |>
  group_by(region, subregion) |> 
  summarise(n_taxa = n_distinct(accepted_aphia_id[avg_count > 0]),
            .groups = "drop") 

subregion_summary <- subregion_summary |> 
  left_join(n_taxa_by_subregion) |> 
  relocate(n_taxa, .after = survey_area_m2) |> 
  mutate(across(where(is.numeric), ~round(.x, 2)))
```

```{r}
#| label: tbl-subregion-summary
#| tbl-cap: "Summary of fish surveys by subregion"

subregion_summary |> 
  mutate(survey_area_m2 = scales::comma(survey_area_m2)) |> 
  gt(rowname_col = "subregion",
     groupname_col = "region") |> 
  tab_header(title = "Summary of Fish Surveys by Region",
             subtitle = "Average counts and biomass per station") |> 
cols_label(n_stations = "Stations",
             survey_area_m2 = "Survey Area (m²)",
             n_taxa = "Taxa Observed",
             avg_taxa = "Avg. Nº Taxa (per transect)",
             avg_count = "Avg. Count (per transect)",
             avg_density_m2 = "Avg. Density (ind/m²)",
             avg_biomass_gm2 = "Avg. Biomass (g/m²)",
             median_biomass_gm2 = "Median Biomass (g/m²)",
             pct_top_predator = "% Top Predator",
             pct_shark = "% Shark",
             pct_lower_carni = "% Lower Carnivore",
             pct_herbi_detri = "% Herbivore/Detritivore",
             pct_plankti = "% Planktivore") |> 
  tab_style(style = list(cell_fill(color = "#f0f0f0"),
                         cell_text(weight = "bold")),
            locations = cells_column_labels(everything())) |>
  opt_table_font(font = list(gt::google_font("Roboto"), default_fonts())) |>
  opt_row_striping() |> 
  tab_options(row_group.as_column = T,
              table.width = pct(100),
              table.font.size = "small") |> 
  opt_vertical_padding(scale = 0.7)
```


```{r}
library(tidyverse)
library(ggdist)
library(patchwork)
library(scales)

# Prepare data
manus_df <- stations |> 
  select(ps_station_id, region, subregion, avg_taxa, density_m2, biomass_gm2) |> 
  pivot_longer(cols = c(avg_taxa, density_m2, biomass_gm2),
               names_to = "metric",
               values_to = "value") |> 
  filter(region == "Manus")

# Base plot template
make_plot <- function(metric_filter, y_label, dot_size = 0.4, binwidth = NULL, halfeye_scale = 0.8, hjust_mean = 1.5, hjust_median = -1) {
  manus_df |> 
    filter(metric == metric_filter) |> 
    ggplot(aes(subregion, value)) +
    stat_dots(side = "left",
              binwidth = binwidth,
              justification = 1.15,
              show.legend = FALSE,
              dotsize = dot_size) +
    geom_boxplot(width = 0.2,
                 outlier.shape = NA,
                 alpha = 0.5,
                 show.legend = FALSE,
                 color = "black") +
    stat_halfeye(adjust = 0.4,
                 scale = halfeye_scale,
                 justification = -0.12,
                 .width = 0,
                 point_colour = NA,
                 show.legend = FALSE,
                 alpha = 0.3,
                 slab_color = NA) +
    stat_summary(fun = mean,
                 geom = "text",
                 aes(label = paste0("μ=", number(..y.., accuracy = 0.1))),
                 hjust = hjust_mean,
                 vjust = -0.3,
                 size = 3,
                 color = "gray30",
                 fontface = "italic") +
    stat_summary(fun = median,
                 geom = "text",
                 aes(label = number(..y.., accuracy = 0.1)),
                 hjust = hjust_median,
                 size = 3,
                 color = "black",
                 fontface = "bold") +
    labs(x = NULL, y = y_label) +
    theme_minimal(base_size = 13) +
    theme(panel.grid.major.x = element_blank(),
          axis.text.x = element_text(angle = 30, hjust = 1))
}

# Create individual plots
plot_a <- make_plot("avg_taxa", "Richness (species/transect)", dot_size = 0.25, halfeye_scale = 0.5, hjust_mean = 1.6, binwidth = 2)
plot_b <- make_plot("density_m2", "Density (count/m²)", dot_size = 0.5, halfeye_scale = 0.9, hjust_mean = 1.6, binwidth = 0.5)
plot_c <- make_plot("biomass_gm2", "Biomass (g/m²)", dot_size = 4, halfeye_scale = 1.1, hjust_mean = 1.4, binwidth = 10)

# Combine using patchwork

final_plot <- (plot_a + theme(axis.text.x = element_blank(),
                              axis.ticks.x = element_blank())) /
              (plot_b + theme(axis.text.x = element_blank(),
                              axis.ticks.x = element_blank())) /
              plot_c +
  plot_annotation(
    title = "Reef fish communities in Manus",
    subtitle = "Species richness, density, and biomass across main islands",
    tag_levels = 'a'
  ) &
  theme(
    plot.title = element_text(size = 16, face = "bold", hjust = 0),
    plot.subtitle = element_text(size = 12, hjust = 0),
    axis.text.x = element_text(angle = 30, hjust = 1)
  )

ggsave(file.path(exp_path, "figures/manus_metrics.png"), 
       final_plot, 
       width = 8, height = 10, dpi = 300)
```

```{r}
library(tidyverse)
library(ggdist)
library(patchwork)
library(scales)

# Main plotting function for any region
make_region_plot <- function(region_name) {
  
  region_df <- stations |> 
    select(ps_station_id, region, subregion, avg_taxa, density_m2, biomass_gm2) |> 
    pivot_longer(cols = c(avg_taxa, density_m2, biomass_gm2),
                 names_to = "metric",
                 values_to = "value") |> 
    filter(region == region_name)
  
  make_plot <- function(metric_filter, y_label, dot_size = 0.4, binwidth = NULL, halfeye_scale = 0.8, hjust_mean = 1.5, hjust_median = -1) {
    region_df |> 
      filter(metric == metric_filter) |> 
      ggplot(aes(subregion, value)) +
      stat_dots(side = "left",
                binwidth = binwidth,
                justification = 1.15,
                show.legend = FALSE,
                dotsize = dot_size) +
      geom_boxplot(width = 0.2,
                   outlier.shape = NA,
                   alpha = 0.5,
                   show.legend = FALSE,
                   color = "black") +
      stat_halfeye(adjust = 0.4,
                   scale = halfeye_scale,
                   justification = -0.12,
                   .width = 0,
                   point_colour = NA,
                   show.legend = FALSE,
                   alpha = 0.3,
                   slab_color = NA) +
      stat_summary(fun = mean,
                   geom = "text",
                   aes(label = paste0("μ=", number(..y.., accuracy = 0.1))),
                   hjust = hjust_mean,
                   vjust = -0.3,
                   size = 3,
                   color = "gray30",
                   fontface = "italic") +
      stat_summary(fun = median,
                   geom = "text",
                   aes(label = number(..y.., accuracy = 0.1)),
                   hjust = hjust_median,
                   size = 3,
                   color = "black",
                   fontface = "bold") +
      labs(x = NULL, y = y_label) +
      theme_minimal(base_size = 13) +
      theme(panel.grid.major.x = element_blank(),
            axis.text.x = element_text(angle = 30, hjust = 1))
  }

  plot_a <- make_plot("avg_taxa", "Richness (species/transect)", dot_size = 0.25, halfeye_scale = 0.5, hjust_mean = 1.6, binwidth = 2)
  plot_b <- make_plot("density_m2", "Density (count/m²)", dot_size = 0.5, halfeye_scale = 0.9, hjust_mean = 1.6, binwidth = 0.5)
  plot_c <- make_plot("biomass_gm2", "Biomass (g/m²)", dot_size = 0.5, halfeye_scale = 1.1, hjust_mean = 1.4, binwidth = 10)

  (plot_a + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())) /
  (plot_b + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())) /
   plot_c +
    plot_annotation(
      title = glue::glue("Reef fish communities in {region_name}"),
      subtitle = "Species richness, density, and biomass across subregions",
      tag_levels = 'a'
    ) &
    theme(
      plot.title = element_text(size = 16, face = "bold", hjust = 0),
      plot.subtitle = element_text(size = 12, hjust = 0),
      axis.text.x = element_text(angle = 30, hjust = 1)
    )
}

final_plot <- make_region_plot("Lovongai")

ggsave(file.path(exp_path, "figures/lovongai_metrics.png"), 
       final_plot, 
       width = 14, height = 8, dpi = 300)
```

## Taxonomic summary

```{r}
# --- Taxon-level summary -----------------------------------------------

taxa_summary <- biomass_by_taxa_and_station |> 
  group_by(trophic_group, family, accepted_name) |> 
  summarise(freq_obs = round(100*sum(total_count > 0)/n(),2),
            total_count = sum(total_count),
            avg_count = round(mean(avg_count, na.rm = T),3),
            avg_length_cm = round(mean(avg_length_cm, na.rm = T)),
            min_length_cm = min(min_length_cm, na.rm = T),
            max_length_cm = max(max_length_cm, na.rm = T),
            across(c("density_m2","biomass_gm2"),\(x) mean(x, na.rm = TRUE)),
            .groups = "drop") 

taxa_summary <- taxa_summary |> 
  left_join(fish_lut |> 
              distinct(order, family)) |> 
  select(order, everything())

# --- Family - level summary -------------------------------------

biomass_by_station_and_family <- biomass_by_taxa_and_station |>
  group_by(ps_station_id, family) |>
  summarise(total_count    = sum(total_count), 
            avg_count      = sum(avg_count),
            density_m2     = sum(density_m2),
            biomass_gm2    = sum(biomass_gm2),
            .groups = "drop")

family_summary <- biomass_by_station_and_family |> 
  group_by(family) |> 
  summarise(freq_obs       = round(100*sum(total_count > 0)/n(),2),
            avg_count      = round(mean(avg_count), 3),
            avg_density_m2   = mean(density_m2),
            avg_biomass_gm2 = mean(biomass_gm2),
            .groups = "drop") 

family_summary <- family_summary |> 
  left_join(biomass_by_taxa_and_station |>
              group_by(family) |>
              summarise(total_count = round(sum(total_count)),
                        n_taxa      = n_distinct(accepted_name[total_count > 0]),
                        .groups = "drop"),
             by = "family") |> 
  mutate(across(c(avg_density_m2, avg_biomass_gm2), round, 6)) |> 
  select(family, n_taxa, total_count, everything())

family_summary <- family_summary |> 
  left_join(fish_lut |> 
              distinct(order, family)) |> 
  select(order, everything())
```

During the expedition, we recorded a total of `r sum(observations$count)` individual fish across **`r n_distinct(observations$accepted_aphia_id)`** distinct taxa during standardized transect surveys. Species richness varied across regions with Lovongai exhibiting the highest number of taxa  (`r region_summary$n_taxa[region_summary$region == "Lovongai"]` species), followed by the Western Islands and Manus. Murat showed the lowest regional richness, with only `r region_summary$n_taxa[region_summary$region == "Murat"]` species observed.

```{r treemap, include = T, eval = T}
#| label: fig-richness-treemap
#| fig-cap: "Number of fish species by order and family"
library(highcharter)

lvl_opts <-  list(list(level = 1,
                       borderWidth = 0,
                       borderColor = "transparent",
                       dataLabels = list(enabled = TRUE,
                                         align = "left",
                                         verticalAlign = "top",
                                         style = list(fontSize = "12px", 
                                                      textOutline = FALSE,
                                                      color = "#FFFCF9",
                                                      fontWeight = "bold"))),
                  list(level = 2,
                       borderWidth = 0,
                       borderColor = "transparent",
                       colorVariation = list(key = "brightness", to = 0.250),
                       dataLabels = list(enabled = FALSE),
                       style = list(fontSize = "9px",
                                    textOutline = FALSE, 
                                    color = "#FFFCF9", 
                                    fontWeight = "bold")))

hc_data <- taxa_summary |> 
  mutate(n = 1) |> 
  mutate_if(is.numeric, round,2) |> 
  data_to_hierarchical(c(order, family), n)

diversity_treemap <- hchart(hc_data,
                            type = "treemap",
                            allowDrillToNode = TRUE,
                            levels = lvl_opts,
                            tooltip = list(valueDecimals = FALSE)) |> 
  hc_chart(style = list(fontFamily = "Roboto")) |> 
  hc_title(text = "Number of fish species by order and family",
           align = "left",
           style = list(fontFamily = "Roboto", fontSize = "22px")) |> 
  hc_size(height = 500)

diversity_treemap
```

The most taxonomically rich families in our surveys were **Labridae** (wrasses, n = 79), and **Pomacentridae** (surgeonfishes, n = 78), followed by **Chaetodontidae** (butterflyfishes, n = 35) ,**Acanthuridae** (surgeonfishes, n = 32) and **Scaridae** (parrotfishes, 31) (@tbl-family-summary)

```{r}
#| label: tbl-family-summary
#| tbl-cap: "Summary of fish families observed during the expedition"

# Custom theme based on nytimes but with normal header casing
custom_tbl_theme <- reactableTheme(
  backgroundColor = "#ffffff",
  borderColor = "#e0e0e0",
  stripedColor = "#f9f9f9",
  highlightColor = "#f0f0f0",
  cellPadding = "2px",
  style = list(fontFamily = "Roboto", fontSize = "13px"),
  headerStyle = list(background = "#efefef",
                     fontWeight = "bold",
                     fontSize = "13px",
                     textTransform = "none",   # <- disables all caps
                     color = "black"))

# Prepare data
family_summary_tbl <- family_summary |>
  mutate(`Taxa Observed`        = n_taxa,
         `Total Count`    = total_count,
         `Avg. Count`           = round(avg_count, 2),
         `Freq. Occurrence (%)` = round(freq_obs, 1),
         `Avg. Density (ind/m²)`      = round(avg_density_m2, 4),
         `Avg. Biomass (g/m²)`  = round(avg_biomass_gm2, 4)) |>
  select(order, family, `Taxa Observed`, `Total Count`, `Avg. Count`, 
         `Freq. Occurrence (%)`, `Avg. Density (ind/m²)`, `Avg. Biomass (g/m²)`)

# Build table
reactable(family_summary_tbl,
          filterable      = TRUE,
          pagination      = TRUE,
          defaultPageSize = 10,
          striped         = TRUE,
          highlight       = TRUE,
          defaultSorted   = list(`Taxa Observed`  = "desc"),
          theme           = custom_tbl_theme,
          columns         = list(order                  = colDef(name = "Order", minWidth = 150),
                                 family                 = colDef(name = "Family", minWidth = 150),
                                 `Freq. Occurrence (%)` = colDef(cell = function(value) paste0(value, "%"), align = "center"),
                                 `Avg. Biomass (g/m²)`  = colDef(cell = function(value) comma(value, accuracy = 0.001)),
                                 `Avg. Density (ind/m²)` = colDef(cell = function(value) comma(value, accuracy = 0.001)))) |> 
  add_title("Fish Families") |> 
  add_subtitle("Summary of fish families observed during the expedition",
               font_size = 20,
               font_color = '#666666',
               margin = reactablefmtr::margin(t=10,r=0,b=15,l=0))
```

Some of the most commonly encountered species includede the bluestreak cleaner wrasse (*Labroides dimidiatus*, observed at 87% of stations), twospot surgeonfish (*Ctenochaetus binotatus*, 76%), and bicolor chromis (*Pycnochromis margaritifer*, 75%)(@tbl-spp-summary). These species were widespread across depth strata and regions.

In terms of numerical abundance, the most dominant taxa were the ternate chromis (*Chromis ternatensis*, 0.84 ind/m²), bicolor chromis (*P. margaritifer*, 0.73 ind/m²), and the darkfin chromis (*Pycnochromis atripes*, 0.43 ind/m²). 

Biomass was dominated by larger-bodied taxa such as the sleek unicornfish (*Naso hexacanthus*, 25 g/m²), bigeye trevally (*Caranx sexfasciatus*, 22 g/m²), and rainbow runner (*Elagatis bipinnulata*, 17 g/m²), all of which contributed significantly to overall fish biomass despite lower numerical abundance. 

We explore differences in community composition across regions in the next sections. 

```{r}
#| label: tbl-spp-summary
#| tbl-cap: "Summary of fish species observed during the expedition"
#| 
# Prepare data
taxa_summary_tbl <- taxa_summary |> 
  rename(`Avg. length (cm)`        = avg_length_cm,
         `Total count`             = total_count,
         `Accepted name`           = accepted_name,
         `Trophic group`           = trophic_group) |> 
  mutate(`Length range (cm)`       = paste0(min_length_cm, "–", max_length_cm),
         `Avg. count`              = round(avg_count, 2),
         `Freq. occurrence (%)`    = round(freq_obs, 1),
         `Avg. Density (ind/m²)` = round(density_m2, 4),
         `Avg. Biomass (g/m²)`     = round(biomass_gm2, 4)) |>
  select(family, `Accepted name`, `Trophic group`, `Length range (cm)`, `Avg. length (cm)`,
         `Total count`, `Avg. count`, `Freq. occurrence (%)`,
         `Avg. Density (ind/m²)`, `Avg. Biomass (g/m²)`)

# Build interactive table
reactable(taxa_summary_tbl,
          filterable      = TRUE,
          pagination      = TRUE,
          defaultPageSize = 10,
          striped         = TRUE,
          highlight       = TRUE,
          defaultSorted   = list(`Total count` = "desc"),
          theme           = custom_tbl_theme,
          columns = list(family                     = colDef(name = "Family", minWidth = 150),
                         `Accepted name`            = colDef(name = "Accepted name",
                                                             cell = function(value) htmltools::tags$i(value),
                                                             minWidth = 180),
                         `Freq. occurrence (%)`     = colDef(cell = function(value) paste0(value, "%"), align = "center"),
                         `Avg. Biomass (g/m²)`      = colDef(cell = function(value) comma(value, accuracy = 0.001)),
                         `Avg. Density (ind/m²)`  = colDef(cell = function(value) comma(value, accuracy = 0.001)))) |>
  add_title("Fish species") |>
  add_subtitle("Summary of fish species observed during the expedition",
               font_size  = 20,
               font_color = "#666666",
               margin     = reactablefmtr::margin(t = 10, r = 0, b = 15, l = 0))
```

# Species Richness

#### Did we sample enough?

To assess the completeness of our species inventories across regions, we generated species accumulation curves using stations as the sampling unit (@fig-acc-curves). These curves provide insight into whether our sampling effort was adequate to capture the underlying diversity in each region. They also help evaluate whether observed differences in species richness reflect genuine ecological patterns or are potentially driven by differences in survey effort or sampling completeness.

```{r}
#| label: fig-acc-curves
#| fig-cap: "Species accumulation curves by region"
#| fig-width: 8

library(vegan)

# Species matrix with one row per transect

biomass_by_transect_and_taxa <- observations |> 
  mutate(ps_transect_id = paste(ps_station_id, diver, station_label, transect, sep = "_")) |> 
  group_by(ps_station_id, diver, station_label, transect, ps_transect_id,
           accepted_name, accepted_aphia_id, rank, family, trophic_group) |> 
  summarize(sum_length_count = sum(length_cm * count, na.rm = TRUE),
            min_length = min(length_cm, na.rm = TRUE),
            max_length = max(length_cm, na.rm = TRUE),
            across(c(count, biomass_g, biomass_gm2, density_m2), 
                   \(x) sum(x, na.rm = TRUE)),
            .groups = "drop") |> 
  left_join(stations |> 
              distinct(ps_station_id, region),
            by = "ps_station_id")

spp_matrix <- biomass_by_transect_and_taxa |> 
  select(region, ps_transect_id, accepted_name, count) |> 
  pivot_wider(names_from = accepted_name, values_from = count, values_fill = 0) |> 
  distinct(ps_transect_id, .keep_all = TRUE) |>  # Keep one row per station
  nest(data = -region)

# 2. Species accumulation per region
accum_curves <- spp_matrix |> 
  mutate(acc = map(data, ~ specaccum(select(.x, where(is.numeric)), method = "random")),
         curve = map(acc, ~ tibble(transect = .x$sites,
                                   richness = .x$richness,
                                   sd = .x$sd))) |> 
  select(region, curve) |> 
  unnest(curve)

# 3. Plot
ggplot(accum_curves, aes(x = transect, y = richness, color = region, fill = region)) +
  geom_line(linewidth = 1) +
  geom_ribbon(aes(ymin = richness - sd, ymax = richness + sd), alpha = 0.2, color = NA) +
  labs(title = "Species Accumulation Curves by Region",
       x = "Number of Transects",
       y = "Accumulated Species Richness") +
  theme(legend.position = "bottom")+
  labs(fill = "", col = "")
```
Lovongai reaches the highest species richness, exceeding 320 species, followed by Manus (310) and Western Islands with 292 species, while Murat consistently shows the lowest richness at 275 species. The narrowing confidence intervals with increased sampling suggest stable and reliable richness estimates at higher transect numbers, revealing clear regional differences in biodiversity.

#### Differences across depth strata, divers, and regions?

Let look at some initial exploratory plots of species richness by depth strata, diver, and region.

::: {.panel-tabset}

###### Region

```{r , include = T, eval = T}
#| label: fig-diversity-region
#| fig-cap: "Species richnnes by region"
#| fig-width: 9
ggstatsplot::ggbetweenstats(data = stations, 
                            x = region, 
                            y = avg_taxa, 
                            mean.ci = TRUE,
                            pairwise.comparisons = TRUE,
                            p.adjust.method = "holm",
                            type = "nonparametric",
                            title = "Species richness by region", 
                            xlab = "", ylab = "Number of species per transect")
```

###### Depth strata

```{r , include = T, eval = T}
#| label: fig-diversity-by-depth
#| fig-cap: "Species richnnes by depth strata"
#| fig-width: 9

ggstatsplot::ggbetweenstats(data = stations, 
                            x = depth_strata, 
                            y = avg_taxa, 
                            mean.ci = TRUE,
                            pairwise.comparisons = TRUE,
                            p.adjust.method = "holm",
                            type = "nonparametric",
                            title = "Species richness by depth strata", 
                            xlab = "", ylab = "Number of species per station")
```

###### Diver

```{r , include = T, eval = T}
#| label: fig-diversity-diver
#| fig-cap: "Species richnnes by diver"
#| fig-width: 9

stations |> 
  filter(!str_detect(divers, "\\|")) |> 
  ggstatsplot::ggbetweenstats(x = divers, 
                              y = avg_taxa, 
                              mean.ci = TRUE,
                              pairwise.comparisons = TRUE,
                              p.adjust.method = "holm",
                              type = "nonparametric",
                              title = "Species richness by diver", 
                              xlab = "", ylab = "Number of species per transect")
```

:::

```{r}
(p <- ggplot(stations, 
       aes(x = factor(region), y = avg_taxa, fill = factor(region))) +
  stat_halfeye(adjust = 0.3,
               justification = -0.12,
               .width = 0,
               point_colour = NA,
               show.legend = FALSE,
               alpha = 0.3,
               slab_color = NA) +
  geom_boxplot(width = 0.12,
               outlier.shape = NA,
               alpha = 0.5,
               show.legend = FALSE,
               color = "black") +
  stat_dots(side = "left",
            justification = 1.1,
            binwidth = 0.4,
            dotsize = 0.7,
            alpha = 0.6,
            show.legend = FALSE) +
  stat_summary(fun = median,
               geom = "text",
               aes(label = number(..y.., accuracy = 0.1)),
               hjust = -0.2,
               size = 3,
               color = "black") +
  coord_flip() +
  scale_fill_brewer(palette = "Set2") +
  labs(y = "# taxa per transect",
       title = paste("Species richness by region"),
       subtitle = "Average number of species recorded per transect",
       x = "", fill = "", color = "") +
  theme_minimal(base_size = 13) +
  theme(panel.grid.major.y = element_blank(),
        legend.position = "none",
        plot.title = element_text(face = "bold", size = 14),
        plot.title.position = "plot",
        axis.text.y = element_text(size = 12),
        axis.text.x = element_text(size = 11)))

ggsave(plot = p, file.path(exp_path, "figures/uvs_fish_richness_by_region.pdf"), width = 10, height = 8)
```

To investigate the drivers of species richness across stations, we fit a linear mixed-effects model with region, depth, diver, and sampling effort as predictors, accounting for repeated observations within sites (@tbl-richness-params).

```{r}
#| label: tbl-richness-params
#| tbl-cap: "Model estimates for species richness"

spp_model <- lmer(total_taxa ~ n_transects + depth_strata + divers +  region + exposure + habitat  + (1 | ps_site_id),
                  data = stations |> 
                    filter(!str_detect(divers, "\\|")))

# Extract results
spp_model_anova <- anova(spp_model)
spp_model_summary <- summary(spp_model)
spp_model_emm_diver <- emmeans(spp_model, pairwise ~ divers, adjust = "tukey")
spp_model_emm_region <- emmeans(spp_model, pairwise ~ region, adjust = "tukey")

model_parameters(spp_model, effects = "fixed") |> 
  insight::format_table(ci_brackets = c("(", ")")) |> 
  select(-Effects) |> 
  gt() |> 
  fmt_number(columns = where(is.numeric), decimals = 2) |> 
  cols_label(Parameter = "Fixed Effect",
             Coefficient = "Estimate",
             p = "p-value") |> 
  tab_header(title = "Model Estimates: Species Richness") |> 
  tab_options(table.font.size = "small",
    heading.title.font.size = "medium",
    row.striping.include_table_body = TRUE) |> 
  opt_row_striping()
```

#### Key findings

The species richness model revealed strong observer effects (χ² = 8.8, p < 0.001) and modest but statistically significant differences across regions (χ² = 3.3, p = 0.024). Sampling effort (χ² = 42.9, p < 0.001) was, as expected, a major predictor of richness—indicating that increasing the number of transects substantially boosts the number of species detected. In contrast, depth strata had no discernible effect on richness (χ² = 0.08, p = 0.92).

Key findings:

- **Sampling effort**: Richness increased strongly with the number of transects (β = 13.91, p < 0.001), confirming the expected positive relationship between effort and species detection.

- **Observer effect**: Diver identity was the strongest predictor of species richness after sampling effort. Compared to Alan Friedlander (reference):

  - Allison Green recorded ~12 fewer species per station on average (β = –12.10, p < 0.001),
  
  - Jenn Caselle recorded ~7 fewer species (β = –6.94, p = 0.072),
  
  - Estimated marginal means show the highest richness for Friedlander (58.0 spp), followed by Caselle (51.1), Green (45.9), McKinnis (43.1), and Summers (40.3).
  
    - Pairwise contrasts confirmed statistically significant differences between Friedlander and both Green (p < 0.001) and Summers (p = 0.028).

- **Regional differences**: Species richness was modestly influenced by region (χ² = 3.3, p = 0.024).   

  - Estimated marginal means indicate lower richness in Murat (36.8 spp) compared to Lovongai (43.3), Manus (42.9), and the Western Islands (44.9).
  - The pairwise difference between Murat and Western Islands approached significance (p = 0.055), suggesting a possible regional signal.

::: {.panel-tabset}

###### Region 

```{r}
#| label: fig-emmeans-by-region
#| fig-cap: "Estimated marginal means of species richness by region, adjusted for differences in sampling effort, depth strata, and region (± 95% CI). Letters indicate statistically distinct groups based on Tukey-adjusted pairwise comparisons"
#| fig-width: 9
#| 
spp_model_emm_region |> 
  cld(adjust = "tukey", Letters = letters, alpha = 0.05) |> 
  ggplot(aes(x = reorder(region, emmean), y = emmean))+
  geom_point()+
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2, color = "#065A82")+
  geom_text(aes(label = .group), vjust = -1, hjust = 0.05, size = 5, fontface = "bold")+
  labs(title = "Estimated Species Richness by Region",
       subtitle = "Letters indicate groups that are not significantly different (Tukey-adjusted, α = 0.05)",
       x = NULL,
       y = "Estimated richness (± 95% CI)") +
  expand_limits(y = 0)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

###### Diver

```{r}
#| label: fig-emmeans-by-diver
#| fig-cap: "Estimated marginal means of species richness by diver, adjusted for differences in sampling effort, depth strata, and region (± 95% CI). Letters indicate statistically distinct groups based on Tukey-adjusted pairwise comparisons"
#| fig-width: 9

spp_model_emm_diver |> 
  cld(adjust = "tukey", Letters = letters, alpha = 0.05) |> 
  ggplot(aes(x = reorder(divers, emmean), y = emmean))+
  geom_point()+
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2, color = "#F08A4B")+
  geom_text(aes(label = .group), vjust = -1, size = 5, fontface = "bold")+
  labs(title = "Estimated Species Richness by Diver",
       subtitle = "Letters indicate groups that are not significantly different (Tukey-adjusted, α = 0.05)",
       x = NULL,
       y = "Estimated richness (± 95% CI)") +
  expand_limits(y = 0)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

:::

## Biodiversity surveys

```{r}
bio_obs <- read_xlsx(file.path(exp_path, "data", "primary", "raw", "fish", "PNG_2024_fish_fieldbook_ALG_FINAL.xlsx"),
          sheet = "biodiversity observations") |> 
  select(ps_site_id = ps_station_id, taxon_valid_name, rel_abundance_code)

name_to_accepted_AphiaID <- fish_lut |>
    pivot_longer(cols = c("taxon_name", "accepted_name"), names_to = "orig_col", values_to = "lookup_name") |>
    filter(!is.na(lookup_name)) |>
    distinct(accepted_aphia_id, lookup_name)

bio_obs <- bio_obs |> 
  left_join(name_to_accepted_AphiaID, by = c("taxon_valid_name" = "lookup_name")) |> 
  #filter(!is.na(accepted_aphia_id)) |> 
  mutate(ps_site_id = str_replace(ps_site_id, "(\\d+)$", ~ str_pad(.x, width = 3, pad = "0"))) |> 
  left_join(stations |> 
              distinct(ps_site_id, region)) |> 
  select(region, ps_site_id, taxon_valid_name, accepted_aphia_id, everything())

bio_aphiaIDs_per_region <- bio_obs |> 
  group_by(region, taxon_valid_name, accepted_aphia_id) |> 
  summarize(n_sites = n_distinct(ps_site_id),
            # most common rel abundance code
            rel_abundance_code = names(which.max(table(rel_abundance_code))),
            .groups = "drop") 

blt_aphiaIDs_per_region <- biomass_by_taxa_and_station |> 
  filter(total_count > 0) |> 
  left_join(stations |> 
              distinct(ps_station_id, region)) |>
  distinct(region, accepted_aphia_id, accepted_name)

new_bio_obs <- bio_aphiaIDs_per_region |> 
  anti_join(blt_aphiaIDs_per_region) |> 
  left_join(fish_lut |> distinct(accepted_aphia_id, family, rank)) |> 
  filter(rank == "species")

new_bio_obs |> 
  filter(!taxon_valid_name %in% taxa_summary$accepted_name)

new_bio_obs |> distinct(taxon_valid_name)
  
write_csv(new_bio_obs, file.path(exp_path, "data", "primary", "processed", "fish", "additional_taxa_from_bio_surveys.csv"))

new_taxa_summary <- bio_obs |> 
  group_by(region) |> 
  summarize(n_sites = n_distinct(ps_site_id),
            n_taxa = n_distinct(accepted_aphia_id),
              .groups = "drop") |> 
  left_join(new_bio_obs |> 
              group_by(region) |> 
              summarize(new_taxa = n_distinct(accepted_aphia_id)))

region_summary |> 
  select(region, n_taxa) |> 
  left_join(new_taxa_summary |> 
              select(region, new_taxa)) |> 
  mutate(total = rowSums(cbind(n_taxa, new_taxa), na.rm = T)) 
```

For three sites in Manus and 27 sites in the Western Islands, Allison Green conducted 90-minute free-swim surveys between 0 and 30 meters depth, following Gerry Allen’s method, to complement the standard belt transects and enhance the assessment of reef fish diversity. 

These surveys added a total of `r new_taxa_summary$new_taxa[new_taxa_summary$region == "Manus"]` species to Manus and 
`r new_taxa_summary$new_taxa[new_taxa_summary$region == "Western Islands"]` species to the Western Islands. As a result, the Western Islands recorded the highest total richness (biodiverisy + BLT surveys) with 464 reef fish species, followed by Manus (354 species), Lovongai (326 species), and Murat (275 species). The families contributing the most additional records were Pomacentridae (22 species), Labridae (17 species), and Apogonidae (13 species).

::: {.panel-tabset}

### Manus

```{r}
library(dplyr)
library(reactable)
library(reactablefmtr)

new_bio_obs |>
  filter(region == "Manus") |>
  select(family, taxon_valid_name, n_sites, rel_abundance_code) |>
  reactable(groupBy = "family",
            searchable = TRUE,
            pagination = TRUE,
            defaultPageSize = 10,
            striped = TRUE,
            highlight = TRUE,
            outlined = TRUE,
            bordered = TRUE,
            showPageSizeOptions = TRUE,
            defaultSorted = list(n_sites = "desc"),
            theme = custom_tbl_theme,
            columns = list(taxon_valid_name   = colDef(name = "Taxon Name",
                                                       align = "left",
                                                       html = TRUE,
                                                       cell = function(value) {paste0("<i>", value, "</i>")}),
                           n_sites            = colDef(name = "Number of Sites", align = "center"),
                           rel_abundance_code = colDef(name = "Relative Abundance", align = "center"))) |> 
  add_title("Additional fish species observed") |> 
  add_subtitle("Manus",
               font_size = 20,
               font_color = '#666666',
               margin = reactablefmtr::margin(t=10,r=0,b=15,l=0))
```

### Western Islands

```{r}
new_bio_obs |>
  filter(region == "Western Islands") |>
  select(family, taxon_valid_name, n_sites, rel_abundance_code) |>
  reactable(groupBy = "family",
            searchable = TRUE,
            pagination = TRUE,
            defaultPageSize = 10,
            striped = TRUE,
            highlight = TRUE,
            outlined = TRUE,
            bordered = TRUE,
            showPageSizeOptions = TRUE,
            defaultSorted = list(n_sites = "desc"),
            theme = custom_tbl_theme,
            columns = list(taxon_valid_name   = colDef(name = "Taxon Name",
                                                       align = "left",
                                                       html = TRUE,
                                                       cell = function(value) {paste0("<i>", value, "</i>")}),
                           n_sites            = colDef(name = "Number of Sites", align = "center"),
                           rel_abundance_code = colDef(name = "Relative Abundance", align = "center"))) |> 
  add_title("Additional fish species observed") |> 
  add_subtitle("Western Islands",
               font_size = 20,
               font_color = '#666666',
               margin = reactablefmtr::margin(t=10,r=0,b=15,l=0))
```

:::


## Off-survey sightings

```{r}
all_spp_Manus <- read_xlsx(file.path(exp_path, "reports", "Manus_NW_Islands_fish_species_list.xlsx"),
                           sheet = "SPECIES LIST",
                           range = "A2:BK622")

all_spp_Manus <- all_spp_Manus |> 
  rowwise() |> 
  rename(taxon = Site) |> 
  mutate(taxon = str_squish(taxon),
         row_sum = sum(c_across(where(is.numeric)), na.rm = TRUE)) |> 
  filter(!is.na(row_sum) & row_sum != 0) |> 
  select(-row_sum) |> 
  ungroup()

all_spp_Manus <- all_spp_Manus |> 
  pivot_longer(cols = -taxon, names_to = "site", values_to = "count") |> 
  mutate(site_number = as.numeric(str_extract(site, "\\d+$")),
         region = if_else(site_number <= 60 | site %in% c("Bipi island","Point Stone", "Six Islands Chain, Bipi", "Three Islands, Harengan"),
                          "Manus", "Western Islands")) |> 
  replace_na(list(region = "Western Islands")) |> 
  group_by(region, taxon) |>
  summarize(total_count = sum(count, na.rm = TRUE),
            .groups = "drop") |> 
  pivot_wider(names_from = region, values_from = total_count, values_fill = 0) 
```


```{r aphiaIDs}
# === 1. Standardize and clean taxon names

all_taxa_clean <- bdc::bdc_clean_names(all_spp_Manus$taxon) |> 
  distinct(taxon       = scientificName,
           taxon_clean = names_clean) |> 
  mutate(across(everything(), str_squish))

# === 2. Prepare names for WoRMS query

clean_names <- all_taxa_clean$taxon_clean |> 
  unique() |> 
  na.omit()  # drops NA

batches <- split(clean_names, ceiling(seq_along(clean_names) / 100))

# === 3. Query WoRMS in batches

worms_raw <- purrr::map_dfr(batches, ~worrms::wm_records_names(.x))

# === 4. Extract key fields from WoRMS response

worms_records <- worms_raw |> 
  select(taxon_clean = scientificname, 
         rank,
         aphia_id = AphiaID, 
         name_status = status, 
         accepted_name = valid_name, 
         accepted_aphia_id = valid_AphiaID,
         family) 

# === 5. Identify and resolve duplicates

worms_dupes <- worms_records |> 
  get_dupes(taxon_clean)

# Deduplicate: retain best record per taxon_clean
resolved_taxa <- worms_dupes |> 
  group_by(taxon_clean) |> 
  arrange(taxon_clean,
          desc(name_status == "accepted" | is.na(name_status)),  # accepted or missing treated as better
          desc(aphia_id == accepted_aphia_id)                    # prefer accepted == AphiaID
  ) |> 
  slice_head(n = 1) |> 
  ungroup()

# === 6. Combine resolved and unique entries

worms_unique <- worms_records |> 
  anti_join(worms_dupes, by = "taxon_clean")

worms_final <- bind_rows(worms_unique, resolved_taxa) |> 
  select(-dupe_count)

# === 7. Merge resolved WoRMS metadata back to original taxa

final_taxa <- all_taxa_clean |>
  left_join(worms_final, by = "taxon_clean") |>
  mutate(rank = str_to_lower(rank)) |> 
  select(taxon, taxon_clean, rank, aphia_id, name_status, accepted_name, accepted_aphia_id, family) |>
  distinct() |>
  arrange(taxon)

off_transect_taxa <- all_spp_Manus |> 
  inner_join(final_taxa |> 
              filter(!is.na(aphia_id),
                     rank == "species") |> 
              select(family, taxon, accepted_name, accepted_aphia_id, aphia_id)) |> 
  filter(!is.na(aphia_id),
         !accepted_name %in% taxa_summary$accepted_name) |> 
  arrange(family, taxon) |> 
  select(family, taxon, accepted_name, Manus, `Western Islands`)


off_transect_taxa |> 
  mutate(across(is.numeric, ~ ifelse(.x > 0, "X", "-"))) |> 
  select(-taxon) |> 
  write_csv(file.path(exp_path, "data", "primary", "processed", "fish", "off_transect_taxa.csv"))
```

Our off-transect observations added `r nrow(off_transect_taxa)` new species to the fish inventory for Manus and the Western Islands. These observations were made during free-swim surveys conducted by Allison Green, Jennifer Caselle, which complemented the standard belt transects.

# Abundance

#### Differences across depth strata, divers, and regions?

Let's begin by looking at some initial exploratory plots of numerical abundance by depth strata, diver, and region.

::: {.panel-tabset}

###### Depth strata

```{r , include = T, eval = T}
#| label: fig-abundance-by-depth
#| fig-cap: "Numerical abundance by depth strata"
#| fig-width: 9

ggstatsplot::ggbetweenstats(data = stations, 
                            x = depth_strata, 
                            y = density_m2, 
                            mean.ci = TRUE,
                            pairwise.comparisons = TRUE,
                            p.adjust.method = "holm",
                            type = "nonparametric",
                            title = "Numerical abundance by depth strata", 
                            xlab = "", ylab = "Average abundance (ind/m2) per station")
```

###### Diver

```{r , include = T, eval = T}
#| label: fig-abundance-diver
#| fig-cap: "Numerical abundance by diver"
#| fig-width: 9
#| 
ggstatsplot::ggbetweenstats(data = stations|> 
                              filter(!str_detect(divers, "\\|")), 
                            x = divers , 
                            y = density_m2, 
                            mean.ci = TRUE,
                            pairwise.comparisons = TRUE,
                            p.adjust.method = "holm",
                            type = "nonparametric",
                            title = "Numerical abundance by diver", 
                            xlab = "", ylab = "Average abundance (ind/m2) per station")
```

###### Region

```{r , include = T, eval = T}
#| label: fig-abundance-region
#| fig-cap: "Numerical abundance by region"
#| fig-width: 9
#| 
ggstatsplot::ggbetweenstats(data = stations, 
                            x = region, 
                            y = density_m2, 
                            mean.ci = TRUE,
                            pairwise.comparisons = TRUE,
                            p.adjust.method = "holm",
                            type = "nonparametric",
                            title = "Numerical abundance by region", 
                            xlab = "", ylab = "Average abundance (ind/m2) per station")
```
:::

We modeled average fish abundance (individuals per m²) at the station level using a generalized linear mixed-effects model (GLMM) with a Gamma distribution and log link. The model included fixed effects for depth strata, diver, region, and sampling effort (number of transects), and a random intercept for site ID (@tbl-abund-params).

```{r}
#| label: tbl-abund-params
#| tbl-cap: "Model estimates for numerical abundance"
#| 
library(glmmTMB)

abund_model <- glmmTMB(density_m2 ~ n_transects + depth_strata + divers + region + habitat + exposure + (1 | ps_site_id),
                       family = Gamma(link = "log"),
                       data = stations |> 
                    filter(!str_detect(divers, "\\|")))

# Extract results
abund_model_anova <- car::Anova(abund_model)
abund_model_summary <- summary(abund_model)
abund_model_emm_diver <- emmeans(abund_model, pairwise ~ divers, adjust = "tukey")
abund_model_emm_region <- emmeans(abund_model, pairwise ~ region, adjust = "tukey")

# Parameter estimates

model_parameters(abund_model, effects = "fixed") |> 
  insight::format_table(ci_brackets = c("(", ")")) |> 
  select(-Effects, -df) |> 
  gt() |> 
  fmt_number(columns = where(is.numeric), decimals = 2) |> 
  cols_label(Parameter = "Fixed Effect",
             Coefficient = "Estimate",
             p = "p-value") |> 
  tab_header(title = "Model Estimates: Numerical Abundance") |> 
  tab_options(table.font.size = "small",
    heading.title.font.size = "medium",
    row.striping.include_table_body = TRUE) |> 
  opt_row_striping()
```

#### Key findings

The abundance model revealed strong observer effects (χ² = 45.9, p < 0.001), a significant influence of depth strata (χ² = 9.1, p = 0.010), and moderate regional variation in fish abundance (χ² = 10.7, p = 0.013). Sampling effort (number of transects) had no detectable effect (χ² = 0.15, p = 0.70), indicating that the per-area standardization (ind/m²) effectively controls for variation in sampling intensity.

Key findings:

  - **Depth effect**: Shallow sites had ~21% higher abundance than deep sites (β = 0.19, p = 0.004).
  - **Observer effect**: Diver identity had a strong influence on abundance estimates. Compared to Alan Friedlander (reference):
    - Allison Green recorded ~41% lower abundance (β = –0.53, p < 0.001),
    - Jenn Caselle recorded similar abundance (β = –0.05, p = 0.88),
    - Estimated marginal means show abundance values of 5.3 ind/m² (Friedlander), 4.3 (Caselle), 3.1 (Green). 
       - Significant pairwise differences were detected between Friedlander and Green (p < 0.001), Summers (p = 0.005), and McKinnis (p = 0.0003).
  - **Regional differences**: Manus exhibited significantly lower abundance than the Western Islands (p = 0.013), while other pairwise contrasts were not statistically significant.
    - Estimated marginal means indicate the highest abundance in the Western Islands (2.64 ind/m²), followed by Lovongai (2.03), Murat (1.67), and Manus (1.23).Although Lovongai and Murat had moderately higher abundance than Manus (1.6× and 1.5×, respectively), these differences were not significant after adjustment for multiple comparisons (@fig-emmeans-abundance-region).

::: {.panel-tabset}

###### Region

```{r}
#| label: fig-emmeans-abundance-region
#| fig-cap: "Estimated marginal means of average numerical abundance by region, adjusted for differences in sampling effort, depth strata, and diver (± 95% CI). Letters indicate statistically distinct groups based on Tukey-adjusted pairwise comparisons"
#| fig-width: 9

abun_model_emmeans <- emmeans(abund_model, pairwise ~ region, type = "response")

abun_model_emmeans$emmeans |>
  cld(adjust = "tukey", Letters = letters, alpha = 0.05, type = "response") |> 
  ggplot(aes(x = reorder(region, response), y = response))+
  geom_point()+
  geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL), width = 0.2, color = "#065A82")+
  geom_text(aes(label = .group), vjust = -1, size = 5, fontface = "bold")+
  labs(title = "Estimated Numerical Abundance by Region",
       subtitle = "Letters indicate groups that are not significantly different (Tukey-adjusted, α = 0.05)",
       x = NULL,
       y = "Estimated Numerical Abundance (± 95% CI)") +
  expand_limits(y = 0)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

###### Diver

```{r}
#| label: fig-emmeans-abundance-diver
#| fig-cap: "Estimated marginal means of average numerical abundance by diver, adjusted for differences in sampling effort, depth strata, and region (± 95% CI). Letters indicate statistically distinct groups based on Tukey-adjusted pairwise comparisons"
#| fig-width: 9
#| 

abun_model_emmeans <- emmeans(abund_model, pairwise ~ divers, type = "response")

abun_model_emmeans$emmeans |>
  cld(adjust = "tukey", Letters = letters, alpha = 0.05, type = "response") |> 
  ggplot(aes(x = reorder(divers, response), y = response))+
  geom_point()+
  geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL), width = 0.2, color = "#F08A4B")+
  geom_text(aes(label = .group), vjust = -1, size = 5, fontface = "bold")+
  labs(title = "Estimated Numerical Abundance by Diver",
       subtitle = "Letters indicate groups that are not significantly different (Tukey-adjusted, α = 0.05)",
       x = NULL,
       y = "Estimated Numerical Abundance (± 95% CI)") +
  expand_limits(y = 0)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

:::

# Biomass

#### Differences across depth strata, divers, and regions?

Let's begin by looking at some initial exploratory plots of fish biomass by depth strata, diver, and region.

::: {.panel-tabset}

###### Depth strata

```{r , include = T, eval = T}
#| label: fig-biomass-by-depth
#| fig-cap: "Fish biomass by depth strata"
#| fig-width: 9

ggstatsplot::ggbetweenstats(data = stations, 
                            x = depth_strata, 
                            y = biomass_gm2, 
                            mean.ci = TRUE,
                            pairwise.comparisons = TRUE,
                            p.adjust.method = "holm",
                            type = "nonparametric",
                            title = "Fish biomass by depth strata", 
                            caption = "Outliers not shown (stations with biomass > 1,000)",
                            ggplot.component = ggplot2::scale_y_continuous(limits = (c(0, 1000))),
                            xlab = "", ylab = "Fish biomass (g/m2) per station", )
```

###### Diver

```{r , include = T, eval = T}
#| label: fig-biomass-diver
#| fig-cap: "Fish biomass by diver"
#| fig-width: 9
#| 
ggstatsplot::ggbetweenstats(data = stations|> 
                              filter(!str_detect(divers, "\\|")), 
                            x = divers, 
                            y = biomass_gm2, 
                            mean.ci = TRUE,
                            pairwise.comparisons = TRUE,
                            p.adjust.method = "holm",
                            type = "nonparametric",
                            title = "Fish biomass by diver", 
                            caption = "Outliers not shown (stations with biomass > 1,000)",
                            ggplot.component = ggplot2::scale_y_continuous(limits = (c(0, 1000))),
                            xlab = "", ylab = "Fish biomass (h/m2) per station")
```

###### Region

```{r , include = T, eval = T}
#| label: fig-biomass-region
#| fig-cap: "Fish biomass by region"
#| fig-width: 9
#| 
ggstatsplot::ggbetweenstats(data = stations, 
                            x = region, 
                            y = biomass_gm2, 
                            mean.ci = TRUE,
                            pairwise.comparisons = TRUE,
                            p.adjust.method = "holm",
                            type = "nonparametric",
                            title = "Fish biomass by region", 
                            caption = "Outliers not shown (stations with biomass > 1,000)",
                            ggplot.component = ggplot2::scale_y_continuous(limits = (c(0, 1000))),
                            xlab = "", ylab = "Fish biomass (g/m2) per station")
```

:::

```{r}
library(ggdist)

p <- stations |> 
  filter(biomass_gm2 < 1000) |>
  ggplot( aes(x = factor(region), y = biomass_gm2, fill = factor(region))) +
  stat_halfeye(adjust = 0.5,
               justification = -0.12,
               .width = 0,
               point_colour = NA,
               show.legend = FALSE,
               alpha = 0.3,
               slab_color = NA) +
  geom_boxplot(width = 0.12,
               outlier.shape = NA,
               alpha = 0.5,
               show.legend = FALSE,
               color = "black") +
  stat_dots(side = "left",
            justification = 1.1,
            binwidth = 1,
            dotsize = 5,
            alpha = 0.6,
            show.legend = FALSE) +
  stat_summary(fun = median,
               geom = "text",
               aes(label = number(..y.., accuracy = 0.1)),
               hjust = -0.2,
               size = 3,
               color = "black") +
  coord_flip() +
  scale_fill_brewer(palette = "Set2") +
  labs(y = "fish biomass (g/m2)",
       title = paste("Fish biomass by region"),
       subtitle = "Average fish biomass (g/m2) per station",
       x = "", fill = "", color = "") +
  theme_minimal(base_size = 13) +
  theme(panel.grid.major.y = element_blank(),
        legend.position = "none",
        plot.title = element_text(face = "bold", size = 14),
        plot.title.position = "plot",
        axis.text.y = element_text(size = 12),
        axis.text.x = element_text(size = 11))

ggsave(plot = p, file.path(exp_path, "figures/uvs_fish_biomass_by_region.pdf"), width = 10, height = 8)
```

We modeled fish biomass (g/m²) at the station level using a generalized linear mixed-effects model (GLMM) with a Gamma distribution and log link. The model included fixed effects for depth strata, diver, region, and sampling effort (number of transects), and a random intercept for site ID (@tbl-biomass-params).

```{r}
#| label: tbl-biomass-params
#| tbl-cap: "Model estimates for fish biomass"
#| 

biomass_model <- glmmTMB(biomass_gm2 ~ n_transects + depth_strata + divers + habitat+ region + (1 | ps_site_id),
                         family = Gamma(link = "log"),
                         data = stations |>
                           filter(!str_detect(divers, "\\|")))

# Extract results

biomass_model_anova <- car::Anova(biomass_model)
biomass_model_summary <- summary(biomass_model)
biomass_model_emm_diver <- emmeans(biomass_model, pairwise ~ divers, adjust = "tukey")
biomass_model_emm_region <- emmeans(biomass_model, pairwise ~ region, adjust = "tukey")

# Parameter estimates

model_parameters(biomass_model, effects = "fixed") |> 
  insight::format_table(ci_brackets = c("(", ")")) |> 
  select(-Effects, -df) |> 
  gt() |> 
  fmt_number(columns = where(is.numeric), decimals = 2) |> 
  cols_label(Parameter = "Fixed Effect",
             Coefficient = "Estimate",
             p = "p-value") |> 
  tab_header(title = "Model Estimates: Fish biomass") |> 
  tab_options(table.font.size = "small",
    heading.title.font.size = "medium",
    row.striping.include_table_body = TRUE) |> 
  opt_row_striping()
```

#### Key findings

The biomass model revealed strong observer effects (χ² = 25.5, p < 0.001), a significant influence of depth strata (χ² = 8.2, p = 0.016), and marginal regional variation in fish biomass (χ² = 7.5, p = 0.059). Sampling effort (number of transects) had no detectable effect (χ² = 0.93, p = 0.34), indicating that the per-area biomass standardization (g/m²) appropriately controls for effort-related variation. Habitat and exposure didn't have any effect either.

Key findings:

  - **Depth effect**: Shallow sites had ~21% lower fish biomass than deep sites (β = –0.25, p = 0.007), contrasting with patterns observed in numerical abundance
  - **Observer effect**: Diver identity had a strong influence on biomass estimates. Compared to Alan Friedlander (reference):
    - Allison Green recorded ~35% lower biomass (β = –0.43, p = 0.003),
    - Jenn Caselle recorded ~57% lower biomass (β = –0.83, p < 0.001).
    - Estimated marginal means show biomass values of 357 g/m² (Friedlander), 231 g/m² (Green), and 155 g/m² (Caselle), with differences between Friedlander and both Green (p = 0.029) and Caselle (p = 0.007) statistically significant.
  - **Regional differences**: Biomass in Murat was significantly lower than in Lovongai (β = –0.72, p = 0.009). Manus showed a non-significant negative trend, and the Western Islands did not differ from Lovongai.
    - Estimated marginal means indicate highest biomass in Lovongai (178 g/m²), followed by the Western Islands (152 g/m²), Manus (129 g/m²), and Murat (87 g/m²). Only Murat was significantly different from Lovongai (@fig-emmeans-biomass-region) 

::: {.panel-tabset}

###### Region 

```{r}
#| label: fig-emmeans-biomass-region
#| fig-cap: "Estimated marginal means of average biomass by region, adjusted for differences in sampling effort, depth strata, and diver (± 95% CI). Letters indicate statistically distinct groups based on Tukey-adjusted pairwise comparisons"
#| fig-width: 9

biomass_model_emmeans <- emmeans(biomass_model, pairwise ~ region, type = "response")

biomass_model_emmeans$emmeans |>
  cld(adjust = "tukey", Letters = letters, alpha = 0.05, type = "response") |> 
  ggplot(aes(x = reorder(region, response), y = response))+
  geom_point()+
  geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL), width = 0.2, color = "#065A82")+
  geom_text(aes(label = .group), vjust = -1, size = 5, fontface = "bold")+
  labs(title = "Estimated Biomass by Region",
       subtitle = "Letters indicate groups that are not significantly different (Tukey-adjusted, α = 0.05)",
       x = NULL,
       y = "Estimated Biomass (± 95% CI)") +
  expand_limits(y = 0)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

###### Diver

```{r}
#| label: fig-emmeans-biomass-diver
#| fig-cap: "Estimated marginal means of average biomass by diver, adjusted for differences in sampling effort, depth strata, and region (± 95% CI). Letters indicate statistically distinct groups based on Tukey-adjusted pairwise comparisons"
#| fig-width: 9

biomass_model_emmeans_diver <- emmeans(biomass_model, pairwise ~ divers, type = "response")

biomass_model_emmeans_diver$emmeans |>
  cld(adjust = "tukey", Letters = letters, alpha = 0.05, type = "response") |> 
  ggplot(aes(x = reorder(divers, response), y = response))+
  geom_point()+
  geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL), width = 0.2, color = "#F08A4B")+
  geom_text(aes(label = .group), vjust = -1, size = 5, fontface = "bold")+
  labs(title = "Estimated Biomass by Diver",
       subtitle = "Letters indicate groups that are not significantly different (Tukey-adjusted, α = 0.05)",
       x = NULL,
       y = "Estimated Biomass (± 95% CI)") +
  expand_limits(y = 0)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

:::

## By Family 

```{r biomass_by_fam, include = T, eval = T}
#| label: fig-biomass-treemap
#| fig-cap: "Biomass by family"

library(paletteer)

create_family_pal <- function(col, n){
  col <- unique(col)
  
  foo <- scales::colour_ramp(c(adjust_luminance(color = col, steps = +2),
                      adjust_luminance(color = col, steps = -.5)))
  
  foo(seq(0, 1, length = n))
}

taxa_colors <- taxa_summary |> 
  distinct(family, accepted_name, biomass_gm2) |> 
  mutate(color_fam = highcharter::colorize(family, 
                              paletteer_d("ggsci::default_igv", direction = -1, n = 43))) |> 
  arrange(desc(family)) |> 
  group_by(family) |> 
  arrange(desc(biomass_gm2)) |> 
  mutate(n_taxa = n_distinct(accepted_name),
         color_sp = highcharter::colorize(accepted_name,
                             colors = create_family_pal(col = color_fam, n = n_taxa))) |> 
  ungroup()

hc_data <- taxa_summary |> 
  left_join(taxa_colors |> 
              select(accepted_name, color_fam, color_sp)) |> 
  filter(!is.na(color_sp)) |> 
  mutate_if(is.numeric, round, 1) |> 
  arrange(desc(family)) |> 
  group_by(family) |> 
  arrange(desc(biomass_gm2)) 

data_to_hierarchical(hc_data,
                     c(family, accepted_name), 
                     biomass_gm2, colors = unique(hc_data$color_fam)) |> 
  hchart(
    type = "treemap",
    allowDrillToNode = TRUE,
    levels = lvl_opts,
    tooltip = list(valueDecimals = 1)) |> 
  hc_chart(style = list(fontFamily = "Times New Roman")) |> 
  hc_title(text = "Fish biomass by family",
           style = list(fontFamily = "Times New Roman")) |> 
  hc_size(height = 500) |> 
  highcharter::hc_tooltip(crosshairs = T) 
```

```{r}
#| label: fig-biomass-by-family-by-subregion
#| fig-cap: "Biomass by family and subregion"
#| fig-width: 10
#| fig-height: 9
#| 
library(plotly)

# 1. Get top 20 families by total biomass
top_fams <- biomass_by_station_and_family |> 
  group_by(family) |> 
  summarize(total_biomass = sum(biomass_gm2, na.rm = TRUE), .groups = "drop") |> 
  slice_max(total_biomass, n = 20) |> 
  pull(family)

# 2. Prepare data and group others into "Other"
plot_data <- biomass_by_station_and_family |>
  left_join(stations |> distinct(ps_station_id, region, subregion), by = "ps_station_id") |>
  mutate(family = if_else(family %in% top_fams, family, "Other")) |> 
  group_by(region, subregion, family) |>
  summarize(biomass_gm2 = round(mean(biomass_gm2), 1), .groups = "drop") |>
  mutate(subregion = fct_reorder(subregion, biomass_gm2, .fun = sum, .desc = TRUE))

# 3. Build family color scale (ensure 'Other' is included)
fam_colors <- taxa_colors |> 
  filter(family %in% top_fams) |> 
  distinct(family, color_fam) |> 
  add_row(family = "Other", color_fam = "#CCCCCC") |> 
  deframe()

# 4. Plot
p <- ggplot(plot_data, aes(x = subregion, y = biomass_gm2, fill = family)) +
  geom_col() +
  labs(x = "", y = "Average biomass (g/m²)", fill = "",
       title = "Fish Biomass by Family and Subregion",
       subtitle = "Stacked bar plot showing mean biomass contributions by family (top 20 only)") +
  scale_fill_manual(values = fam_colors) +
  theme_minimal(base_size = 13) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "bottom",
        legend.box = "horizontal") +
  guides(fill = guide_legend(nrow = 2, byrow = TRUE))+
  facet_wrap(~region, ncol = 4, scales = "free_x")

ggplotly(p, tooltip = c("x", "y", "fill")) |> 
  layout(legend = list(
    orientation = "h",
    xanchor = "center",
    x = 0.5,
    y = -0.25,
    title = list(text = "")))
```

```{r}
# Function to create biomass plot for any region

plot_biomass_by_region <- function(data, region_name, n_top_families = 10) {
  
  # Filter data for the specified region
  region_data <- data |> 
    filter(region == region_name)
  
  # Get top n families by median biomass for this region
  
  top_n_fams <- region_data |> 
    group_by(family) |> 
    summarize(avg_biomass_gm2 = mean(biomass_gm2),
              median_biomass_gm2 = median(biomass_gm2),
              .groups = "drop") |> 
    slice_max(median_biomass_gm2, n = n_top_families)
  
  # Define color palette (use existing or generate new ones if needed)
  
  family_colors <- c(
    "Scaridae"       = "#009E73",  # Green – herbivorous parrotfishes
    "Acanthuridae"   = "#0072B2",  # Blue – surgeonfishes
    "Lutjanidae"     = "#D55E00",  # Orange – snappers (predators)
    "Caesionidae"    = "#56B4E9",  # Sky blue – fusiliers (planktivores)
    "Pomacentridae"  = "#E69F00",  # Amber – damselfishes (ubiquitous)
    "Labridae"       = "#999999",  # Gray – wrasses (diverse)
    "Chaetodontidae" = "#F0E442",  # Yellow – butterflyfishes (corallivores)
    "Epinephelidae"  = "#CC79A7",  # Pink – groupers (top predators)
    "Lethrinidae"    = "#882255",  # Wine red – emperors (benthic feeders)
    "Balistidae"     = "#117733",  # Dark green – triggerfishes (tough, spiny)
    'Other'          = "black"   # Dark gray for other families
  )
  
  # Create plot
  p <- region_data |> 
    # Group less common families as "Other"
    mutate(family = if_else(family %in% top_n_fams$family, family, "Other")) |>
    # Calculate mean biomass by subregion and family
    group_by(subregion, family) |>
    summarize(biomass_gm2 = mean(biomass_gm2),
              .groups = "drop") |> 
    # Reorder families by biomass for better visualization
    ggplot(aes(x = fct_reorder(subregion, biomass_gm2, sum, .desc = TRUE),
               y = biomass_gm2, 
               fill = fct_reorder(family, biomass_gm2, .fun = mean, .desc = FALSE))) +
    geom_col() +
    labs(x = "", y = "Average biomass (g/m²)", fill = "",
         title = paste0("Fish Biomass by Family and Subregion - ", region_name),
         subtitle = "Stacked bar plot showing mean biomass contributions by family") +
    scale_fill_manual(values = family_colors) +
    theme_minimal(base_size = 13) +
    theme(axis.text.x = element_text(angle = 45, hjust = 1),
          legend.position = "bottom",
          legend.box = "horizontal",
          plot.title = element_text(face = "bold"),
          panel.grid.major.x = element_blank()) +
    guides(fill = guide_legend(nrow = 2, byrow = TRUE))
  
  # Return the plot
  return(p)
}

# Create a joined dataset once (outside the function)
full_data <- biomass_by_station_and_family |> 
  left_join(stations |> distinct(ps_station_id, region, subregion), by = "ps_station_id")

# Example usage for Murat region
murat_plot <- plot_biomass_by_region(full_data, "Murat")

# Save the plot
ggsave(file.path(exp_path, paste0("figures/uvs_fish_biomass_by_family_by_subregion_Murat.pdf")), 
       murat_plot, width = 10, height = 8)

# For all regions in the dataset:
all_regions <- unique(full_data$region)
for (region_name in all_regions) {
  p <- plot_biomass_by_region(full_data, region_name)
  ggsave(file.path(exp_path, paste0("figures/uvs_fish_biomass_by_family_by_subregion_", 
                                    region_name, ".pdf")), 
         p, width = 10, height = 8)
}
```

## By Species

```{r species_scatter, include = T, eval = T}
#| label: fig-biomass-scatter
#| fig-cap: "Frequency, abundance, and biomass by species"

trophic_palette <- c("herbivore/detritivore"  = "#5C9E5C",
                     "planktivore"      = "#4C9CB2",
                     "lower_carnivore"  = "#E1B07E",
                     "top_predator" = "#C75D4D",
                     "shark"        = "#7E6FAB")

tmp_plot <- taxa_summary |> 
  mutate(density_100m2 = 100*density_m2) |> 
  mutate_if(is.numeric, round, 3) |> 
  mutate(tooltip = c(paste0("Taxa = ", accepted_name,
                            "\n Family = ", family,
                            "\n Frequency (% stations) = ", freq_obs,
                            "\n Abundance (ind/100m2) = ", density_100m2,
                            "\n Biomass (g/m2) = ", biomass_gm2))) |> 
  ggplot()+
  ggiraph::geom_point_interactive(aes(x = freq_obs, 
                                      y = density_100m2, 
                                      size = biomass_gm2, 
                                      col = trophic_group, 
                                      tooltip = tooltip))+
  scale_color_manual(values = trophic_palette, na.value = "lightgrey")+
  scale_y_log10()+
  labs(y = "Abundance (Ind x 100m2)", 
       x = "Frequency (% station-strata)", 
       col = "Trophic group", 
       size = "Biomass")+
  ggthemes::theme_hc()+
  theme(legend.title.position = "top", legend.position = "right")

ggiraph::girafe(ggobj = tmp_plot)
```

# Trophic Composition

```{r}
biomass_by_station_and_trophic <- biomass_by_taxa_and_station |> 
  group_by(ps_station_id, ps_site_id, exp_id, region , subregion, habitat, exposure, divers, depth_strata, depth_m, trophic_group) |>   
  summarize(density_m2 = sum(density_m2),
            biomass_gm2 = sum(biomass_gm2),
            .groups = "drop") |> 
  group_by(ps_station_id) |> 
  mutate(pct_biomass = round(biomass_gm2/sum(biomass_gm2)*100, 2)) |> 
  ungroup()
```

```{r}
#| label: fig-map-trophic-pies
#| fig-cap: "Interactive map of trophic composition by site"
#| echo: false
#| warning: false
#| message: false

library(leaflet)
library(leaflet.minicharts)
library(scales)
library(dplyr)
library(tidyr)

# Define the new trophic palette with updated column names
trophic_palette <- c("pct_herbi_detri"  = "#5C9E5C",
                     "pct_plankti"      = "#4C9CB2",
                     "pct_lower_carni"  = "#E1B07E",
                     "pct_top_predator" = "#C75D4D",
                     "pct_shark"        = "#7E6FAB")

# Step 1: Summarize at the site level
site_biomass_summary <- stations |> 
  group_by(ps_site_id) |> 
  summarize(across(contains("gm2") | contains("pct"), 
                   ~ round(mean(.x, na.rm = TRUE), 2)),
            .groups = "drop")

# Step 2: Merge site locations
site_locations <- uvs_sites |> 
  distinct(ps_site_id, region, subregion, latitude, longitude, in_mpa, mpa_notes)

# Step 3: Merge the new trophic data with site metadata
trophic_map_data <- site_biomass_summary |>
  left_join(site_locations, by = "ps_site_id") |>
  drop_na(latitude, longitude) |> 
  mutate(pie_size = rescale(log1p(biomass_gm2), to = c(5, 30)))  # log scale to dampen skew

# Step 4: Extract the trophic proportion matrix
trophic_matrix <- trophic_map_data |> 
  select(all_of(names(trophic_palette))) |> 
  as.matrix()

# Sanity check
stopifnot(identical(colnames(trophic_matrix), names(trophic_palette)))

# Step 5: Create hover labels with percentages
hover_labels <- paste0(
  "<strong>Site:</strong> ", trophic_map_data$ps_site_id, "<br/>",
  "<strong>Region:</strong> ", trophic_map_data$region, "<br/>",
  "<strong>Subregion:</strong> ", trophic_map_data$subregion, "<br/>",
  "<strong>Total Biomass (g/m²):</strong> ", trophic_map_data$biomass_gm2, "<br/><br/>",
  "<strong>Trophic Composition (%):</strong><br/>",
  "Herbivore/Detritivore: ", trophic_map_data$pct_herbi_detri, "%<br/>",
  "Planktivore: ", trophic_map_data$pct_plankti, "%<br/>",
  "Lower Carnivore: ", trophic_map_data$pct_lower_carni, "%<br/>",
  "Top Predator: ", trophic_map_data$pct_top_predator, "%<br/>",
  "Shark: ", trophic_map_data$pct_shark, "%"
)

# Step 6: Render interactive pie chart map
leaflet(data = trophic_map_data) |>
  addProviderTiles(providers$Esri.WorldImagery) |>
  addMinicharts(lng = trophic_map_data$longitude,
                lat = trophic_map_data$latitude,
                chartdata = trophic_matrix,
                type = "pie",
                colorPalette = unname(trophic_palette),
                width = trophic_map_data$pie_size,
                height = trophic_map_data$pie_size,
                showLabels = FALSE,
                popup = popupArgs(html = hover_labels)) |> 
  addFullscreenControl(position = "topright")

```

This section explores the distribution of fish biomass and abundance across major trophic groups, offering insight into the functional structure of reef fish assemblages and potential indicators of ecosystem health.

```{r}
trophic_colors <- c(
  "Shark" = "#000000",                # Black
  "Top Predator" = "#8B0000",         # Dark red
  "Lower Carnivore" = "#FFA500",      # Orange
  "Herbivore/Detritivore" = "#228B22", # Green
  "Planktivore" = "#87CEEB"           # Light blue
)
library(scales)
library(RColorBrewer)

# Prepare data for plotting
plot_data <- trophic_map_data |>
  select(region, subregion, in_mpa, ps_site_id, biomass_gm2, starts_with("pct_")) |>
  # Convert percentages to actual biomass values
  mutate(biomass_top_predator = biomass_gm2 * pct_top_predator / 100,
         biomass_shark = biomass_gm2 * pct_shark / 100,
         biomass_lower_carni = biomass_gm2 * pct_lower_carni / 100,
         biomass_herbi_detri = biomass_gm2 * pct_herbi_detri / 100,
         biomass_plankti = biomass_gm2 * pct_plankti / 100) |>
  # Create a cleaner site label
  mutate(site_label = str_extract(ps_site_id, "\\d+$")) |>
  # Pivot to long format for stacking
  pivot_longer(cols = starts_with("biomass_") & !biomass_gm2,
               names_to = "trophic_group",
               values_to = "biomass_value",
               names_prefix = "biomass_") |>
  # Clean up trophic group names
  mutate(trophic_group = case_when(trophic_group == "top_predator" ~ "Top Predator",
                                   trophic_group == "shark" ~ "Shark",
                                   trophic_group == "lower_carni" ~ "Lower Carnivore",
                                   trophic_group == "herbi_detri" ~ "Herbivore/Detritivore",
                                   trophic_group == "plankti" ~ "Planktivore",
                                   TRUE ~ trophic_group),
         # Set factor order for logical stacking
         trophic_group = factor(trophic_group, 
                                levels = c("Shark", "Top Predator","Lower Carnivore", "Herbivore/Detritivore", "Planktivore")),
         subregion = factor(subregion, levels = c("Mussau", "Emirau","Tench", 
                                                  "Tingwon", "Dunung","Neitab","Kung" , "Au","Tsolik", "Nemto", "Enelava",
                                                  "Bipi", "Manus","Harengan",
                                                  "Luf", "Ninigo","Aua", "Wuvulu")),
         site_label_mpa = ifelse(in_mpa, paste0(site_label, "*"), site_label)) |> 
  select(region, subregion, in_mpa, ps_site_id, site_label, site_label_mpa, trophic_group, biomass_value)

region_labels <- plot_data %>%
  distinct(ps_site_id, region) %>%
  mutate(x = as.numeric(fct_inorder(ps_site_id))) %>%
  group_by(region) %>%
  summarise(xmin = min(x), xmax = max(x), xmid = mean(x), .groups = "drop")

site_positions <- plot_data %>%
  distinct(ps_site_id, region) %>%
  mutate(x = as.numeric(fct_inorder(ps_site_id)))

region_breaks <- site_positions %>%
  arrange(x) %>%
  mutate(region_lag = lag(region)) %>%
  filter(region != region_lag) %>%
  pull(x) - 0.5  # place between bars

ggplot(plot_data, 
       aes(x = site_label_mpa, y = biomass_value, fill = trophic_group)) +
  geom_col(stat = "identity") +
  labs(x = NULL, y = "Fish biomass (g/m²)", fill = "Trophic group") +
  theme_minimal(base_size = 12) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1),
        panel.grid.major.x = element_blank(),
        legend.position = "top")+
  annotate("text", x = region_labels$xmid, y = Inf, label = region_labels$region,
           vjust = -0.5, fontface = "bold", size = 4) +
  annotate("segment", x = region_labels$xmin, xend = region_labels$xmax,
           y = Inf, yend = Inf, size = .3, color = "gray20") +
  coord_cartesian(clip = "off") +
  theme(plot.margin = margin(10, 10, 30, 10),  # bottom margin for x-axis labels
        plot.title.position = "plot")+
   geom_vline(xintercept = region_breaks, color = "black", size = 0.3, linetype = "dashed") +
  labs(title = "Fish Biomass by Site",
       subtitle = "Stacked by trophic group - Murat LLG",
       x = "",
       y = expression("Biomass (g/m"^2*")"),
       caption = "* sites in tambu areas or special protections") +
  scale_fill_manual(values = trophic_colors, name = "Trophic Group") +
  scale_y_continuous(labels = scales::number_format(accuracy = 1),
                     expand = expansion(mult = c(0, 0.05))) +
  labs(title = "Fish Biomass by Site",
       subtitle = "Stacked by trophic group",
       x = "",
       y = expression("Biomass (g/m"^2*")"),
       caption = "* sites in tambu areas or special protections") +
  theme_minimal(base_size = 11) +
  theme(plot.title = element_text(size = 14, face = "bold", margin = margin(b = 5)),
        plot.subtitle = element_text(size = 11, color = "gray40", margin = margin(b = 15)),
        axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
        legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 9),
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.caption = element_text(size = 8, color = "gray50", hjust = 0))

ggsave(file.path(exp_path, "figures/uvs_fish_biomass_by_trophic_group_by_site_All.pdf"), 
       width = 15, height = 8)

ggplot(plot_data, 
       aes(x = site_label_mpa, y = biomass_value, fill = trophic_group)) +
  geom_col(position = "fill") +
  labs(x = NULL, y = "Proportion of biomass", fill = "Trophic group") +
  theme_minimal(base_size = 12) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1),
        panel.grid.major.x = element_blank(),
        legend.position = "top")+
  annotate("text", x = region_labels$xmid, y = Inf, label = region_labels$region,
           vjust = -0.5, fontface = "bold", size = 4) +
  annotate("segment", x = region_labels$xmin, xend = region_labels$xmax,
           y = Inf, yend = Inf, size = .3, color = "gray20") +
  coord_cartesian(clip = "off") +
  theme(plot.margin = margin(10, 10, 30, 10),  # bottom margin for x-axis labels
        plot.title.position = "plot")+
  geom_vline(xintercept = region_breaks, color = "black", size = 0.3, linetype = "dashed")+
  labs(title = "Fish Biomass by Site",
       subtitle = "Stacked by trophic group - Murat LLG",
       x = "",
       y = expression("Biomass (g/m"^2*")"),
       caption = "* sites in tambu areas or special protections") +
  scale_fill_manual(values = trophic_colors, name = "Trophic Group") +
  scale_y_continuous(labels = scales::percent_format(),
                     expand = expansion(mult = c(0, 0.05)))+
  labs(title = "Fish Biomass by Site",
       subtitle = "Stacked by trophic group",
       x = "",
       y = expression("Biomass (g/m"^2*")"),
       caption = "* sites in tambu areas or special protections")+
  theme_minimal(base_size = 11) +
  theme(plot.title = element_text(size = 14, face = "bold", margin = margin(b = 5)),
        plot.subtitle = element_text(size = 11, color = "gray40", margin = margin(b = 15)),
        axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
        legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 9),
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.caption = element_text(size = 8, color = "gray50", hjust = 0))

ggsave(file.path(exp_path, "figures/uvs_fish_proportional_biomass_by_trophic_group_by_site_All.pdf"), 
       width = 15, height = 8)
```

```{r}
# Create the plot
plot_data |> 
  filter(region == "Murat") |> 
  mutate(subregion = factor(subregion, levels = c("Mussau", "Emirau","Tench")),
         site_label_mpa = ifelse(in_mpa, paste0(site_label, "*"), site_label))  |> 
  ggplot(aes(x = site_label_mpa, 
             y = biomass_value, 
             fill = trophic_group)) +
  geom_col(color = "white", size = 0.2) +
  scale_fill_manual(values = trophic_colors, name = "Trophic Group") +
  scale_y_continuous(labels = scales::number_format(accuracy = 1),
                     expand = expansion(mult = c(0, 0.05))) +
  labs(title = "Fish Biomass by Site",
       subtitle = "Stacked by trophic group - Murat LLG",
       x = "",
       y = expression("Biomass (g/m"^2*")"),
       caption = "* sites in tambu areas or special protections") +
  theme_minimal(base_size = 11) +
  theme(plot.title = element_text(size = 14, face = "bold", margin = margin(b = 5)),
        plot.subtitle = element_text(size = 11, color = "gray40", margin = margin(b = 15)),
        axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
        legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 9),
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.caption = element_text(size = 8, color = "gray50", hjust = 0))+
  facet_wrap(~subregion, scales = "free_x") 

ggsave(file.path(exp_path, "figures/uvs_fish_biomass_by_trophic_group_by_site_Murat.pdf"), 
       width = 10, height = 7)

plot_data |> 
  filter(region == "Murat") |> 
  mutate(subregion = factor(subregion, levels = c("Mussau", "Emirau","Tench")),
         site_label_mpa = ifelse(in_mpa, paste0(site_label, "*"), site_label))  |> 
  ggplot(aes(x = site_label_mpa, 
             y = biomass_value, 
             fill = trophic_group)) +
  geom_col(position = "fill", color = "white", size = 0.2) +
  scale_fill_manual(values = trophic_colors, name = "Trophic Group") +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1),
                     expand = expansion(mult = c(0, 0.02))) +
  labs(title = "Fish Community Composition by Site",
       subtitle = "Proportional biomass by trophic group - Murat LLG",
       x = "",
       y = "Proportion of Total Biomass (%)",
       caption = "* sites in tambu areas or special protection") +
  theme_minimal(base_size = 11) +
  theme(plot.title = element_text(size = 14, face = "bold", margin = margin(b = 5)),
        plot.subtitle = element_text(size = 11, color = "gray40", margin = margin(b = 15)),
        axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
        legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 9),
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.caption = element_text(size = 8, color = "gray50", hjust = 0))+
  facet_wrap(~subregion, scales = "free_x") 

ggsave(file.path(exp_path, "figures/uvs_fish_proportional_biomass_by_trophic_group_by_site_Murat.pdf"), 
       width = 10, height = 7)
```

```{r}
# Create the plot
plot_data |> 
  filter(region == "Lovongai") |> 
  mutate(subregion = factor(subregion, levels = c("Tingwon", "Dunung","Neitab","Kung" , "Au","Tsolik", "Nemto", "Enelava"))) |> 
  mutate(site_label_mpa = ifelse(in_mpa, paste0(site_label, "*"), site_label))  |> 
  ggplot(aes(x = site_label_mpa, 
             y = biomass_value, 
             fill = trophic_group)) +
  geom_col(color = "white", size = 0.2) +
  scale_fill_manual(values = trophic_colors, name = "Trophic Group") +
  scale_y_continuous(labels = scales::number_format(accuracy = 1),
                     expand = expansion(mult = c(0, 0.05))) +
  labs(title = "Fish Biomass by Site",
       subtitle = "Stacked by trophic group - Lovongai LLG",
       x = "",
       y = expression("Biomass (g/m"^2*")"),
       caption = "* sites in tambu areas or special protections") +
  theme_minimal(base_size = 11) +
  theme(plot.title = element_text(size = 14, face = "bold", margin = margin(b = 5)),
        plot.subtitle = element_text(size = 11, color = "gray40", margin = margin(b = 15)),
        axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
        legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 9),
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.caption = element_text(size = 8, color = "gray50", hjust = 0))+
  facet_wrap(~subregion, scales = "free_x", nrow = 1) 

ggsave(file.path(exp_path, "figures/uvs_fish_biomass_by_trophic_group_by_site_Lovongai.pdf"), 
       width = 10, height = 7)

plot_data |> 
  filter(region == "Lovongai") |> 
  mutate(subregion = factor(subregion, levels = c("Tingwon", "Dunung","Neitab","Kung" , "Au","Tsolik", "Nemto", "Enelava"))) |> 
  mutate(site_label_mpa = ifelse(in_mpa, paste0(site_label, "*"), site_label))  |> 
  ggplot(aes(x = site_label_mpa, 
             y = biomass_value, 
             fill = trophic_group)) +
  geom_col(position = "fill", color = "white", size = 0.2) +
  scale_fill_manual(values = trophic_colors, name = "Trophic Group") +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1),
                     expand = expansion(mult = c(0, 0.02))) +
  labs(title = "Fish Community Composition by Site",
       subtitle = "Proportional biomass by trophic group - Lovongai LLG",
       x = "",
       y = "Proportion of Total Biomass (%)",
       caption = "* sites in tambu areas or special protection") +
  theme_minimal(base_size = 11) +
  theme(plot.title = element_text(size = 14, face = "bold", margin = margin(b = 5)),
        plot.subtitle = element_text(size = 11, color = "gray40", margin = margin(b = 15)),
        axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
        legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 9),
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.caption = element_text(size = 8, color = "gray50", hjust = 0))+
  facet_wrap(~subregion, scales = "free_x", nrow = 1) 

ggsave(file.path(exp_path, "figures/uvs_fish_proportional_biomass_by_trophic_group_by_site_Lovongai.pdf"), 
       width = 10, height = 7)
```

```{r}
# Create the plot
plot_data |> 
  filter(region == "Manus") |> 
  mutate(subregion = factor(subregion, levels = c("Bipi", "Manus","Harengan"))) |> 
  mutate(site_label_mpa = ifelse(in_mpa, paste0(site_label, "*"), site_label))  |> 
  ggplot(aes(x = site_label_mpa, 
             y = biomass_value, 
             fill = trophic_group)) +
  geom_col(color = "white", size = 0.2) +
  scale_fill_manual(values = trophic_colors, name = "Trophic Group") +
  scale_y_continuous(labels = scales::number_format(accuracy = 1),
                     expand = expansion(mult = c(0, 0.05))) +
  labs(title = "Fish Biomass by Site",
       subtitle = "Stacked by trophic group - Manus Province",
       x = "",
       y = expression("Biomass (g/m"^2*")"),
       caption = "* sites in tambu areas or special protections") +
  theme_minimal(base_size = 11) +
  theme(plot.title = element_text(size = 14, face = "bold", margin = margin(b = 5)),
        plot.subtitle = element_text(size = 11, color = "gray40", margin = margin(b = 15)),
        axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
        legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 9),
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.caption = element_text(size = 8, color = "gray50", hjust = 0))+
  facet_wrap(~subregion, scales = "free_x", nrow = 1) 

ggsave(file.path(exp_path, "figures/uvs_fish_biomass_by_trophic_group_by_site_Manus.pdf"), 
       width = 10, height = 7)

plot_data |> 
  filter(region == "Manus") |> 
  mutate(subregion = factor(subregion, levels = c("Bipi", "Manus","Harengan"))) |> 
  mutate(site_label_mpa = ifelse(in_mpa, paste0(site_label, "*"), site_label))  |> 
  ggplot(aes(x = site_label_mpa, 
             y = biomass_value, 
             fill = trophic_group)) +
  geom_col(position = "fill", color = "white", size = 0.2) +
  scale_fill_manual(values = trophic_colors, name = "Trophic Group") +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1),
                     expand = expansion(mult = c(0, 0.02))) +
  labs(title = "Fish Community Composition by Site",
       subtitle = "Proportional biomass by trophic group - Manus Province",
       x = "",
       y = "Proportion of Total Biomass (%)",
       caption = "* sites in tambu areas or special protection") +
  theme_minimal(base_size = 11) +
  theme(plot.title = element_text(size = 14, face = "bold", margin = margin(b = 5)),
        plot.subtitle = element_text(size = 11, color = "gray40", margin = margin(b = 15)),
        axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
        legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 9),
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.caption = element_text(size = 8, color = "gray50", hjust = 0))+
  facet_wrap(~subregion, scales = "free_x", nrow = 1) 

ggsave(file.path(exp_path, "figures/uvs_fish_proportional_biomass_by_trophic_group_by_site_Manus.pdf"), 
       width = 10, height = 7)
```

```{r}
# Create the plot
plot_data |> 
  filter(region == "Western Islands") |> 
  mutate(subregion = factor(subregion, levels = c("Luf", "Ninigo","Aua", "Wuvulu"))) |> 
  mutate(site_label_mpa = ifelse(in_mpa, paste0(site_label, "*"), site_label))  |> 
  ggplot(aes(x = site_label_mpa, 
             y = biomass_value, 
             fill = trophic_group)) +
  geom_col(color = "white", size = 0.2) +
  scale_fill_manual(values = trophic_colors, name = "Trophic Group") +
  scale_y_continuous(labels = scales::number_format(accuracy = 1),
                     expand = expansion(mult = c(0, 0.05))) +
  labs(title = "Fish Biomass by Site",
       subtitle = "Stacked by trophic group - Western Islands - Manus Province",
       x = "",
       y = expression("Biomass (g/m"^2*")"),
       caption = "* sites in tambu areas or special protections") +
  theme_minimal(base_size = 11) +
  theme(plot.title = element_text(size = 14, face = "bold", margin = margin(b = 5)),
        plot.subtitle = element_text(size = 11, color = "gray40", margin = margin(b = 15)),
        axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
        legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 9),
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.caption = element_text(size = 8, color = "gray50", hjust = 0))+
  facet_wrap(~subregion, scales = "free_x", nrow = 1) 

ggsave(file.path(exp_path, "figures/uvs_fish_biomass_by_trophic_group_by_site_WI.pdf"), 
       width = 10, height = 7)

plot_data |> 
  filter(region == "Western Islands") |> 
  mutate(subregion = factor(subregion, levels = c("Luf", "Ninigo","Aua", "Wuvulu"))) |> 
  mutate(site_label_mpa = ifelse(in_mpa, paste0(site_label, "*"), site_label))  |> 
  ggplot(aes(x = site_label_mpa, 
             y = biomass_value, 
             fill = trophic_group)) +
  geom_col(position = "fill", color = "white", size = 0.2) +
  scale_fill_manual(values = trophic_colors, name = "Trophic Group") +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1),
                     expand = expansion(mult = c(0, 0.02))) +
  labs(title = "Fish Community Composition by Site",
       subtitle = "Proportional biomass by trophic group - Western Islands - Manus Province",
       x = "",
       y = "Proportion of Total Biomass (%)",
       caption = "* sites in tambu areas or special protection") +
  theme_minimal(base_size = 11) +
  theme(plot.title = element_text(size = 14, face = "bold", margin = margin(b = 5)),
        plot.subtitle = element_text(size = 11, color = "gray40", margin = margin(b = 15)),
        axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
        legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 9),
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),
        plot.caption = element_text(size = 8, color = "gray50", hjust = 0))+
  facet_wrap(~subregion, scales = "free_x", nrow = 1) 

ggsave(file.path(exp_path, "figures/uvs_fish_proportional_biomass_by_trophic_group_by_site_WI.pdf"), 
       width = 10, height = 7)
```

::: {.panel-tabset}

## Abundance

```{r}
library(plotly)
#| label: fig-troph-by-region
#| fig-cap: "Trophic composition by region"
#| fig-width: 10
#| fig-height: 8

trophic_palette <- c("herbivore/detritivore"  = "#5C9E5C",
                     "planktivore"      = "#4C9CB2",
                     "lower_carnivore"  = "#E1B07E",
                     "top_predator" = "#C75D4D",
                     "shark"        = "#7E6FAB")

p <- biomass_by_station_and_trophic |> 
  group_by(region, subregion, trophic_group) |> 
  summarize(density_m2 = mean(density_m2),
            .groups = "drop") |> 
  ggplot(aes(fct_reorder(subregion, density_m2, sum, .desc = T), density_m2, fill = trophic_group))+
  geom_col(aes(text = paste0("Region: ", region, "<br>",
                             "Subregion: ", subregion, "<br>",
                             "Trophic group: ", trophic_group, "<br>",
                             "Avg. Abundance: ", round(density_m2, 2), " ind/m²")))+
  facet_wrap(~region, ncol = 4, scales = "free_x") +
  labs(x = "", y = "Average Abundance (in/m²)", fill = "",
       title = "Average fish Abundance by trophic group and region",
       subtitle = "Stacked bar plots show the contribution of each trophic group to total abundance")+
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "bottom",
        legend.box = "horizontal")+
  guides(fill = guide_legend(nrow = 1, byrow = TRUE))+
  scale_fill_manual(values = trophic_palette)

# Convert to plotly with tooltips
ggplotly(p, tooltip = "text") |> 
  layout(legend = list(orientation = "h",
      xanchor = "center",
      x = 0.5,
      y = -0.2,
      title = list(text = "")))
```

## Biomass 

```{r}
#| label: fig-troph-by-subregion
#| fig-cap: "Trophic composition by island"
#| fig-width: 10
#| fig-height: 8
#| 
library(plotly)

# Build the ggplot
p <- biomass_by_station_and_trophic |> 
  group_by(region, subregion, trophic_group) |> 
  summarize(biomass_gm2 = mean(biomass_gm2),
            .groups = "drop") |> 
  ggplot(aes(fct_reorder(subregion, biomass_gm2, sum, .desc = T), biomass_gm2, fill = trophic_group))+
  geom_col(aes(text = paste0("Region: ", region, "<br>",
                             "Subregion: ", subregion, "<br>",
                             "Trophic group: ", trophic_group, "<br>",
                             "Avg. Biomass: ", round(biomass_gm2, 2), " g/m²")))+
  facet_wrap(~region, ncol = 4, scales = "free_x") +
  labs(x = "", y = "Average Biomass (g/m²)", fill = "",
       title = "Average fish Biomass by trophic group and region",
       subtitle = "Stacked bar plots show the contribution of each trophic group to total biomass")+
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "bottom",
        legend.box = "horizontal")+
  guides(fill = guide_legend(nrow = 1, byrow = TRUE))+
  scale_fill_manual(values = trophic_palette)

# Convert to plotly with tooltips
ggplotly(p, tooltip = "text") |> 
  layout(legend = list(orientation = "h",
      xanchor = "center",
      x = 0.5,
      y = -0.2,
      title = list(text = "")))
```

:::

```{r}
# Define color palette for the specific trophic groups
trophic_colors <- c(
  "herbivore/detritivore" = "#009E73",  # Green
  "lower_carnivore"       = "#E69F00",  # Amber 
  "planktivore"           = "#56B4E9",  # Sky blue
  "shark"                 = "#D55E00",  # Orange/red
  "top_predator"          = "#CC79A7"   # Pink/purple
)

# Create nicer labels for the legend
trophic_labels <- c(
  "herbivore/detritivore" = "Herbivore/Detritivore",
  "lower_carnivore"       = "Lower Carnivore",
  "planktivore"           = "Planktivore", 
  "shark"                 = "Shark",
  "top_predator"          = "Top Predator"
)
  
# Function to create biomass plots by trophic group with option for absolute or percent

create_trophic_biomass_plot <- function(region_name, show_percent = FALSE) {
  
  # Get data for the specified region
  region_data <- biomass_by_station_and_trophic |> 
    filter(region == region_name)
  
  # Process data
  plot_data <- region_data |> 
    group_by(subregion, trophic_group) |>
    summarize(biomass_gm2 = mean(biomass_gm2),
              .groups = "drop")
  
  # Set up position and labels based on show_percent parameter
  position_type <- if(show_percent) "fill" else "stack"
  
  y_label <- if(show_percent) "Percent of total biomass" else "Average biomass (g/m²)"
  
  plot_title <- if(show_percent) 
                paste0("Relative Fish Biomass by Trophic Group - ", region_name) else
                paste0("Fish Biomass by Trophic Group and Subregion - ", region_name)
  
  subtitle <- if(show_percent) 
              "Percent contribution of each trophic group to total biomass" else
              "Stacked bar plot showing mean biomass contributions by trophic group"
  
  # Create y-axis scale based on show_percent
  
  y_scale <- if(show_percent) {
    scale_y_continuous(labels = scales::percent_format(accuracy = 1),
                      expand = expansion(mult = c(0, 0.01)))
  } else {
    scale_y_continuous(expand = expansion(mult = c(0, 0.05)))
  }
              
  # Create plot
  p <- plot_data |> 
    ggplot(aes(x = fct_reorder(subregion, biomass_gm2, sum, .desc = TRUE),
               y = biomass_gm2, 
               fill = fct_reorder(trophic_group, biomass_gm2, mean, .desc = FALSE))) +
    geom_col(position = position_type) +
    labs(x = "", y = y_label, fill = "",
         title = plot_title,
         subtitle = subtitle) +
    scale_fill_manual(values = trophic_colors, labels = trophic_labels) +
    y_scale +
    theme_minimal(base_size = 13) +
    theme(axis.text.x = element_text(angle = 45, hjust = 1),
          legend.position = "bottom",
          legend.box = "horizontal",
          panel.grid.major.x = element_blank(),
          plot.title = element_text(face = "bold")) +
    guides(fill = guide_legend(nrow = 1, byrow = TRUE))
  
  return(p)
}

# Get all unique regions in the dataset
all_regions <- unique(biomass_by_station_and_trophic$region)

# Iterate through all regions and create both types of plots
for (i in seq_along(all_regions)) {
  region_name <- all_regions[i]
  safe_name <- gsub(" ", "_", region_name)
  
  # Create absolute biomass plot
  p_absolute <- create_trophic_biomass_plot(region_name, show_percent = FALSE)
  absolute_file_path <- file.path(exp_path, paste0("figures/uvs_fish_biomass_by_trophic_by_subregion_", 
                                                  safe_name, ".pdf"))
  ggsave(absolute_file_path, p_absolute, width = 10, height = 8)
  
  # Create percentage biomass plot
  p_percent <- create_trophic_biomass_plot(region_name, show_percent = TRUE)
  percent_file_path <- file.path(exp_path, paste0("figures/uvs_fish_percent_biomass_by_trophic_by_subregion_", 
                                                 safe_name, ".pdf"))
  ggsave(percent_file_path, p_percent, width = 10, height = 8)
  
  message(paste0("Created both absolute and percentage plots for region: ", region_name))
}
```

To test whether the relative biomass of trophic groups differed significantly among regions, we used Kruskal-Wallis tests for each group. Only planktivores showed a moderate regional effect (χ² = 9.16, p = 0.027). Post hoc comparisons indicated that the proportional biomass of planktivores was higher in Lovongai than in other regions, but these differences did not remain significant after correcting for multiple comparisons (padj = 0.051 for Lovongai vs Western Islands). 

Across all regions, top predators contributed only a small fraction of total fish biomass. Median values ranged from 2–3%, with mean contributions below 10% in all regions (@fig-troph-prop-by-region). Sharks were virtually absent from surveys and represented < 1% of the biomass. The low predator biomass is a potential warning sign of trophic downgrading and ecosystem stress

```{r}
kruskal_results <- biomass_by_station_and_trophic |>
  filter(!is.na(trophic_group)) |> 
  group_by(trophic_group) |> 
  rstatix::kruskal_test(pct_biomass ~ region)

# Filter for Planktivores and run pairwise comparisons
dunn_results <- biomass_by_station_and_trophic |> 
  ungroup() |> 
  filter(trophic_group == "planktivore") |> 
  mutate(region = as.factor(region)) |> 
  rstatix::dunn_test(pct_biomass ~ region, p.adjust.method = "bonferroni")

pop_biomass_by_trophic_plot <- biomass_by_station_and_trophic |> 
  filter(!is.na(trophic_group)) |> 
  ggplot() +
  geom_boxplot(aes(x = region, y = pct_biomass, fill = trophic_group),
               outlier.shape = NA, alpha = 0.6)+
  geom_jitter(aes(x = region, y = pct_biomass, color = trophic_group),
              position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75),
              size = 1.5,
              alpha = 0.6,
              show.legend = FALSE)+
  labs(title = "Proportion of Biomass by Trophic Group and Region",
       y = "Proportion of Total Biomass",
       x = NULL,
       fill = "") +
  scale_fill_manual(values = trophic_palette)+
  scale_color_manual(values = trophic_palette)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "top",
        legend.direction = "horizontal",
        legend.title = element_text(face = "bold"),
        legend.box = "horizontal",
        legend.text = element_text(size = 11),
        legend.spacing.x = unit(0.4, "cm")) +
  guides(fill = guide_legend(nrow = 1, byrow = TRUE))
```

```{r}
#| label: fig-troph-prop-by-region
#| fig-cap: "Proportion of Biomass by Trophic Group and Region"
#| fig-width: 10
#| fig-height: 8
#| 
library(plotly)
library(dplyr)

# 1. Compute summary stats per group
pct_biomass_trophic_region <- biomass_by_station_and_trophic %>%
  filter(!is.na(trophic_group)) %>%
  group_by(region, trophic_group) %>%
  summarise(median = round(median(pct_biomass), 2),
            iqr    = round(IQR(pct_biomass), 2),
            mean   = round(mean(pct_biomass), 2),
          .groups = "drop") %>%
  mutate(hover_text = paste0("Region: ", region, "<br>",
                             "Trophic group: ", trophic_group, "<br>",
                             "Mean: ", mean, "<br>",
                             "Median: ", median, "<br>",
                             "IQR: ", iqr))

# 2. Join the hover text back to the main data
plot_data <- biomass_by_station_and_trophic %>%
  filter(!is.na(trophic_group)) %>%
  left_join(pct_biomass_trophic_region, by = c("region", "trophic_group"))

# 3. Interactive boxplot
fig <- plot_ly(data = plot_data,
               x = ~region,
               y = ~pct_biomass,
               color = ~trophic_group,
               text = ~hover_text,
               type = "box",
               hoverinfo = "text",
               colors = trophic_palette,
               boxpoints = "all",
               jitter = 0.3,
               pointpos = -1.8,
               marker = list(size = 4, opacity = 0.5))

# 4. Layout
fig <- fig %>%
  layout(boxmode = "group",
         title = list(text = "% of Biomass by Trophic Group and Region"),
         yaxis = list(title = "% of Total Biomass"),
         legend = list(orientation = "h", x = 0.5, xanchor = "center", y = -0.25),
         margin = list(b = 80))

fig
```

We evaluated multivariate differences in trophic structure using PERMANOVA. Depth strata emerged as the strongest predictor of trophic composition (R² = 7.9%, F = 7.20, p = 0.001), followed by region (R² = 3.4%, F = 2.07, p = 0.028). Together, these variables explained ~11% of the total variation, with the remainder attributed to within-region and within-strata heterogeneity.

```{r}
library(vegan)

trophic_matrix <- biomass_by_station_and_trophic |>
  select(ps_station_id, trophic_group, pct_biomass) |>
  pivot_wider(names_from = trophic_group, values_from = pct_biomass, values_fill = 0) |>
  column_to_rownames("ps_station_id")

trophic_meta <- biomass_by_station_and_trophic |>
  distinct(ps_station_id, region, depth_strata, habitat, exposure) |>
  filter(ps_station_id %in% rownames(trophic_matrix)) |> 
  arrange(match(ps_station_id, rownames(trophic_matrix)))

adonis_trophic <- adonis2(trophic_matrix ~  depth_strata + region + habitat + exposure, 
                          by = "margin",
                          data = trophic_meta, 
                          permutations = 999, 
                          method = "bray")
```

Finally, we used non-metric multidimensional scaling (NMDS) to visualize patterns in trophic composition across sites. Ordination revealed clustering by depth strata, confirming the PERMANOVA results. Vector fitting indicated that three trophic groups were significantly associated with the ordination space (all p < 0.05), with vector length proportional to explanatory power (R² > 0.8). These results emphasize depth-driven shifts in functional structure, with moderate but detectable regional variation.

```{r message = F, warning = F}
# 1. NMDS
nmds_result <- suppressMessages(
  metaMDS(trophic_matrix, distance = "bray", k = 2, trymax = 100, trace = 0)
)

# 2. Fit trophic group vectors to ordination
fit <- envfit(nmds_result, trophic_matrix, permutations = 999)

# 3. Extract and filter vectors
vecs <- as.data.frame(scores(fit, display = "vectors")) |>
  rownames_to_column("variable") |>
  mutate(pval = fit$vectors$pvals[variable],
         r2   = fit$vectors$r[variable]) |>
  filter(pval < 0.05 & r2 > 0.3)  # Optional R² threshold

# Filter to significant vectors (p < 0.05)
vecs_sig <- vecs |> filter(pval < 0.05)

# 4. Site coordinates + metadata
nmds_coords <- as.data.frame(scores(nmds_result, display = "sites")) |>
  bind_cols(trophic_meta)
```


::: {.panel-tabset}

### Depth strata

```{r}
#| label: fig-ndms-trophic-depth
#| fig-cap: "NMDS of Trophic Composition by Depth "
#| fig-width: 10
#| fig-height: 7
#|
# 5. NMDS Plot
ggplot(nmds_coords, aes(x = NMDS1, y = NMDS2, color = depth_strata)) +
  geom_point(size = 3, alpha = 0.8) +
  stat_ellipse(type = "t", level = 0.68, linetype = "dashed", linewidth = 0.6) +
  geom_segment(data = vecs,
               aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),
               arrow = arrow(length = unit(0.25, "cm")), color = "black") +
  geom_text(data = vecs_sig,
            aes(x = NMDS1 * 1.1,
                y = NMDS2 * 1.1,
                label = paste0(variable, "\nR² = ", round(r2, 2))),
            inherit.aes = FALSE,
            size = 5)+
  labs(title = "NMDS of Trophic Composition with Vector Fit",
       subtitle = paste("Bray-Curtis dissimilarity | Stress =", round(nmds_result$stress, 3)),
       caption = "Arrows indicate significant (p < 0.05) trophic group vectors; length reflects strength of correlation (R²).",
       x = "NMDS1",
       y = "NMDS2",
       color = "") +
  theme(legend.position = "bottom")
```

### Region

```{r}
#| label: fig-ndms-trophic-region
#| fig-cap: "NMDS of Trophic Composition by Region"
#| fig-width: 10
#| fig-height: 7
#|

# 5. NMDS Plot
ggplot(nmds_coords, aes(x = NMDS1, y = NMDS2, color = region)) +
  geom_point(size = 3, alpha = 0.8) +
  stat_ellipse(type = "t", level = 0.68, linetype = "dashed", linewidth = 0.6) +
  geom_segment(data = vecs,
               aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),
               arrow = arrow(length = unit(0.25, "cm")), color = "black") +
  geom_text(data = vecs_sig,
            aes(x = NMDS1 * 1.1,
                y = NMDS2 * 1.1,
                label = paste0(variable, "\nR² = ", round(r2, 2))),
            inherit.aes = FALSE,
            size = 5)+
  labs(title = "NMDS of Trophic Composition with Vector Fit",
       subtitle = paste("Bray-Curtis dissimilarity | Stress =", round(nmds_result$stress, 3)),
       caption = "Arrows indicate significant (p < 0.05) trophic group vectors; length reflects strength of correlation (R²).",
       x = "NMDS1",
       y = "NMDS2",
       color = "") +
  theme(legend.position = "bottom")
```

:::

# Community Structure

A permutational multivariate analysis of variance (PERMANOVA) revealed significant effects of both depth strata and region on species-level fish community structure (Bray-Curtis dissimilarity). Together, they explained approximately 8.2% of the variation in community composition: Depth strata accounted for 3.0% of the variation (F = 2.65, p = 0.001) and	Region explained an additional 5.1% (F = 2.99, p = 0.001),

```{r}
library(vegan)

spp_matrix <- biomass_by_taxa_and_station |>
  select(ps_station_id, accepted_name, biomass_gm2) |>
  pivot_wider(names_from = accepted_name, values_from = biomass_gm2, values_fill = 0) |>
  column_to_rownames("ps_station_id")

spp_meta <- biomass_by_taxa_and_station |>
  distinct(ps_station_id, region, depth_strata) |>
  filter(ps_station_id %in% rownames(spp_matrix)) |> 
  arrange(match(ps_station_id, rownames(spp_matrix)))

adonis_spp <- adonis2(spp_matrix ~  depth_strata + region, 
                          by = "margin",
                          data = spp_meta, 
                          permutations = 999, 
                          method = "bray")
```

```{r}
#| label: fig-spp-nmds
#| fig-cap: "NMDS of Species Composition with Significant Species Vectors"
#| fig-width: 10
#| fig-height: 8
#| 

spp_matrix_filtered <- spp_matrix[, apply(spp_matrix, 2, sd) > 0]
spp_matrix_filtered <- spp_matrix_filtered[, colSums(spp_matrix_filtered > 0) > 3]

dim(spp_matrix_filtered)       # stations × trophic groups or taxa
mean(spp_matrix_filtered == 0) # proportion of zeros

# 1. NMDS on species matrix
spp_nmds <- metaMDS(log1p(spp_matrix_filtered), distance = "bray", k = 3, trymax = 100, trace = 0)

# 2. Fit species vectors
spp_fit <- envfit(spp_nmds, spp_matrix_filtered, permutations = 999)

# 3. Extract significant vectors (p < 0.05)
spp_vecs <- as.data.frame(scores(spp_fit, display = "vectors"))
spp_vecs$species <- rownames(spp_vecs)
spp_vecs$pval <- spp_fit$vectors$pvals[spp_vecs$species]
spp_vecs$r2 <- spp_fit$vectors$r[spp_vecs$species]
spp_vecs_sig <- spp_vecs |> filter(r2 >= 0.2)

# 4. Extract site coordinates
spp_coords <- as.data.frame(scores(spp_nmds, display = "sites")) |> 
  bind_cols(spp_meta)

region_palette <- c("Murat"           = "#20C997",  
                    "Lovongai"        = "#F94144",  
                    "Manus"           = "#577590",
                    "Western Islands" = "#F9C74F")

# 5. Plot with significant species vectors
ggplot(spp_coords, aes(x = NMDS1, y = NMDS2, color = region)) +
  geom_point(aes(shape = depth_strata),size = 3, alpha = 0.8) +
  stat_ellipse(type = "t", level = 0.68, linetype = "dashed") +
  geom_segment(data = spp_vecs_sig,
               aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),
               arrow = arrow(length = unit(0.25, "cm")), color = "black") +
  ggrepel::geom_text_repel(data = spp_vecs_sig,
            aes(x = NMDS1 * 1.1, y = NMDS2 * 1.1, label = species),
            inherit.aes = FALSE,
            size = 4) +
  labs(title = "NMDS Ordination of Reef Fish Community Structure",
       subtitle = glue::glue("Biomass | Bray-Curtis dissimilarity | Stress = {round(spp_nmds$stress, 3)}"),
       caption = "Arrows show functional groups significantly correlated with NMDS axes (R² > 0.2).\nArrow length reflects correlation strength.",
       x = "NMDS Axis 1", 
       y = "NMDS Axis 2",
       color = "", 
       shape = "") +
  coord_equal() +
  theme(legend.position = "right",
        legend.box = "vertical",
        plot.title = element_text(face = "bold", size = 16),
        plot.subtitle = element_text(size = 13),
        plot.caption = element_text(size = 10, hjust = 0),
        axis.title = element_text(face = "bold")) +
  scale_color_manual(values = region_palette)

ggsave(file.path(exp_path, "figures/uvs_fish_biomass_spp_nmds.pdf"), 
       width = 10, height = 8)
```


## Species contributions to dissimilarity

To identify the species driving regional differences in community composition, we conducted a Similarity Percentages (SIMPER) analysis based on Bray-Curtis dissimilarity of biomass values. This method decomposes pairwise differences between regions into contributions by individual species, highlighting those most responsible for observed dissimilarities. For each pairwise comparison, we extracted the top ten contributing species and visualized their mean biomass in each region. These results offer an intuitive view of which taxa differentiate local assemblages and can help identify regionally distinctive or dominant species.

```{r}
# 1. Run SIMPER on all region pairs
simper_result <- simper(spp_matrix, spp_meta$region, permutations = 999)

# 2. Tidy the output into a long dataframe of top contributors
simper_summary_all <- map_dfr(names(simper_result), 
                              function(pair_name) {
                                sim <- simper_result[[pair_name]]
                                tibble(pair         = pair_name,
                                       species      = sim$species,
                                       avg_contrib  = sim$average,
                                       sd_contrib   = sim$sd,
                                       ratio        = sim$ratio,
                                       mean_group_a = sim$ava,
                                       mean_group_b = sim$avb,
                                       cumsum       = sim$cusum,
                                       p_value      = sim$p) |>
                                  arrange(desc(avg_contrib)) |>
                                  slice_head(n = 10) |>
                                  mutate(across(where(is.numeric), round, 3))})

# 3. Add region labels and melt for plotting
simper_plot_data <- simper_summary_all |>
  separate(pair, into = c("region_a", "region_b"), sep = "_") |>
  pivot_longer(cols = c(mean_group_a, mean_group_b),
               names_to = "region_code", values_to = "mean_biomass") |>
  mutate(region = case_when(region_code == "mean_group_a" ~ region_a,
                            region_code == "mean_group_b" ~ region_b))

# 4. Function to plot all comparisons for a given region
plot_simper_by_focal <- function(focal_region) {
  
  simper_plot_data |>
    filter(region_a == focal_region | region_b == focal_region) |>
    mutate(comparison = if_else(region_a == focal_region, region_b, region_a)) |>
    ggplot(aes(x = fct_reorder(species, avg_contrib), 
               y = mean_biomass, fill = region)) +
    geom_col(position = "dodge") +
    facet_wrap(~comparison, scales = "free_x") +
    labs(title = glue("Top 10 Species Driving Differences with {focal_region}"),
         subtitle = "SIMPER analysis (Bray-Curtis, biomass)",
         x = "", y = "Mean biomass (g/m²)", fill = "") +
    theme(axis.text.x = element_text(angle = 45, hjust = 1),
          strip.text = element_text(face = "bold"),
          legend.position = "bottom",
      legend.box = "horizontal",
      legend.text = element_text(size = 10))+
    guides(fill = guide_legend(nrow = 1, byrow = TRUE))
  
}
```

::: {.panel-tabset}

### Manus

```{r}
#| label: fig-simper-manus
#| fig-cap: "Top 10 species driving differences with Manus"
#| fig-width: 10
#| fig-height: 7
#|

plot_simper_by_focal("Manus")
```

### Murat

```{r}
#| label: fig-simper-murat
#| fig-cap: "Top 10 species driving differences with Murat"
#| fig-width: 10
#| fig-height: 7
#|

plot_simper_by_focal("Murat")
```

### Western Islands

```{r}
#| label: fig-simper-islands
#| fig-cap: "Top 10 species driving differences with the Western Islands"
#| fig-width: 10
#| fig-height: 7
#|

plot_simper_by_focal("Western Islands")
```

### Lovongai

```{r}
#| label: fig-simper-lovongai
#| fig-cap: "Top 10 species driving differences with Lovongai"
#| fig-width: 10
#| fig-height: 7
#|

plot_simper_by_focal("Lovongai")
```

:::

# Summary Taxa tables

```{r}
taxa_summary_by_region <- biomass_by_taxa_and_station |> 
  group_by(region, trophic_group, family, accepted_name) |> 
  summarise(
    freq_obs = round(100 * sum(total_count > 0) / n(), 2),
    total_count = sum(total_count),
    avg_count = round(mean(avg_count, na.rm = TRUE), 3),
    # For length columns, check if total_count is zero first
    avg_length_cm = if(sum(total_count) == 0) NA_real_ else round(mean(avg_length_cm, na.rm = TRUE)),
    min_length_cm = if(sum(total_count) == 0) NA_real_ else min(min_length_cm, na.rm = TRUE),
    max_length_cm = if(sum(total_count) == 0) NA_real_ else max(max_length_cm, na.rm = TRUE),
    # For density and biomass, keep the same approach
    across(c("density_m2", "biomass_gm2"), ~ mean(.x, na.rm = TRUE)),
    .groups = "drop")

write_csv(taxa_summary_by_region, file.path(exp_path, "data/primary/output/uvs_fish_taxa_summary_by_region.csv"))

family_summary_by_region <- biomass_by_station_and_family |> 
  left_join(stations |> select(ps_station_id, region, subregion), by = "ps_station_id") |>
  group_by(region, family) |> 
  summarise(freq_obs         = round(100*sum(total_count > 0)/n(),2),
            total_count      = sum(total_count),
            avg_count        = round(mean(avg_count), 3),
            avg_density_m2   = mean(density_m2),
            avg_biomass_gm2  = mean(biomass_gm2),
            .groups = "drop") 

write_csv(family_summary_by_region, file.path(exp_path, "data/primary/output/uvs_fish_family_summary_by_region.csv"))

```


