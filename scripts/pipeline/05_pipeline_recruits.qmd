---
title: "PNG_2024_uvs_recruits_cleaning"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}

rm(list = ls())
#options(repos="https://cran.rstudio.com" )
library(tidyverse)
library(stringi)
library(stringr)
library(readxl)
library(rredlist) # need to get an API to run
library(taxize)
library(dplyr)

setwd("~/Documents/PS eDNA/PNG_2024/")
```

## UVS recruits - cleaning file

### File Cleaning

```{r}
recruit<-read_excel("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/raw/benthos/PNG_2024_recruits_fieldsheet_MT.xlsx", sheet = 1)

# getting site id label correct
recruit$ps_site_id<-"PNG_2024_uvs_"
recruit$Site<-str_pad(recruit$Site, 3, pad = "0")
recruit$ps_site_id<-paste(recruit$ps_site_id,recruit$Site, sep = "")
# making station id label
recruit$ps_station_id<-recruit$ps_site_id
recruit$ps_station_id<-paste(recruit$ps_station_id, recruit$Depth, sep="_")
recruit$ps_station_id <- paste0(recruit$ps_station_id, "m")
recruit$exp_id<-"PNG_2024"
recruit$subregion<-recruit$Location
recruit$Location<-NULL
recruit$Site<-NULL
recruit$Direction<-NULL
recruit$Region<-NULL
# making proper region
recruit<-recruit %>% mutate(region = if_else(subregion %in% c( "Mussau", "Emirau","Tench"),"Murat", "Lovongai"))
# ordering columns
recruit<-recruit[,c("exp_id","region","subregion", "ps_site_id","ps_station_id", "Transect","Depth", "Quadrats","Genus","Size_cm", "Observer" )]
# renaming some
names(recruit) <- c("exp_id","region","subregion", "ps_site_id","ps_station_id", "transect","depth_m","quadrats", "genus","size_cm", "observer" )


###### Subregion names are not the same as Juan's. Modifyinh.
sites<-readRDS("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/processed/sites.rds")
sites_uvs<-sites$uvs

recruit$subregion<-NULL
recruit<-recruit %>%
  left_join(sites_uvs[,c("ps_site_id","subregion")], by = "ps_site_id")
recruit<-recruit[,c("exp_id","region","subregion", "ps_site_id","ps_station_id", "transect","depth_m","quadrats", "genus","size_cm", "observer" )]


```

### Taxonomy Cleaning

```{r}
## Apparently the ? was throwing off the functions
recruit$genus<-ifelse(recruit$genus == "Porites?","Porites", recruit$genus)
recruit$genus<-ifelse(recruit$genus == "Goniastrea?","Goniastrea", recruit$genus)
recruit$genus<-ifelse(recruit$genus == "Coelerastrea","Coelastrea", recruit$genus)
recruit$genus<-ifelse(recruit$genus == "Merlunina","Merulina", recruit$genus)
recruit$genus<-ifelse(recruit$genus == "Serioptera", "Seriatopora", recruit$genus)
recruit$genus<-ifelse(recruit$genus == "Mussidae","Faviidae", recruit$genus)

# creating unique values per row to map back
recruit$observation<- 1:nrow(recruit) 
  
cleanTaxa<-distinct(recruit[,c("genus","observation")])

taxonomy_worms <- cleanTaxa$genus %>% 
  split(ceiling(seq_along(cleanTaxa$genus)/20)) %>% 
  furrr::future_map_dfr(worrms::wm_records_names) %>% 
  janitor::clean_names() %>% 
  filter(!is.na(scientificname)) %>% 
  mutate(rank = str_to_lower(rank),
         taxon_id = if_else(!is.na(valid_aphia_id),
                            paste0("WORMS:", valid_aphia_id),                        NA_character_)) %>% 
  select(status, taxon_valid_name = valid_name, taxon_rank = rank, taxon_id, taxon_authority = valid_authority, kingdom, phylum, class, order, family, genus) %>% 
  distinct()

## Lots of name issues
bad_names<-anti_join(unique(recruit[,c("genus")]), taxonomy_worms[,c("taxon_valid_name")], by = c("genus" ="taxon_valid_name"))
sort(bad_names$genus)
# going back to correct and rerun taxaworms function

# Without the bad names, exporting as data file cleaned.
#write.csv(recruit, "~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/raw/benthos/Updated_PNG_2024_recruits_fieldsheet.csv", row.names = F)


# what are the duplicates
duped_taxa_worms <- taxonomy_worms %>% 
  janitor::get_dupes(genus) 

deduped_taxa_worms <- duped_taxa_worms %>% 
  filter(status %in% c("accepted")) %>% 
  select(-dupe_count)

taxonomy_worms <- taxonomy_worms %>% 
  group_by(genus) %>% 
  filter(n() <= 1) %>% # remove duplicates
  bind_rows(deduped_taxa_worms) # add deduped


taxonomy_worms<-as.data.frame(taxonomy_worms[,c("genus","family", "order","class","phylum", "taxon_valid_name")])
# Checking phyla to ensure all cnidarians as some genus are named same from different groups
taxonomy_worms<-taxonomy_worms %>%
  filter(phylum == "Cnidaria")

setdiff(taxonomy_worms$genus, taxonomy_worms$taxon_valid_name)

taxonomy_worms<-taxonomy_worms[,c("family","genus")]

cleanTaxa2<-distinct(left_join(cleanTaxa, taxonomy_worms, by = "genus"))

recruit2<-left_join(recruit, cleanTaxa2, by = c("observation","genus"))
recruit2$observation<-NULL

recruit2 <- recruit2[,c("exp_id","region","subregion", "ps_site_id","ps_station_id", "transect","depth_m","quadrats","family", "genus","size_cm", "observer" )]

#write.csv(recruit2, "~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/raw/benthos/Updated_PNG_2024_uvs_recruits_fieldsheet.csv", row.names = F)

```

### Site areas by quadrats

```{r}

# One depth sites
one_depth<-c("PNG_2024_uvs_026","PNG_2024_uvs_029","PNG_2024_uvs_030","PNG_2024_uvs_031","PNG_2024_uvs_032","PNG_2024_uvs_036","PNG_2024_uvs_037","PNG_2024_uvs_038","PNG_2024_uvs_039","PNG_2024_uvs_040","PNG_2024_uvs_041","PNG_2024_uvs_042")

one_depth<-as.data.frame(one_depth) %>%
  mutate(one = "one")%>%
  `colnames<-`(c("ps_site_id","one"))


# getting site quadrats
quads<-recruit2 %>%
  distinct(ps_site_id,  quadrats) %>%
  left_join(one_depth)%>%
   mutate(one=replace_na(one, "two"))

quads$area_m2<-ifelse(quads$one == "two" & quads$quadrats == 10, 20*.25, quads$quadrats )
quads$area_m2<-ifelse(quads$one == "two" & quads$quadrats == 6, (16*.25), quads$area_m2)
quads$area_m2<-ifelse(quads$one == "one" & quads$quadrats == 10, 10*.25, quads$area_m2)

quads_dens<-quads[,c("ps_site_id","quadrats", "area_m2")]


recruit_quad_area_by_site<-quads_dens %>%
  left_join(.,unique(recruit2[,c("region","subregion","ps_site_id")]), by = "ps_site_id") %>%
  na.omit



```

### Densities calculations and export

```{r}
#### By Station for Genus and Family
recruit_density_by_station_genus <- recruit2 %>% 
  mutate(count = 1)%>%
  group_by(ps_site_id, genus, depth_m, quadrats) %>%
  dplyr::reframe(count = sum(count),ind_m2 = round((count/(quadrats*0.25)),2), mean_size_cm =mean(size_cm)) %>%
  distinct()


recruit_density_by_station_family <- recruit2 %>% 
  mutate(count = 1)%>%
  group_by(ps_site_id, family, depth_m, quadrats) %>%
  dplyr::reframe(count = sum(count), ind_m2 = round((count/(quadrats*0.25)),2),mean_size_cm =mean(size_cm)) %>%
  distinct()
  
#### By Site for Genus and Family
recruit_density_by_site_genus <- recruit2 %>% 
  mutate(count = 1) %>%
  group_by(ps_site_id, genus) %>%
  dplyr::summarise(count = sum(count), mean_size_cm =round(mean(size_cm),2)) %>%
  left_join(.,quads_dens, by = "ps_site_id", relationship = "many-to-many") %>%
  group_by(ps_site_id, genus) %>%
  dplyr::reframe( count = count, ind_m2 = round((count/area_m2),2),mean_size_cm =mean_size_cm) %>%
  distinct()


recruit_density_by_site_family <- recruit2 %>% 
  mutate(count = 1)%>%
  group_by(ps_site_id, family) %>%
  dplyr::summarise(count = sum(count),mean_size_cm =round(mean(size_cm),2)) %>%
 left_join(quads_dens, by = "ps_site_id", relationship = "many-to-many") %>%
  group_by(ps_site_id, family) %>%
  dplyr::reframe(count = count, ind_m2 = round((count/area_m2),2),mean_size_cm =mean_size_cm)%>%
  distinct()


### Observation file
recruit_observations<-recruit2

save(recruit_density_by_station_genus, recruit_density_by_station_family, recruit_quad_area_by_site, recruit_density_by_site_genus, recruit_density_by_site_family, recruit_observations, file = "~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/processed/recruits/PNG_2024_uvs_recruit.RData")



```
