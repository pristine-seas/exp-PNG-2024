---
title: "PNG_2024_uvs_inverts_cleaning"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}

rm(list = ls())
#options(repos="https://cran.rstudio.com" )
library(tidyverse)
library(stringi)
library(stringr)
library(EcolUtils)
library(data.table)
library(readxl)
library(rredlist) # need to get an API to run
library(taxize)
library(dplyr)

#setwd("~/Documents/PS eDNA/PNG_2024/")
```

# Sites and stations

```{r}

stations<-readRDS("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/processed/stations.rds")

stations_fish<-stations$fish %>%
  select(ps_station_id,ps_site_id,depth_m,depth_strata)

sites<-readRDS("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/processed/sites.rds")

sites_uvs<-sites$uvs

```

# UVS Inverts - cleaning file

### Cleaning - Leg 1

```{r}
leg1_invert<-read_excel("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/raw/benthos/PNG_2024_inverts_fieldsheet_MT.xlsx", sheet = 1)

leg1_invert$ps_site_id<-"PNG_2024_uvs_"
leg1_invert$site<-str_pad(leg1_invert$site, 3, pad = "0")
leg1_invert$ps_site_id<-paste(leg1_invert$ps_site_id,leg1_invert$site, sep = "")

leg1_invert$ps_station_id<-leg1_invert$ps_site_id
leg1_invert$ps_station_id<-paste(leg1_invert$ps_station_id, leg1_invert$depth_m, sep="_")
leg1_invert$ps_station_id <- paste0(leg1_invert$ps_station_id, "m")
leg1_invert$exp_id<-"PNG_2024"
leg1_invert$subregion<-leg1_invert$location
leg1_invert$location<-NULL
leg1_invert$site<-NULL
leg1_invert$direction<-NULL
leg1_invert<-leg1_invert %>% mutate(region = if_else(subregion %in% c( "Massau", "Emirau","Tench"),"Murat", "Lovongai"))
leg1_invert$leg<-"leg 1"
leg1_invert<-leg1_invert[,c("exp_id","leg","region","subregion", "ps_site_id","ps_station_id", "transect","depth_m","taxa","count","size_cm", "notes","observer" )]



```

### Cleaning up Leg 2 Resource inverts

```{r}

leg2_invert<-read_excel("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/raw/benthos/Invertebrates Caselle PNG.xlsx", sheet =  1)

leg2_invert$ps_site_id<-"PNG_2024_uvs_0"
leg2_invert$ps_site_id<-paste(leg2_invert$ps_site_id,leg2_invert$`Station Number`, sep = "")
names(leg2_invert)[names(leg2_invert) == "Depth"] <- "depth_strata"

leg2_invert2<-left_join(leg2_invert, stations_fish[,c("ps_station_id","ps_site_id","depth_m","depth_strata")], by = c("ps_site_id", "depth_strata"))

leg2_invert2$depth_strata<-ifelse(is.na(leg2_invert2$ps_station_id) & leg2_invert2$depth_strata=="shallow","supershallow",leg2_invert2$depth_strata)

leg2_invert2$depth_m<-ifelse(leg2_invert2$depth_strata == "supershallow","5", leg2_invert2$depth_m)
leg2_invert2$depth_m<-ifelse(leg2_invert2$depth_strata == "deep","20", leg2_invert2$depth_m)

leg2_invert2$ps_station_id<-paste(leg2_invert2$ps_site_id, leg2_invert2$depth_m, sep = "_")
leg2_invert2$ps_station_id <- paste0(leg2_invert2$ps_station_id, "m")
leg2_invert2$`Station Number`<-NULL
leg2_invert2$exp_id<-"PNG_2024"

sites<-readRDS("~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/processed/sites.rds")
sites_uvs<-sites$uvs

leg2_invert3<-left_join(leg2_invert2, sites_uvs[,c("ps_site_id","region","subregion")], by = "ps_site_id")
leg2_invert3$observer<-"JEC"
leg2_invert3$leg<-"leg 2"
leg2_invert3$size_cm <- "NA"
leg2_invert3$common_name<-NULL
leg2_invert3$scientific_name<-gsub(" spp.*","",leg2_invert3$scientific_name)
leg2_invert3$scientific_name<-trimws(leg2_invert3$scientific_name)

leg2_invert3<-leg2_invert3[,c("exp_id","leg","region","subregion", "ps_site_id","ps_station_id", "Transect","depth_m","scientific_name","Num","size_cm" , "Notes","observer")]
colnames(leg2_invert3)<-c("exp_id","leg","region","subregion", "ps_site_id","ps_station_id", "transect","depth_m","taxa","count","size_cm", "notes", "observer")

setdiff(leg2_invert3$taxa,leg1_invert$taxa)
invert<-rbind(leg1_invert, leg2_invert3)



#write.csv(invert, "~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/raw/benthos/Updated_PNG_2024_leg2_inverts_fieldsheet.csv", row.names = F)



```

### Taxonomy Cleaning

```{r}
# creating column with the c.f species and sp.
invert<- invert %>%
  mutate(cf_sp = ifelse(str_detect(taxa, "cf") | str_detect(taxa, "sp") ,invert$taxa,""))
# Adding this to notes colums
invert$notes<-paste(invert$cf_sp, invert$notes, sep = "    ")
invert$notes<-gsub("NA","",invert$notes)
invert$cf_sp<-NULL

invert$taxa<-gsub(" sp.","",invert$taxa)
invert$taxa<-gsub(" sp","",invert$taxa)
invert$taxa<-gsub(" cf","",invert$taxa)
invert$taxa<-gsub(" 1","",invert$taxa)
invert$taxa<-gsub(" 2","",invert$taxa)
invert$taxa<-gsub(" aff","",invert$taxa)
invert$taxa<-gsub("1","",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Bohadaschia argus","Bohadschia argus",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Calcinus minitus","Calcinus minutus",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Cerithuyum echinatum","Cerithium echinatum",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Cilopagurua strigatus","Ciliopagurus strigatus",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Coraliiophia violacea","Coralliophila violacea",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Culcita novaeangliae","Culcita novaeguineae",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Crinoid","Crinoidea",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Dendrostrea folium","Dendostrea folium",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Fromia monilus","Fromia monilis",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Lambis lambia","Lambis lambis",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Linkia laevigata","Linckia laevigata",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Linkia multifora","Linckia multifora",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Lomia medusa","Loimia medusa",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Panularis versicolor","Panulirus versicolor",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Pearsonothuria graffei","Pearsonothuria graeffei",invert$taxa) 
invert$taxa<-ifelse(invert$taxa == "Pedumndyloideum","Pedum spondyloideum",invert$taxa) # the sp. gsub removal screwed this entry up
invert$taxa<-ifelse(invert$taxa == "Pendumndyloideum","Pedum spondyloideum",invert$taxa) # the sp. gsub removal screwed this entry up
invert$taxa<-ifelse(invert$taxa == "Phyllidia carlsonhOffi","Phyllidia carlsonhoffi",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Phyllidiella carlsonhOffi","Phyllidia carlsonhoffi",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Phyllidiella elegans","Phyllidia elegans",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Pinctata margaritifera","Pinctada margaritifera",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Thelona anax","Thelenota anax",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Thurilla gracilis","Thuridilla gracilis",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Heteractis magnifica","Radianthus magnifica",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Ophiotrix","Ophiothrix",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Colomatulidae","Comatulida",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Thaididae","Muricidae",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Trochus niloticus","Rochia nilotica",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Heteractis paumotensis","Radianthus crispa",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Coraliiophia","Coralliophila",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Drupa ricinus","Sistrum ricinus",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Bohadschia graeffei","Pearsonothuria graeffei",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Thelanota","Thelenota",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Culcita novaeguineae ","Culcita novaeguineae",invert$taxa)
invert$taxa<-ifelse(invert$taxa == "Panularis","Panulirus",invert$taxa)

  
cleanTaxa<-distinct(invert[,c("taxa")])

taxonomy_worms <- cleanTaxa$taxa %>% 
  split(ceiling(seq_along(cleanTaxa$taxa)/20)) %>% 
  furrr::future_map_dfr(worrms::wm_records_names) %>% 
  janitor::clean_names() %>% 
  filter(!is.na(scientificname)) %>% 
  mutate(rank = str_to_lower(rank),
         taxon_id = if_else(!is.na(valid_aphia_id),
                            paste0("WORMS:", valid_aphia_id),                        NA_character_)) %>% 
  select(species = scientificname, status, taxon_valid_name = valid_name, taxon_rank = rank, taxon_id, taxon_authority = valid_authority, kingdom, phylum, class, order, family, genus) %>% 
  distinct()

## Lots of name issues
bad_names<-anti_join(unique(invert[,c("taxa")]), taxonomy_worms[,c("taxon_valid_name")], by = c("taxa" ="taxon_valid_name"))
sort(bad_names$taxa)
# going back to correct and rerun taxaworms function

# Without the bad names, exporting as data file cleaned.
#write.csv(invert, "~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/raw/benthos/Updated_PNG_2024_inverts_fieldsheet.csv", row.names = F)


# what are the duplicates
duped_taxa_worms <- taxonomy_worms %>% 
  janitor::get_dupes(species) 

deduped_taxa_worms <- duped_taxa_worms %>% 
  filter(status %in% c("accepted")) %>% 
  select(-dupe_count)

taxonomy_worms <- taxonomy_worms %>% 
  group_by(species) %>% 
  filter(n() <= 1) %>% # remove duplicates
  bind_rows(deduped_taxa_worms) # add deduped


taxonomy_worms<-as.data.frame(taxonomy_worms[,c("species","genus","family", "order","class","phylum", "taxon_valid_name")])

setdiff(invert$taxa, taxonomy_worms$taxon_valid_name)

```

#### Adding Common Name

```{r}

invert2<-left_join(invert, taxonomy_worms, by = c("taxa" = "species"))

invert2 <- invert2 %>%
    mutate(., common_name = with(., case_when(
        (genus == "Tridacna" | genus == "Hippopus") ~ "Giant clams",
        (genus == "Pinctada") ~ "Pearl oyster" ,
        (genus == "Trochus") ~ "Trochus" ,
        (family == "Plakobranchidae" | family == "Volvatellidae") ~ "Sea slugs",
        (family == "Diogenidae" | family == "Paguridae") ~"Hermit crab",
        (family == "Tetraliidae" | family == "Trapeziidae") ~ "Coral crab",
        (family == "Alpheidae" | family == "Palaemonidae"| family == "Stenopodidae") ~ "Shrimp",
        (family == "Palinuridae" | family == "Scyllaridae") ~ "Lobster",
        (family == "Agalmatidae" | family == "Athorybiidae" | family == "Prayidae" | family == "Forskaliidae" | family == "Diphyidae") ~ "Siphonophore",
       (order == "Antipatharia") ~ "Black coral",
        (order == "Zoantharia") ~ "Zoanthid",
        (order == "Euphausiacea")~ "Krill",
        (order == "Amphipoda")~ "Amphipods",
        (order == "Salpida")~ "Salps",
        (order == "Octopoda")~ "Octopus",
        (order == "Actiniaria") ~ "Sea anenome",
        (order == "Stomatopoda") ~ "Stomatopod",
        (order == "Aplysiida" | order == "Cephalaspidea" | order == "Nudibranchia" | order == "Pleurobranchida") ~ "Sea slugs",
        (order == "Scleractinia") ~ "Hard coral",
        (class == "Copepoda") ~"Copepods",
        (class == "Hexanauplia") ~"Copepods",
        (class == "Thecostraca") ~ "Barnacle",
        (class == "Holothuroidea") ~ "Sea cucumber",
        (class == "Appendicularia") ~"Larvacean",
        (class == "Asteroidea") ~ "Sea stars",
        (class == "Octocorallia") ~"Soft corals",
        (class == "Gastropoda") ~ "Snails",
        (class == "Florideophyceae") ~ "Red algae",
        (class == "Phaeophyceae") ~ "Brown algae",
        (class == "Echinoidea") ~ "Sea urchin",
        (class == "Ophiuroidea") ~ "Brittle stars",
        (class == "Palaeonemertea") ~ "Ribbon worms",
        (class == "Scyphozoa") ~ "Jellyfish",
        (class == "Hydrozoa") ~ "Hydroids",
        (class == "Ascidiacea") ~ "Tunciate",
        (class == "Crinoidea") ~  "Crinoid",
        (class == "Polyplacophora") ~  "Chiton",
        (class == "Cubozoa") ~ "Box jelly",
        (class == "Bivalvia") ~ "Bivalves",
        (phylum == "Annelida") ~ 'Worms',
        (phylum == "Porifera") ~ 'Sponges',
        (phylum == "Nematoda") ~ 'Nematodes',
        (phylum == "Nemertea") ~ 'Ribbon worms',
        (phylum == "Bryozoa") ~ 'Bryozoans',
        (phylum == "Platyhelminthes") ~ "Flat worm",
        (phylum == "Chaetognatha") ~ 'ArrowWorms',
        (phylum == "Porifera") ~ 'Sponges',
        (phylum == "Entoprocta") ~ 'Goblet worms',
        (phylum == "Chlorophyta") ~ "Green algae")))



unk<-subset(invert2, is.na(common_name))
sort(unk$taxa)


```

### Creating TaxaTable

```{r}

invert_taxa<-unique(invert2[,c("common_name","phylum","class","order","family","genus","taxa")])

invert_taxa$species<-invert_taxa$taxa
invert_taxa$species<-ifelse(invert_taxa$genus == invert_taxa$taxa, "", invert_taxa$species)
invert_taxa$species<-ifelse(invert_taxa$family == invert_taxa$taxa, "", invert_taxa$species)
invert_taxa$species<-ifelse(invert_taxa$class == invert_taxa$taxa, "", invert_taxa$species)
invert_taxa<-invert_taxa[,c("common_name","phylum","class","order","family","genus","species", "taxa")]


```

#### Adding IUCN Data

```{r}

# The functions are super picky....need to get a list of species and not blanks or NA can be in that list
# Sorting the species
spp_check<- sort(unique(invert_taxa$species)[-which(unique(invert_taxa$species) %in% c(NA,""))])


# this function is grabbing the lists within lists of the crazy annoting IUCN data and needs to be within the loop. Unfortunately, if the species is not known or hasn't been reviewed for IUCN, the function iucn_status which you use after you create a list of list from your species using iucn_summary from taxize won't work because there's an NA. It's irritable. Anyway, this was the only work aronud I could make work.

get_elements <- function(x, element) {
  if(is.list(x))
  {
    if(element %in% names(x)) x[[element]]
    else lapply(x, get_elements, element = element)
  }
}

share_list = list()
for ( i in 1:length(spp_check)){
  # grabbing the iucn_summary data for each species individually 
    # even if it's NA, it will save into the sharelist
  check<-iucn_summary(spp_check[i]) 
 x<- get_elements(check, "red_list_category")
 y<-unlist(get_elements(x, "code"))
   share_list[i]<-do.call(rbind, lapply(y, data.frame))
}
# now have to convert the NA to a value cause otherwise when you unlist, it removes all the NA preventing you from merging back to the dataframe
is.na(share_list) <- lengths(share_list) == 0
# unlisting the list to a dataframe
iucn_result<-as.data.frame(unlist(share_list))
# creating a column name to then merge
colnames(iucn_result)<-"iucn_status"
# Need to add a row to the end because the last row was an NA and not added to the list in the loop
iucn_result[nrow(iucn_result)+1,] <-NA
# adding the species data back
iucn_result$species<-spp_check

# merging to dataframe
invert_taxa_table<-left_join(invert_taxa, iucn_result, by = "species")
# replacing NA with 0
invert_taxa_table[is.na(invert_taxa_table) ]<- ""

```

### Calculating Transect areas

```{r}
# Getting the area for leg 1. There were not two transects at each site and unfortunately this was not captured in the datasheet

one_depth<-c("PNG_2024_uvs_026","PNG_2024_uvs_029","PNG_2024_uvs_030","PNG_2024_uvs_031","PNG_2024_uvs_032","PNG_2024_uvs_036","PNG_2024_uvs_037","PNG_2024_uvs_038","PNG_2024_uvs_039","PNG_2024_uvs_040","PNG_2024_uvs_041","PNG_2024_uvs_042")

transects_leg1<-as.data.frame(one_depth) %>%
  mutate(area_m2 = "50")%>%
  `colnames<-`(c("ps_site_id","area_m2"))

leg1_transect_area<-sites$uvs %>%
  filter(inverts == T) %>%
  left_join(.,transects_leg1, by = "ps_site_id") %>%
  select(ps_site_id, area_m2) %>%
  mutate(n_transects = ifelse(is.na(area_m2),"2","1")) %>%
  mutate(area_m2 = ifelse(is.na(area_m2), "100", area_m2)) %>%
  distinct(ps_site_id,n_transects,area_m2)


# Getting the area for leg 2. The number of transect could vary between 2 and 3
# Jen said her transects were 25 x 2 so each is 50m2
leg2_transect_area<-stations$fish %>%
  filter(diver == "JEC") %>%
  distinct(ps_site_id, n_transects) %>%
  mutate(area_m2 = n_transects*50)

# merging them together to get all area for resource invert calculations, the one thing that unifies leg 1 and leg 2 inverts

invert_transect_area<-rbind(leg1_transect_area, leg2_transect_area) %>%
  mutate(area_m2 = as.numeric(area_m2))


```

## UVS Inverts - Densities

```{r}

invert_leg1_avg_by_site <- invert2 %>% 
  filter(transect != "Off") %>%
  filter(leg == "leg 1") %>%
  group_by(ps_site_id , common_name, taxon_valid_name) %>%
    dplyr::summarise(n_individuals = n())%>%
      left_join(.,invert_transect_area, by  = "ps_site_id") %>%
  as.data.frame()
# Can't seem to pipe the damn density!!!
invert_leg1_avg_by_site$area_m2<-as.numeric(invert_leg1_avg_by_site$area_m2)
invert_leg1_avg_by_site$ind_m2<-invert_leg1_avg_by_site$n_individuals/invert_leg1_avg_by_site$area_m2


invert_leg1_avg_by_station <- invert2 %>% 
  filter(transect != "Off") %>%
   filter(leg == "leg 1") %>%
  group_by(ps_station_id, common_name, taxa) %>%
  dplyr::summarise(n_individuals = n())%>%
  group_by(ps_station_id, common_name, taxa, n_individuals) %>%
  dplyr::summarise(ind_m2 = n_individuals/50)

### Giant Clams and Sea Cucumnbers to merge Leg1 and Leg 2
resource_inverts_avg_by_site<-raw_cleaned_inverts %>%
    filter(common_name == "Giant clams" | common_name == "Sea cucumber" & transect != "Off") %>%
  group_by(leg, ps_site_id, common_name)%>%
   dplyr::summarise(n_individuals = n()) %>%
  left_join(invert_transect_area, by = "ps_site_id")%>%
  mutate(ind_m2 = round(n_individuals/area_m2,2))


# renaming main file 
raw_cleaned_inverts<-invert2


save(invert_leg1_avg_by_site, invert_leg1_avg_by_station, resource_inverts_avg_by_site,invert_taxa_table, raw_cleaned_inverts,invert_transect_area, file = "~/Google Drive/My Drive/Pristine Seas/SCIENCE/expeditions/PNG-2024/data/primary/processed/invert/PNG_2024_uvs_invert.RData")
# 


```
